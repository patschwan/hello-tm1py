{"Name": "Allocation Calculation", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('Allocation List')", "Dimensions('Year')", "Dimensions('Month')", "Dimensions('Version')", "Dimensions('Allocation Calculation')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\nUNDEFVALS;\nSKIPCHECK;\nUNDEFVALS;\nFEEDSTRINGS;\n\n\n['Credit Amount']=N:IF(ATTRS('Organization',DIMNM('Organization',DIMIX('Organization',!Organization)),'Caption_Default')@=\n\t\t\tDB('Allocation Source Definition',!Allocation List,!Year,!Version,'Source Entity'),\n\t\t\t['Allocation Amount']*-1 ,0);\n\n['Allocated Amount']=N:['Allocation Amount']*['Ratio'];\n\n['Total Driver']=['Total Company','Driver'];\n\n['Driver','Q1']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='FTE',['Driver','Mar'],CONTINUE);\n['Driver','Q2']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='FTE',['Driver','Jun'],CONTINUE);\n['Driver','Q3']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='FTE',['Driver','Sep'],CONTINUE);\n['Driver','Q4']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='FTE',['Driver','Dec'],CONTINUE);\n['Driver','Year']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='FTE',['Driver','Dec'],CONTINUE);\n\n['Driver','Q1']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='Square Footage',['Driver','Mar'],CONTINUE);\n['Driver','Q2']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='Square Footage',['Driver','Jun'],CONTINUE);\n['Driver','Q3']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='Square Footage',['Driver','Sep'],CONTINUE);\n['Driver','Q4']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='Square Footage',['Driver','Dec'],CONTINUE);\n['Driver','Year']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='Square Footage',['Driver','Dec'],CONTINUE);\n\n['Driver','Q1']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='Server Space',['Driver','Mar'],CONTINUE);\n['Driver','Q2']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='Server Space',['Driver','Jun'],CONTINUE);\n['Driver','Q3']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='Server Space',['Driver','Sep'],CONTINUE);\n['Driver','Q4']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='Server Space',['Driver','Dec'],CONTINUE);\n['Driver','Year']=IF(DB('Allocation Calculation',!organization,!Allocation List,!Year,!Month,!Version,'Allocation Driver')@='Server Space',['Driver','Dec'],CONTINUE);\n\n['Driver']=N:IF(SUBST(DB('Allocation Calculation',!Organization,!Allocation List,!Year,'Year',!Version,'Exclude Entity'),1,1)@='Y',0,\nDB('Income Statement','Base',!Organization,!Year,!Month,DB('Allocation Source Definition',!Allocation List,!Year,!Version,'Allocation Driver'),!Version) );\n\n['Exclude Entity']=S:IF(ATTRS('Organization',DIMNM('Organization',DIMIX('Organization',!Organization)),'Caption_Default')@=\n\t\t\tDB('Allocation Source Definition',!Allocation List,!Year,!Version,'Source Entity'),\n\t\t\t'Y',STET);\n\n['Allocation Amount']= DB('Income Statement','Base',DB('Allocation Source Definition',!Allocation List,!Year,!Version,'Source Entity'),!Year,!Month,DB('Allocation Source Definition',!Allocation List,!Year,!Version,'Source Account'),!Version)\n                                   * DB('Allocation Source Definition',!Allocation List,!Year,!Version,'Pct to Allocate');\n\n\n\n#[{'Source Entity','Source Account','Allocation Driver'}] = S: DB('Allocation Source Definition',!Allocation List,!Year,!Version,!Allocation Calculation);\n\n#Region N-Calculation rules: Dimension:Allocation Calculation\n#Autogenerated CALC NUMERIC 416C6C6F636174696F6E2043616C63756C6174696F6E\n   #Region Dimension:Allocation Calculation, Member:Ratio\n   #Autogenerated MEMBERCALC NUMERIC 5B416C6C6F636174696F6E2043616C63756C6174696F6E5D2E5B526174696F5D\n   ['Allocation Calculation':'Ratio']=N:(['Allocation Calculation':'Driver']\\['Allocation Calculation':'Total Driver']);\n   #EndRegion\n   #Region Dimension:Allocation Calculation, Member:Allocated Amount\n   #Autogenerated MEMBERCALC NUMERIC 5B416C6C6F636174696F6E2043616C63756C6174696F6E5D2E5B416C6C6F636174656420416D6F756E745D\n   ['Allocation Calculation':'Allocated Amount']=N:(['Allocation Calculation':'Allocation Amount']*['Allocation Calculation':'Ratio']);\n   #EndRegion\n#EndRegion\n\n#Region Link rule: Allocation Calculation:Allocation Source Definition - String\n#Source cube: Allocation Source Definition\n#Target cube: Allocation Calculation\n#Autogenerated LINK STRING 7D4C696E6B5F416C6C6F636174696F6E2043616C63756C6174696F6E5F3341416C6C6F636174696F6E20536F7572636520446566696E6974696F6E\n['Allocation Calculation':{'Allocation Driver','Source Entity','Source Account'}] = S:DB('Allocation Source Definition',\n    !Allocation List, !Year, !Version, ATTRS('Allocation Calculation',\n    !Allocation Calculation, '}Map_}Link_Allocation Calculation_3AAllocation Source Definition'));\n#EndRegion\n\n#Region C-Calculation rules: Dimension:Allocation Calculation\n#Autogenerated CALC CONSOLIDATED 416C6C6F636174696F6E2043616C63756C6174696F6E\n   #Region Dimension:Allocation Calculation, Member:Ratio\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B416C6C6F636174696F6E2043616C63756C6174696F6E5D2E5B526174696F5D\n   ['Allocation Calculation':'Ratio']=C:(['Allocation Calculation':'Driver']\\['Allocation Calculation':'Total Driver']);\n   #EndRegion\n#EndRegion\n\nFEEDERS;\n\n['Driver']=>['Ratio'];\n['Allocation Amount']=>['Allocated Amount'],['Total Driver'];\n['Allocation Amount']=>DB(IF(ATTRS('Organization',DIMNM('Organization',DIMIX('Organization',!Organization)),'Organization Description')@=\n\t\t\tDB('Allocation Source Definition',!Allocation List,!Year,!Version,'Source Entity'),'Allocation Calculation',''),!Organization,!Allocation List,!Year,!Month,!Version,'Exclude Entity');\n['Exclude Entity']=>['Credit Amount'];\n\n\n\n\n#Region FEED The Income Statement\n['Credit Amount']=>DB(IF(ATTRS('Version',!Version,'Version Type') @= 'B' %\n                        ATTRS('Version',!Version,'Version Type') @= 'A' %\n                        ATTRS('Version',!Version,'Version Type') @= 'T'\n                   ,'Income Statement',''), 'Local', !organization,!Year, !Month, '6610', !Version);\n['Allocated Amount']=>DB(IF(ATTRS('Version',!Version,'Version Type') @= 'B' %\n                        ATTRS('Version',!Version,'Version Type') @= 'A' %\n                        ATTRS('Version',!Version,'Version Type') @= 'T'\n                      ,'Income Statement',''), 'Local', !organization,!Year, !Month, '6600', !Version);\n#EndRegion"}
{"Name": "Allocation Source Definition", "Dimensions@odata.bind": ["Dimensions('Allocation List')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Allocation Source Definition')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n#UNDEFVALS;\n\n['zSource']=S:DB('Allocation Source Definition',!Allocation List,!Year,!Version,'Source Entity');\n\n['Source Amount'] = N:DB('Income Statement','Local',DB('Allocation Source Definition',!Allocation List,!Year,!Version,'Source Entity'),!Year,'Year',DB('Allocation Source Definition',!Allocation List,!Year,!Version,'Source Account'),!Version);\n\n['Allocation Amount']=N:['Source Amount']*['Pct to Allocate'];\n['All Allocations','Pct to Allocate']= c:0;\n\nFEEDERS;\n\n['Source Entity']=>['zSource'];\n\n['Source Account']=>['Source Amount'],['Allocation Amount'];\n['Source Account']=>DB('Allocation Calculation','Total Company',!Allocation List,!Year,'Year',!Version,'Allocation Amount');\n['Source Account']=>DB('Allocation Calculation','Total Company',!Allocation List,!Year,'Year',!Version,'Driver');\n['Source Account']=>DB('Allocation Calculation','Total Company',!Allocation List,!Year,'Year',!Version,'Exclude Entity');"}
{"Name": "Asset Life", "Dimensions@odata.bind": ["Dimensions('Asset Types')", "Dimensions('Version')", "Dimensions('Asset Life')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n\nFEEDERS;"}
{"Name": "Benefit Assumptions", "Dimensions@odata.bind": ["Dimensions('Year')", "Dimensions('Version')", "Dimensions('Benefit')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n\nFEEDERS;\n\n\n#Region FEED The Income Statement for Payroll\n# Salary\n['Medicare']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''), 'Local', 'Total Company', !Year, 'Year','6000', !Version);\n# Bonus\n['Medicare']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''), 'Local', 'Total Company', !Year, 'Year','6005', !Version);\n# Benefits\n['Medicare']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''), 'Local', 'Total Company', !Year, 'Year','6010', !Version);\n# Employer Taxes\n['Medicare']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''), 'Local', 'Total Company', !Year, 'Year','6015', !Version);\n# Headcount\n['Medicare']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''), 'Local', 'Total Company', !Year, 'Year','FTE', !Version);\n#EndRegion\n\n#Region FEED The Income Statement for Depreciation\n['Medicare']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''),'Local', 'Total Company', !Year, 'Year', '6510', !Version);\n['Medicare']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''),'Local', 'Total Company', !Year, 'Year', '6520', !Version);\n#EndRegion\n\n#Region FEED The Income Statement for Revenue\n['Medicare']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''),'Local', 'Total Company', !Year, 'Year', '4999', !Version);\n['Medicare']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''),'Local', 'Total Company', !Year, 'Year', '5999', !Version);\n#EndRegion\n\n#Region FEED the Income Statement for Line Item Detail\n['Medicare']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''), 'Local', 'Total Company', !Year, 'Year', '6400', !Version);\n['Medicare']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''), 'Local', 'Total Company', !Year, 'Year', '6410', !Version);\n#EndRegion"}
{"Name": "Calendar", "Dimensions@odata.bind": ["Dimensions('Calendar')", "Dimensions('String')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n#skipcheck;\n['Current Quarter']=S:ELPAR('Month', DB('Calendar','Current Month','String'), 1) ;\n\n#feeders;"}
{"Name": "Capital", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('CapitalList')", "Dimensions('Asset Types')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Capital')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\nUNDEFVALS;\n\n#Region Blanck Out Asset Life at Total\n['Life','Total']=c:0;\n#EndRegion\n\n#Region N-Calculation rules: Dimension:Capital\n#Autogenerated CALC NUMERIC 4361706974616C\n   #Region Dimension:Capital, Member:Monthly Expense\n   #Autogenerated MEMBERCALC NUMERIC 5B4361706974616C5D2E5B4D6F6E74686C7920457870656E73655D\n   ['Capital':'Monthly Expense']=N:(['Capital':'Purchase Cost']\\['Capital':'Life']);\n   #EndRegion\n#EndRegion\n\n#Region Link rule: Capital:AssetLife - Numeric\n#Source cube: Asset Life\n#Target cube: Capital\n#Autogenerated LINK NUMERIC 7D4C696E6B5F4361706974616C5F334141737365744C696665\n['Capital':'Life'] = N:DB('Asset Life', !Asset Types, !Version, \n    'Asset Life');\n#EndRegion\n\nFEEDERS;\n\n\n\n\n\n#Region Depreciation Cube\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'Cost Beg Bal');\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'Addiitons');\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'YTD Additions');\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'In Service');\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'YTD In Service');\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'Adjustments');\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'Cost End Bal');\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'Depr Beg Bal');\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'6520 Depr on Additions');\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'Depr Adjustments');\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'6510 Depr on Existing Assets');\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'Total Depreciation');\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'Depr End Bal');\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'Asset Beg Bal');\n['Purchase Cost']=>DB('Depreciation',!organization,!Asset Types,'Year',!Year,!Version,'Asset End Bal');"}
{"Name": "Compensation", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('EmployeeList')", "Dimensions('Month')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Compensation')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\nUNDEFVALS;\n\n#Region N-Calculation rules: Dimension:Compensation\n#Autogenerated CALC NUMERIC 436F6D70656E736174696F6E\n   #Region Dimension:Compensation, Member:YTD Salary & Bonus\n   #Autogenerated MEMBERCALC NUMERIC 5B436F6D70656E736174696F6E5D2E5B5954442053616C617279202620426F6E75735D\n   ##CUMULATE : calculates the cumulative totals in output member cell based on the orginal values in the input member cell\n   ['Compensation':'YTD Salary & Bonus']=N:DB('Compensation', !organization, !EmployeeList, !Month, !Year, !Version, 'Monthly Salary & Bonus')+DB('Compensation', !organization, !EmployeeList, ATTRS('Month', !Month, 'previousperiod'), !Year, !Version, 'YTD\n   Salary & Bonus');\n   #EndRegion\n#EndRegion\n#Region Compensation Calculations\n\n['FTE']=N:DB('Employee',!Organization,!EmployeeList,!Year,!Version,!Month)\\DB('Employee',!Organization,!EmployeeList,!YEar,!Version,!Month)\n*DB('Employee',!Organization,!EmployeeList,!Year,!Version,'FTE');\n['6000']=N:DB('Employee',!Organization,!EmployeeList,!Year,!Version,!Month);\n['6005']=N:DB('Job Type Assumption',DB('Employee',!Organization,!EmployeeList,!Year,!Version,'Job Type'),!Year,!Version,'Bonus %')\\100*['6000'];\n['Medical Exp']=N:['FTE']*DB('Benefit Assumptions',!Year,!Version,'Medical');\n['Other Benefits Exp']=N:['6000']*DB('Benefit Assumptions',!Year,!Version,'Other Benefits Rate')\\100;\n['Medicare Exp']=N:['6000']*DB('Benefit Assumptions',!Year,!Version,'Medicare')\\100;\n['FICA Exp']=N:IF(['YTD Salary & Bonus']<DB('Benefit Assumptions',!Year,!Version,'FICA Limit'),['Monthly Salary & Bonus']*DB('Benefit Assumptions',!Year,!Version,'FICA')\\100,\nIF(DB('Compensation',!Organization,!EmployeeList,ATTRS('Month',!Month,'Previousperiod'),!Year,!Version,'YTD Salary & Bonus')<DB('Benefit Assumptions',!Year,!Version,'FICA Limit'),\n(DB('Benefit Assumptions',!Year,!Version,'FICA Limit')-DB('Compensation',!Organization,!EmployeeList,ATTRS('Month',!Month,'Previousperiod'),!Year,!Version,'YTD Salary & Bonus'))*DB('Benefit Assumptions',!Year,!Version,'FICA')\\100,0));\n#EndRegion\n\n#Region C-Calculation rules: Dimension:Compensation\n#Autogenerated CALC CONSOLIDATED 436F6D70656E736174696F6E\n   #Region Dimension:Compensation, Member:FTE\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B436F6D70656E736174696F6E5D2E5B4654455D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Compensation':{'FTE'}]=C:IF(DIMIX('Month', ATTRS('Month', !Month, 'la\n   stperiod'))>0,\n   DB('Compensation', !organization, !EmployeeList, ATTRS('Month', !Month, 'lastperiod'), !Year, !Version, 'FTE'),\n   DB('Compensation', !organization, !EmployeeList, ELCOMP('Month', !Month, ELCOMPN('Month', !Month)), !Year, !Version, 'FTE'));\n   #EndRegion\n#EndRegion\n['EmpID']=S:DB('Employee',!organization,!EmployeeList,!Year,!Version,'EmpID');\n\n\nFEEDERS;\n\n['Monthly Salary & Bonus']=>['YTD Salary & Bonus'];\n[{'Y1','Y2','Y3'}]=>DB('Compensation Reporting','Total Employees',!organization,!EmployeeList,!Month,'Y2',!Version,!Compensation);\n\n#Region FEED The Income Statement\n# Salary\n#['6000']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''), 'Local', !organization, !Year, !Month,'6000', !Version);\n# Bonus\n#['6005']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''), 'Local', !organization, !Year, !Month,'6005', !Version);\n# Benefits\n#['6010']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''), 'Local', !organization, !Year, !Month,'6010', !Version);\n# Employer Taxes\n#['6015']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''), 'Local', !organization, !Year, !Month,'6015', !Version);\n# Headcount\n#['FTE']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''), 'Local', !organization, !Year, !Month,'FTE', !Version);\n#EndRegion"}
{"Name": "Compensation Reporting", "Dimensions@odata.bind": ["Dimensions('Employee Name')", "Dimensions('organization')", "Dimensions('EmployeeList')", "Dimensions('Month')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Compensation')"], "Rules": "SKIPCHECK;\n\n\n[]=if(!Employee Name @=DB('Compensation',!organization,!EmployeeList,!Month,!Year,!Version,'EmpID'),DB('Compensation',!organization,!EmployeeList,!Month,!Year,!Version,!Compensation),STET);\n\nFEEDERS;\n"}
{"Name": "Depreciation", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('Asset Types')", "Dimensions('Month')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Depreciation')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\nUNDEFVALS;\n#UNDEFVALS;\n\n#Region N-Calculation rules: Dimension:Depreciation\n#Autogenerated CALC NUMERIC 446570726563696174696F6E\n   #Region Dimension:Depreciation, Member:YTD Additions\n   #Autogenerated MEMBERCALC NUMERIC 5B446570726563696174696F6E5D2E5B595444204164646974696F6E735D\n   ##CUMULATE : calculates the cumulative totals in output member cell based on the orginal values in the input member cell\n   ['Depreciation':'YTD Additions']=N:DB('Depreciation', !organization, !Asset Types, !Month, !Year, !Version, 'Additions')+DB('Depreciation', !organization, !Asset Types, ATTRS('Month', !Month, 'previousperiod'), !Year, !Version, 'YTD Additions');\n   #EndRegion\n   #Region Dimension:Depreciation, Member:YTD In Service\n   #Autogenerated MEMBERCALC NUMERIC 5B446570726563696174696F6E5D2E5B59544420496E20536572766963655D\n   ##CUMULATE : calculates the cumulative totals in output member cell based on the orginal values in the input member cell\n   ['Depreciation':'YTD In Service']=N:DB('Depreciation', !organization, !Asset Types, !Month, !Year, !Version, 'In Service')+DB('Depreciation', !organization, !Asset Types, ATTRS('Month', !Month, 'previousperiod'), !Year, !Version, 'YTD In Service');\n   #EndRegion\n   #Region Dimension:Depreciation, Member:Cost End Bal\n   #Autogenerated MEMBERCALC NUMERIC 5B446570726563696174696F6E5D2E5B436F737420456E642042616C5D\n   ['Depreciation':'Cost End Bal']=N:((['Depreciation':'Cost Beg Bal']+['Depreciation':'In Service'])+['Depreciation':'Adjustments']);\n   #EndRegion\n#EndRegion\n\n#Region C-Calculation rules: Dimension:Depreciation\n#Autogenerated CALC CONSOLIDATED 446570726563696174696F6E\n   #Region Dimension:Depreciation, Member:YTD Additions\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B446570726563696174696F6E5D2E5B595444204164646974696F6E735D\n   ##CUMULATE : calculates the cumulative totals in output member cell based on the orginal values in the input member cell\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Depreciation':{'YTD Additions'}]=C:IF(DIMIX('Month', ATTRS('Month', !\n   Month, 'lastperiod'))>0,\n   DB('Depreciation', !organization, !Asset Types, ATTRS('Month', !Month, 'lastperiod'), !Year, !Version, 'YTD Additions'),\n   DB('Depreciation', !organization, !Asset Types, ELCOMP('Month', !Month, ELCOMPN('Month', !Month)), !Year, !Version, 'YTD Additions'));\n   #EndRegion\n   #Region Dimension:Depreciation, Member:YTD In Service\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B446570726563696174696F6E5D2E5B59544420496E20536572766963655D\n   ##CUMULATE : calculates the cumulative totals in output member cell based on the orginal values in the input member cell\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Depreciation':{'YTD In Service'}]=C:IF(DIMIX('Month', ATTRS('Month', \n   !Month, 'lastperiod'))>0,\n   DB('Depreciation', !organization, !Asset Types, ATTRS('Month', !Month, 'lastperiod'), !Year, !Version, 'YTD In Service'),\n   DB('Depreciation', !organization, !Asset Types, ELCOMP('Month', !Month, ELCOMPN('Month', !Month)), !Year, !Version, 'YTD In Service'));\n   #EndRegion\n   #Region Dimension:Depreciation, Member:Cost End Bal\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B446570726563696174696F6E5D2E5B436F737420456E642042616C5D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Depreciation':{'Cost End Bal'}]=C:IF(DIMIX('Month', ATTRS('Month', !M\n   onth, 'lastperiod'))>0,\n   DB('Depreciation', !organization, !Asset Types, ATTRS('Month', !Month, 'lastperiod'), !Year, !Version, 'Cost End Bal'),\n   DB('Depreciation', !organization, !Asset Types, ELCOMP('Month', !Month, ELCOMPN('Month', !Month)), !Year, !Version, 'Cost End Bal'));\n   #EndRegion\n   #Region Dimension:Depreciation, Member:Depr Beg Bal\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B446570726563696174696F6E5D2E5B44657072204265672042616C5D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Depreciation':{'Depr Beg Bal'}]=C:IF(DIMIX('Month', ATTRS('Month', !M\n   onth, 'firstperiod'))>0,\n   DB('Depreciation', !organization, !Asset Types, ATTRS('Month', !Month, 'firstperiod'), !Year, !Version, 'Depr Beg Bal'),\n   DB('Depreciation', !organization, !Asset Types, ELCOMP('Month', !Month, 1), !Year, !Version, 'Depr Beg Bal'));\n   #EndRegion\n   #Region Dimension:Depreciation, Member:Depr End Bal\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B446570726563696174696F6E5D2E5B4465707220456E642042616C5D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Depreciation':{'Depr End Bal'}]=C:IF(DIMIX('Month', ATTRS('Month', !M\n   onth, 'lastperiod'))>0,\n   DB('Depreciation', !organization, !Asset Types, ATTRS('Month', !Month, 'lastperiod'), !Year, !Version, 'Depr End Bal'),\n   DB('Depreciation', !organization, !Asset Types, ELCOMP('Month', !Month, ELCOMPN('Month', !Month)), !Year, !Version, 'Depr End Bal'));\n   #EndRegion\n   #Region Dimension:Depreciation, Member:Asset Beg Bal\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B446570726563696174696F6E5D2E5B4173736574204265672042616C5D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Depreciation':{'Asset Beg Bal'}]=C:IF(DIMIX('Month', ATTRS('Month', !\n   Month, 'firstperiod'))>0,\n   DB('Depreciation', !organization, !Asset Types, ATTRS('Month', !Month, 'firstperiod'), !Year, !Version, 'Asset Beg Bal'),\n   DB('Depreciation', !organization, !Asset Types, ELCOMP('Month', !Month, 1), !Year, !Version, 'Asset Beg Bal'));\n   #EndRegion\n   #Region Dimension:Depreciation, Member:Asset End Bal\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B446570726563696174696F6E5D2E5B417373657420456E642042616C5D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Depreciation':{'Asset End Bal'}]=C:IF(DIMIX('Month', ATTRS('Month', !\n   Month, 'lastperiod'))>0,\n   DB('Depreciation', !organization, !Asset Types, ATTRS('Month', !Month, 'lastperiod'), !Year, !Version, 'Asset End Bal'),\n   DB('Depreciation', !organization, !Asset Types, ELCOMP('Month', !Month, ELCOMPN('Month', !Month)), !Year, !Version, 'Asset End Bal'));\n   #EndRegion\n#EndRegion\n\n#Region Link rule: Dep:Cap_Additions - Numeric\n#Source cube: Capital\n#Target cube: Depreciation\n#Autogenerated LINK NUMERIC 7D4C696E6B5F4465705F33414361705F4164646974696F6E73\n['Depreciation':'Additions'] = N:(DB('}ICube_}Link_Dep_3ACap_Additions',\n    !Month, !organization, '1', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_Additions',\n    !Month, !organization, '2', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_Additions',\n    !Month, !organization, '3', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_Additions',\n    !Month, !organization, '4', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_Additions',\n    !Month, !organization, '5', !Asset Types, !Year, !Version,\n    'Purchase Cost'));\n#EndRegion\n\n#Region Link rule: Dep:Cap_InService - Numeric\n#Source cube: Capital\n#Target cube: Depreciation\n#Autogenerated LINK NUMERIC 7D4C696E6B5F4465705F33414361705F496E53657276696365\n['Depreciation':'In Service'] = N:(DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '1', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '2', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '3', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '4', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '5', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '6', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '7', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '8', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '9', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '10', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '11', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '12', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '13', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '14', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '15', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '16', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '17', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '18', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '19', !Asset Types, !Year, !Version,\n    'Purchase Cost') + DB('}ICube_}Link_Dep_3ACap_InService',\n    !Month, !organization, '20', !Asset Types, !Year, !Version,\n    'Purchase Cost'));\n#EndRegion\n\n#Region Custom Calc\n   #Region Beb Bal\n   ['Cost Beg Bal']=N:IF((ATTRN('Year',!Year,'Index')=1 & DIMIX('Month',!Month) =3),STET,CONTINUE);\n      ['Cost Beg Bal']=N:IF(DIMIX('Month',!Month)=3,\n   DB('Depreciation',!Organization,!Asset Types,'Dec',ATTRS('Year',!Year,'Prev'),!Version,'Cost End Bal'),\n   DB('Depreciation',!Organization,!Asset Types,ATTRS('Month',!Month,'previousperiod'),!Year,!Version,'Cost End Bal'));\n   #EndRegion\n   #Region Depreciation\n      ['Depr Beg Bal']=N:IF((ATTRN('Year',!Year,'Index')=1 & DIMIX('Month',!Month) =3),STET,CONTINUE);\n      ['Depr Beg Bal']=N:IF(DIMIX('Month',!Month)=3,\n   DB('Depreciation',!Organization,!Asset Types,'Dec',ATTRS('Year',!Year,'Prev'),!Version,'Depr End Bal'),\n   #\t\t\t\t\tDB('Depreciation Calc',!Version,!Asset Types,!Organization,ATTRS('Year',!Year,'Prev'),'Depr End Bal','Dec'),\n      DB('Depreciation',!organization,!Asset Types,ATTRS('Month',!Month,'previousperiod'),!Year,!Version,'Depr End Bal'));\n   #\t\t\t\t\tDB('Depreciation Calc',!Version,!Asset Types,!Organization,!Year,'Depr End Bal',ATTRS('Month',!Month,'Prev')));\n      ['6520 Depr on Additions']=N:['YTD In Service'] \\ DB('Asset Life',!Asset Types,!Version,'Asset Life');\n            ['Total Depreciation']=N:['6520 Depr on Additions'] + ['6510 Depr on Existing Assets'];\n      ['Depr End Bal']=N:['Depr Beg Bal'] + ['Total Depreciation'];\n   #===============================BALANCE SHEET=========================================\n      ['Asset Beg Bal']=N:IF((ATTRN('Year',!Year,'Index')=1 & DIMIX('Month',!Month) =3),STET,CONTINUE);\n      ['Asset Beg Bal']=N:IF(DIMIX('Month',!Month)=3,\n   DB('Depreciation',!Organization,!Asset Types,'Dec',ATTRS('Year',!Year,'Prev'),!Version,'Asset End Bal'),\n   #\t\t\t\t\tDB('Depreciation Calc',!Version,!Asset Types,!Organization,ATTRS('Year',!Year,'Prev'),'Asset End Bal','Dec'),\n      DB('Depreciation',!Organization,!Asset Types,ATTRS('Month',!Month,'previousperiod'),!Year,!Version,'Asset End Bal'));\n   #\t\t\t\t\tDB('Depreciation Calc',!Version,!Asset Types,!Organization,!Year,'Asset End Bal',ATTRS('Month',!Month,'Prev')));\n      ['Asset End Bal']=N:['Asset Beg Bal'] + ['Additions']-['Total Depreciation'];\n   #EndRegion\n\n\n\n#EndRegion\n\n\n\nFEEDERS;\n\n\n#Region FEED The Income Statement\n#['6510']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''),'Local', !organization, !Year, !Month, '6510', !Version);\n#['6520']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''),'Local', !organization, !Year, !Month, '6520', !Version);\n#EndRegion"}
{"Name": "Employee", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('EmployeeList')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Employee')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n#UNDEFVALS;\n\n['MeritValidation']=S:\nIF(((DB('Employee',!organization,!EmployeeList,!Year,!Version,'Salary')<>0) & (DB('Employee',!organization,!EmployeeList,!Year,!Version,'Start Pd')@='')& (DB('Employee',!organization,!EmployeeList,!Year,!Version,'FTE')<>0)),\nIF(DB('Employee',!organization,!EmployeeList,!Year,!Version,'Merit Pd')@='','Check','OK'),'OK');\n\n['FTEValidation']=S:IF(((DB('Employee',!organization,!EmployeeList,!Year,!Version,'FTE')=0) & (DB('Employee',!organization,!EmployeeList,!Year,!Version,'Start Pd')@='')),\n'OK',IF(((DB('Employee',!organization,!EmployeeList,!Year,!Version,'FTE')=0) & (DB('Employee',!organization,!EmployeeList,!Year,!Version,'Start Pd')@<>'')),'Check','OK'));\n\n['Validation']=N:\nIF((DB('Employee',!organization,!EmployeeList,!Year,!Version,'MeritValidation')@='Check') % (DB('Employee',!organization,!EmployeeList,!Year,!Version,'FTEValidation')@='Check'),1,0);\n\n['ValidationFlag']=S:IF(['Validation']<>0,'Validation Error - Check highlighted employees','Input Valid');\n\n\n['RowFormat']=S:IF(ELLEV('EmployeeList',!EmployeeList)=0,\nIF(['Validation']<>0,IF((DB('Employee',!organization,!EmployeeList,!Year,!Version,'MeritValidation')@='Check') & (DB('Employee',!organization,!EmployeeList,!Year,!Version,'FTEValidation')@='Check'),'D',\n\nIF(DB('Employee',!organization,!EmployeeList,!Year,!Version,'MeritValidation')@='Check','F','M')),\n\nSTR(ELLEV('EmployeeList',!EmployeeList),1,0)),STR(ELLEV('EmployeeList',!EmployeeList),1,0));\n\n#Region Link rule: Emp:JCAsmpt - String\n#Source cube: Job Code Assumptions\n#Target cube: Employee\n#Autogenerated LINK STRING 7D4C696E6B5F456D705F33414A4341736D7074\n[] = S:IF(DIMIX('JobCodeAsmpt', !Employee) <> 0, DB('Job Code Assumptions',\n    DB('Employee', !organization, !EmployeeList, !Year, !Version,\n    'Job Code'), !Employee, !Year, !Version), CONTINUE);\n#EndRegion\n\n#Region Link rule: Emp:JCAsmpt - Numeric\n#Source cube: Job Code Assumptions\n#Target cube: Employee\n#Autogenerated LINK NUMERIC 7D4C696E6B5F456D705F33414A4341736D7074\n[] = N:IF(DIMIX('JobCodeAsmpt', !Employee) <> 0, DB('Job Code Assumptions',\n    DB('Employee', !organization, !EmployeeList, !Year, !Version,\n    'Job Code'), !Employee, !Year, !Version), CONTINUE);\n#EndRegion\n\n#Region Link rule: Emp:JTAsmpt - String\n#Source cube: Job Type Assumption\n#Target cube: Employee\n#Autogenerated LINK STRING 7D4C696E6B5F456D705F33414A5441736D7074\n[] = S:IF(DIMIX('JobTypeAssumption', !Employee) <> 0, DB('Job Type Assumption',\n    DB('Employee', !organization, !EmployeeList, !Year, !Version,\n    'Job Type'), !Year, !Version, !Employee), CONTINUE);\n#EndRegion\n\n#Region Link rule: Emp:JTAsmpt - Numeric\n#Source cube: Job Type Assumption\n#Target cube: Employee\n#Autogenerated LINK NUMERIC 7D4C696E6B5F456D705F33414A5441736D7074\n[] = N:IF(DIMIX('JobTypeAssumption', !Employee) <> 0, DB('Job Type Assumption',\n    DB('Employee', !organization, !EmployeeList, !Year, !Version,\n    'Job Type'), !Year, !Version, !Employee), CONTINUE);\n#EndRegion\n\n#Region Link rule: Emp:Comp - Numeric\n#Source cube: Compensation\n#Target cube: Employee\n#Autogenerated LINK NUMERIC 7D4C696E6B5F456D705F3341436F6D70\n['Employee':'Total Cost'] = N:DB('Compensation', !organization,\n    !EmployeeList, 'Year', !Year, !Version, 'Total Expense');\n#EndRegion\n\n#Region N-Calculation rules: Dimension:Employee\n#Autogenerated CALC NUMERIC 456D706C6F796565\n   #Region Dimension:Employee, Member:New Salary\n   #Autogenerated MEMBERCALC NUMERIC 5B456D706C6F7965655D2E5B4E65772053616C6172795D\n   ['Employee':'New Salary']=N:(['Employee':'Salary']*(1+(['Employee':'Merit % Final']\\100)));\n   #EndRegion\n   #Region Dimension:Employee, Member:Salary\n   #Autogenerated MEMBERCALC NUMERIC 5B456D706C6F7965655D2E5B53616C6172795D\n   ['Employee':'Salary']=N:IF((['Employee':'Current Salary']=0),['Employee':'50P Salary'],['Employee':'Current Salary']);\n   #EndRegion\n#EndRegion\n\n#Region C-Calculation rules: Dimension:Employee\n#Autogenerated CALC CONSOLIDATED 456D706C6F796565\n   #Region Dimension:Employee, Member:Merit %\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B456D706C6F7965655D2E5B4D6572697420255D\n   ['Employee':'Merit %']=C:0;\n   #EndRegion\n#EndRegion\n['EmpID']=S:IF(DB('Employee',!organization,!EmployeeList,!Year,!Version,'Name/Desc')@<>'',DB('}ElementAttributes_organization',!organization,'id')|'-'| DB('}ElementAttributes_EmployeeList',!EmployeeList,'Caption_Default'),CONTINUE);\n\n#Region Merit Rate\n['Merit % Final']=N:IF(['FTE']<>0,(IF(DB('Employee',!organization,!EmployeeList,!Year,!Version,'Merit Pd')@='None',0,\nIF(['Merit Adj %']<>0,['Merit Adj %'],['Merit %']))),STET);\n#EndRegion\n   #Region User rules:Salary by Month: Jan-Dec\n   [{'Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'}]=N:\n      #Region: Term/Transfer\n      IF(ATTRN('Month',DB('Employee',!Organization,!EmployeeList,!Year,!Version,'Term/xfer Pd'),'Number')>0,\n      IF(ATTRN('Month',DB('Employee',!Organization,!EmployeeList,!Year,!Version,'Term/xfer Pd'),'Number')<=ATTRN('Employee',!Employee,'Month'),0,\n      IF(ATTRN('Month',DB('Employee',!Organization,!EmployeeList,!Year,!Version,'Start Pd'),'Number')<=ATTRN('Employee',!Employee,'Month'),\n      ['Salary']\\12*['FTE'],0)),\n      #EndRegion\n      #Region:New Hire\n      IF(ATTRN('Month',DB('Employee',!Organization,!EmployeeList,!Year,!Version,'Start Pd'),'Number')>0,\n      IF(ATTRN('Month',DB('Employee',!Organization,!EmployeeList,!Year,!Version,'Start Pd'),'Number')<=ATTRN('Employee',!Employee,'Month'),\n      ['Salary']\\12*['FTE'],0),\n      #EndRegion\n      #Region:Existing Raise\n      IF(ATTRN('Month',DB('Employee',!Organization,!EmployeeList,!Year,!Version,'Merit Pd'),'Number')>ATTRN('Employee',!Employee,'Month'),\n      #% (DB('Employee',!Organization,!EmployeeList,!Year,!Version,'Merit Pd')@='None'),\n      ['Salary']\\12*['FTE'],\n      ['Salary']\\12*(1+DB('Employee',!Organization,!EmployeeList,!Year,!Version,'Merit % Final')\\100)*['FTE'])));\n      #EndRegion\n   #EndRegion\n\n['EmpID']=S:IF(DB('Employee',!organization,!EmployeeList,!Year,!Version,'Name/Desc')@<>'',DB('}ElementAttributes_organization',!organization,'id')|'-'| DB('}ElementAttributes_EmployeeList',!EmployeeList,'Caption_Default'),CONTINUE);\n\nFEEDERS;\n\n   #Region Other Feeders\n   ['FTE']=>['Calc Salary'];\n   ['FTE']=>['Validation'];\n   ['FTE']=>['RowFormat'];\n  #EndRegion\n\n   #Region FEEDER Compensation Calculations\n      ['FTE']=>DB('Compensation',!organization,!EmployeeList,'Year',!Year,!Version,'FTE');\n   ['FTE']=>DB('Compensation',!organization,!EmployeeList,'Year',!Year,!Version,'6000');\n   ['FTE']=>DB('Compensation',!organization,!EmployeeList,'Year',!Year,!Version,'6005');\n   ['FTE']=>DB('Compensation',!organization,!EmployeeList,'Year',!Year,!Version,'Medical Exp');\n   ['FTE']=>DB('Compensation',!organization,!EmployeeList,'Year',!Year,!Version,'Other Benefits Exp');\n   ['FTE']=>DB('Compensation',!organization,!EmployeeList,'Year',!Year,!Version,'FICA Exp');\n   ['FTE']=>DB('Compensation',!organization,!EmployeeList,'Year',!Year,!Version,'Medicare Exp');\n  #EndRegion\n\n"}
{"Name": "Exchange Rates", "Dimensions@odata.bind": ["Dimensions('Currency')", "Dimensions('Year')", "Dimensions('Month')", "Dimensions('Exchange Rate')", "Dimensions('Exchange Rate Type')", "Dimensions('Version')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n\n#Region C-Calculation rules: Dimension:Exchange Rate Type\n#Autogenerated CALC CONSOLIDATED 45786368616E676520526174652054797065\n   #Region Dimension:Exchange Rate Type, Member:Average\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B45786368616E6765205261746520547970655D2E5B417665726167655D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Exchange Rate Type':{'Average'}]=C:IF(DIMIX('Month', ATTRS('Month', !Month, 'lastperiod'))>0, \n   DB('Exchange Rates', !Currency, !Year, ATTRS('Month', !Month, 'lastperiod'), !Exchange Rate, 'Average', !Version), \n   DB('Exchange Rates', !Currency, !Year, ELCOMP('Month', !Month, ELCOMPN('Month', !Month)), !Exchange Rate, 'Average', !Version));\n   #EndRegion\n   #Region Dimension:Exchange Rate Type, Member:Month End\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B45786368616E6765205261746520547970655D2E5B4D6F6E746820456E645D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Exchange Rate Type':{'Month End'}]=C:IF(DIMIX('Month', ATTRS('Month', !Month, 'lastperiod'))>0, \n   DB('Exchange Rates', !Currency, !Year, ATTRS('Month', !Month, 'lastperiod'), !Exchange Rate, 'Month End', !Version), \n   DB('Exchange Rates', !Currency, !Year, ELCOMP('Month', !Month, ELCOMPN('Month', !Month)), !Exchange Rate, 'Month End', !Version));\n   #EndRegion\n   #Region Dimension:Exchange Rate Type, Member:Spot\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B45786368616E6765205261746520547970655D2E5B53706F745D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Exchange Rate Type':{'Spot'}]=C:IF(DIMIX('Month', ATTRS('Month', !Month, 'lastperiod'))>0, \n   DB('Exchange Rates', !Currency, !Year, ATTRS('Month', !Month, 'lastperiod'), !Exchange Rate, 'Spot', !Version), \n   DB('Exchange Rates', !Currency, !Year, ELCOMP('Month', !Month, ELCOMPN('Month', !Month)), !Exchange Rate, 'Spot', !Version));\n   #EndRegion\n#EndRegion\n\nFEEDERS;"}
{"Name": "ExternalFactors", "Dimensions@odata.bind": ["Dimensions('Year')", "Dimensions('Month')", "Dimensions('Version')", "Dimensions('ExternalFactors')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n['A','Predictive'] = [ 'A','Actual'];\n['Y1','Predictive',{'B','C','D'}] = ['Y1','Actual'];\n['Y2','Predictive',{'B','C','D'}] = IF(ATTRN('Month', !Month, 'Number')<ATTRN('Month', ATTRS('Version',!Version,'FcstMonth'), 'Number'),DB('ExternalFactors', !Year, !Month, 'Actual', !ExternalFactors),STET);\n['A','Predictivev2'] = [ 'A','Actual'];\n['Y1','Predictivev2',{'B','C','D'}] = ['Y1','Actual'];\n['Y2','Predictivev2',{'B','C','D'}] = IF(ATTRN('Month', !Month, 'Number')<ATTRN('Month', ATTRS('Version',!Version,'FcstMonth'), 'Number'),DB('ExternalFactors', !Year, !Month, 'Actual', !ExternalFactors),STET);\n['Y1','ActFor'] = S:'A';\n['Y2','ActFor'] = S: IF(ATTRN('Month', !Month, 'Number')<ATTRN('Month', ATTRS('Version',!Version,'FcstMonth'), 'Number'),'A','F');\n['Y3','ActFor']= S:'F';\n\n"}
{"Name": "FcstMethod", "Dimensions@odata.bind": ["Dimensions('Account')", "Dimensions('FcstMethod')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n\n#Region N-Calculation rules: Dimension:Account\n#Autogenerated CALC NUMERIC 4163636F756E74\n   #Region Dimension:Account, Member:Rev per FTE\n   #Autogenerated MEMBERCALC NUMERIC 5B4163636F756E745D2E5B52657620706572204654455D\n   ['Account':'Rev per FTE']=N:(['Account':'4999']\\['Account':'FTE']);\n   #EndRegion\n   #Region Dimension:Account, Member:Cost per FTE\n   #Autogenerated MEMBERCALC NUMERIC 5B4163636F756E745D2E5B436F737420706572204654455D\n   ['Account':'Cost per FTE']=N:(['Account':'TE']\\['Account':'FTE']);\n   #EndRegion\n#EndRegion\n\n#Region C-Calculation rules: Dimension:Account\n#Autogenerated CALC CONSOLIDATED 4163636F756E74\n   #Region Dimension:Account, Member:Rev per FTE\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B52657620706572204654455D\n   ['Account':'Rev per FTE']=C:(['Account':'4999']\\['Account':'FTE']);\n   #EndRegion\n   #Region Dimension:Account, Member:Cost per FTE\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B436F737420706572204654455D\n   ['Account':'Cost per FTE']=C:(['Account':'TE']\\['Account':'FTE']);\n   #EndRegion\n#EndRegion\n\nFEEDERS;"}
{"Name": "GLTransactions", "Dimensions@odata.bind": ["Dimensions('TrxID')", "Dimensions('organization')", "Dimensions('Year')", "Dimensions('Month')", "Dimensions('Account')", "Dimensions('TrxMeasures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n#UNDEFVALS;\n\n#Region N-Calculation rules: Dimension:Account\n#Autogenerated CALC NUMERIC 4163636F756E74\n   #Region Dimension:Account, Member:Rev per FTE\n   #Autogenerated MEMBERCALC NUMERIC 5B4163636F756E745D2E5B52657620706572204654455D\n   ['Account':'Rev per FTE']=N:(['Account':'4999']\\['Account':'FTE']);\n   #EndRegion\n   #Region Dimension:Account, Member:Cost per FTE\n   #Autogenerated MEMBERCALC NUMERIC 5B4163636F756E745D2E5B436F737420706572204654455D\n   ['Account':'Cost per FTE']=N:(['Account':'TE']\\['Account':'FTE']);\n   #EndRegion\n#EndRegion\n\n#Region C-Calculation rules: Dimension:Account\n#Autogenerated CALC CONSOLIDATED 4163636F756E74\n   #Region Dimension:Account, Member:FTE\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B4654455D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Account':{'FTE'}]=C:IF(DIMIX('Month', ATTRS('Month', !Month, 'lastperiod'))>0, \n   DB('GLTransactions', !TrxID, !organization, !Year, ATTRS('Month', !Month, 'lastperiod'), 'FTE', !TrxMeasures), \n   DB('GLTransactions', !TrxID, !organization, !Year, ELCOMP('Month', !Month, ELCOMPN('Month', !Month)), 'FTE', !TrxMeasures));\n   #EndRegion\n   #Region Dimension:Account, Member:Rev per FTE\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B52657620706572204654455D\n   ['Account':'Rev per FTE']=C:(['Account':'4999']\\['Account':'FTE']);\n   #EndRegion\n   #Region Dimension:Account, Member:Cost per FTE\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B436F737420706572204654455D\n   ['Account':'Cost per FTE']=C:(['Account':'TE']\\['Account':'FTE']);\n   #EndRegion\n   #Region Dimension:Account, Member:Square Footage\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B53717561726520466F6F746167655D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Account':{'Square Footage'}]=C:IF(DIMIX('Month', ATTRS('Month', !Month, 'lastperiod'))>0, \n   DB('GLTransactions', !TrxID, !organization, !Year, ATTRS('Month', !Month, 'lastperiod'), 'Square Footage', !TrxMeasures), \n   DB('GLTransactions', !TrxID, !organization, !Year, ELCOMP('Month', !Month, ELCOMPN('Month', !Month)), 'Square Footage', !TrxMeasures));\n   #EndRegion\n   #Region Dimension:Account, Member:Server Space\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B5365727665722053706163655D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Account':{'Server Space'}]=C:IF(DIMIX('Month', ATTRS('Month', !Month, 'lastperiod'))>0, \n   DB('GLTransactions', !TrxID, !organization, !Year, ATTRS('Month', !Month, 'lastperiod'), 'Server Space', !TrxMeasures), \n   DB('GLTransactions', !TrxID, !organization, !Year, ELCOMP('Month', !Month, ELCOMPN('Month', !Month)), 'Server Space', !TrxMeasures));\n   #EndRegion\n#EndRegion\n\n\n['TrxDate']= S: ATTRS('TrxId',!TrxId,'TrxDate');\n['Type']= S: ATTRS('TrxId',!TrxId,'Type');\n['Source']= S: ATTRS('TrxId',!TrxId,'Source');\n['Desc']= S: ATTRS('TrxId',!TrxId,'Desc');\n['Reference']= S: ATTRS('TrxId',!TrxId,'Reference');\n['Organization']= S: ATTRS('TrxId',!TrxId,'Organization');\n['Account']= S: ATTRS('TrxId',!TrxId,'Account');\n\n\n\n\nFEEDERS;"}
{"Name": "Income Statement", "Dimensions@odata.bind": ["Dimensions('Currency Calc')", "Dimensions('organization')", "Dimensions('Year')", "Dimensions('Month')", "Dimensions('Account')", "Dimensions('Version')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n\n\n#['y1','Actual','Local']=STET;\n\n#Region ROW FORMAT\n['RowFormat',{'6000','6005','6010','6015','6300','6310','6320'}]=N:(-1);\n['RowFormat','Total Operating Expense']=2;\n['RowFormat']=IF(ELISANC('Account','TE',!Account)=1,\nELLEV('Account',!Account),STET);\n#EndRegion;\n\n#Region Year on Year Variances\n['Y2-Y1 %' ] =  (['Y2 - Y1 $']\\['Y1'])*100;\n['Y2-Y1 $' ] =  IF(attrn('Account',!Account,'signswitch')=0,['Y1']-['Y2'],['Y2']-['Y1']);\n#EndRegion\n\n#Region Currency Exchange Variances\n# Performance Variance = Budget rate * (Actual Local-Budget Local)\n\n['Performance Variance','Base'] = IF(attrn('Account',!Account,'signswitch')=0, DB('Exchange Rates', ATTRS('Organization', !Organization, 'Currency'), !Year, !Month, 'ExchangeRate', ATTRS('Account', !Account, 'Exchange Rate Type'), DB('Calendar', 'Current\nVersion', 'String')) *\n                                            (DB('Income Statement','Local',!Organization,!Year,!Month,!Account,DB('Calendar', 'Current Version', 'String'))-DB('Income Statement','Local',!Organization,!Year,!Month,!Account,'Actual')), DB('Exchange Rates',\nATTRS('Organization', !Organization, 'Currency'), !Year, !Month, 'ExchangeRate', ATTRS('Account', !Account, 'Exchange Rate Type'), DB('Calendar', 'Current Version', 'String')) *\n                                            (DB('Income Statement','Local',!Organization,!Year,!Month,!Account,'Actual')-DB('Income Statement','Local',!Organization,!Year,!Month,!Account,DB('Calendar', 'Current Version', 'String'))));\n# Currency Exchange Variance = (Actual Rate - Budget rate)*Actual Local\n\n['Ccy Exchange Variance','Base'] = IF(attrn('Account',!Account,'signswitch')=0,( DB('Exchange Rates', ATTRS('Organization', !Organization, 'Currency'), !Year, !Month, 'ExchangeRate', ATTRS('Account', !Account, 'Exchange Rate Type'), DB('Calendar', 'Curren\nt Version', 'String'))-\n                    \t                             DB('Exchange Rates', ATTRS('Organization', !Organization, 'Currency'), !Year, !Month, 'ExchangeRate', ATTRS('Account', !Account, 'Exchange Rate Type'), 'Actual'))*\n                                                 DB('Income Statement','Local',!Organization,!Year,!Month,!Account,'Actual'),( DB('Exchange Rates', ATTRS('Organization', !Organization, 'Currency'), !Year, !Month, 'ExchangeRate', ATTRS('Account', !Account,\n 'Exchange Rate Type'), 'Actual')-\n                    \t                             DB('Exchange Rates', ATTRS('Organization', !Organization, 'Currency'), !Year, !Month, 'ExchangeRate', ATTRS('Account', !Account, 'Exchange Rate Type'), DB('Calendar', 'Current Version', 'String')))*\n                                                 DB('Income Statement','Local',!Organization,!Year,!Month,!Account,'Actual'));\n#EndRegion\n\n#Region Variance calculation for Custom Version\n\n['Variance']=if(attrn('Account',!Account,'signswitch')=0,\n\t(DB('Income Statement',!Currency Calc,!Organization ,!Year,!Month,!Account,DB('Calendar', 'Current Version', 'String'))\n\t        -DB('Income Statement',!Currency Calc,!Organization ,!Year,!Month,!Account ,DB('Calendar', 'Compare Against', 'String'))) * ATTRN('Version',DB('Calendar', 'Compare Against', 'String'),'VarianceFactor')\n\t,(DB('Income Statement',!Currency Calc,!Organization ,!Year,!Month,!Account ,DB('Calendar', 'Compare Against', 'String'))\n\t        -DB('Income Statement', !Currency Calc,!Organization ,!Year,!Month,!Account ,DB('Calendar', 'Current Version', 'String')))*ATTRN('Version',DB('Calendar', 'Compare Against', 'String'),'VarianceFactor'));\n['Variance%']=['Variance']\\DB('Income Statement',!Currency Calc,!Organization ,!Year,!Month,!Account ,DB('Calendar', 'Current Version', 'String'))*100;\n#EndRegion\n\n\n#Region Target vs Prior Year Actual\n['Target vs Prior Year Actual']=if(attrn('Account',!Account,'signswitch')=0,['Target']-['Prior Year Actual'],['Prior Year Actual']-['Target'])*-1;\n['Target vs Prior Year Actual %']=(['Target vs Prior Year Actual']\\RoundP(['Prior Year Actual'],0))*100;\n#EndRegion\n\n#Region Currency Conversion\n['FTE','Base'] = n: ['FTE','Local'];\n['Square Footage','Base'] = n: ['Square Footage','Local'];\n['Server Space','Base'] = n: ['Server Space','Local'];\n['Shares','Base'] = n: ['Shares','Local'];\n['Base' ]  = n: ['Local']* DB('Exchange Rates', ATTRS('Organization', !Organization, 'Currency'), !Year, !Month, 'ExchangeRate', ATTRS('Account', !Account, 'Exchange Rate Type'), !Version);\n#EndRegion\n\n#Region Prior Year Actual\n['Local','Prior Year Actual'] = n: DB('Income Statement','Local',!organization,ATTRS('Year',!Year,'Prev'),!Month,!Account,'Actual');\n#EndRegion\n\n#Region Get Version for Dashboard\n['Dashboard','Local'] = n: DB('Income Statement','Local', !organization, !Year, !Month, !Account, DB('Calendar', 'Current Version', 'String')) ;\n['DashboardCA','Local'] = n: DB('Income Statement','Local', !organization, !Year, !Month, !Account, DB('Calendar', 'Compare Against', 'String')) ;\n#EndRegion\n\n#Region EPS\n['Total Company','EPS','Local'] = C: DB('Income Statement', !Currency Calc,'Total Company', !Year, !Month,'NP', !Version)\\DB('Income Statement', !Currency Calc, '101', !Year, !Month, 'Shares', !Version);\n['Total Company','EPS','Base'] = C: DB('Income Statement', !Currency Calc,'Total Company', !Year, !Month,'NP', !Version)\\DB('Income Statement', 'Local', '101', !Year, !Month, 'Shares', !Version);\n['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Account':{'Shares','FTE','Square Footage','Server Space'}]\n    =C: DB('Income Statement', !Currency Calc, !organization, !Year, ATTRS('Month', !Month, 'lastperiod'), !Account, !Version);\n#EndRegion\n\n#Region Forecasting\n# Populate the Actual Months in the Forecast\n['Forecast','Local']= n: IF(DB('Relative Time', !Year, !Month, 'ActFor')@='A',['Actual'],CONTINUE);\n# Rolling 3 Month Average\n['Forecast','Local']= n: IF(DB('Relative Time', !Year, !Month, 'ActFor')@='F' & DB('FcstMethod',!Account,'FcstMethod')@='Average Prior 3 Months',\n     ( DB('Income Statement',!Currency Calc,!organization,DB('Relative Time', !Year, !Month, 'CM-1Y'),DB('Relative Time', !Year, !Month, 'M-1'),!Account,!Version) +\n       DB('Income Statement',!Currency Calc,!organization,DB('Relative Time', !Year, !Month, 'CM-2Y'),DB('Relative Time', !Year, !Month, 'M-2'),!Account,!Version) +\n       DB('Income Statement',!Currency Calc,!organization,DB('Relative Time', !Year, !Month, 'CM-3Y'),DB('Relative Time', !Year, !Month, 'M-3'),!Account,!Version) ) /3\n,CONTINUE);\n# Last Year Actual\n['Forecast','Local']= n: IF(DB('Relative Time', !Year, !Month, 'ActFor')@='F' & DB('FcstMethod',!Account,'FcstMethod')@='Last Year Actual',\n     DB('Income Statement',!Currency Calc,!organization,DB('Relative Time', !Year, !Month, 'CMPYY'),DB('Relative Time', !Year, !Month, 'CMPY'),!Account,'Actual')\n,CONTINUE);\n# Budget\n['Forecast','Local']= n: IF(DB('Relative Time', !Year, !Month, 'ActFor')@='F' & DB('FcstMethod',!Account,'FcstMethod')@='Budget',\n     DB('Income Statement',!Currency Calc,!organization,!Year,!Month,!Account,DB('Calendar','Current Version','String'))\n,CONTINUE);\n#Remaining Budget\n['Forecast','Local']= n: IF(DB('Relative Time', !Year, !Month, 'ActFor')@='F' & DB('FcstMethod',!Account,'FcstMethod')@='Remaining Budget',\n  DB('Income Statement', 'Local', !organization, !Year, !Month,!Account, DB('Calendar','Current Version','String')) +\n (\n   (\n     DB('Income Statement', 'Local', !organization, !Year, ATTRS('Month',ATTRS('Month',!Month,'previousperiod'),'YTD'),!Account, DB('Calendar','Current Version','String'))-\n     DB('Income Statement', 'Local', !organization, !Year, ATTRS('Month',ATTRS('Month',!Month,'previousperiod'),'YTD'),!Account, 'Forecast')\n    ) *\n    (\n      DB('Income Statement', 'Local', !organization, !Year, !Month,!Account, DB('Calendar','Current Version','String')) \\\n      (\n\t    DB('Income Statement', 'Local', !organization, !Year, 'Year',!Account, DB('Calendar','Current Version','String')) -\n\t    DB('Income Statement', 'Local', !organization, !Year, ATTRS('Month',ATTRS('Month',!Month,'previousperiod'),'YTD'),!Account, DB('Calendar','Current Version','String'))\n      )\n    )\n  )\n,CONTINUE);\n\n#EndRegion\n\n#Region C-Calculation rules: Dimension:Account\n#Autogenerated CALC CONSOLIDATED 4163636F756E74\n   #Region Dimension:Account, Member:Rev per FTE\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B52657620706572204654455D\n   #@AutoGenerated\n   ['Account':{'Rev per FTE'}]=C:['Account':'4999']\\['Account':'FTE'];\n   #EndRegion\n   #Region Dimension:Account, Member:Cost per FTE\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B436F737420706572204654455D\n   #@AutoGenerated\n   ['Account':{'Cost per FTE'}]=C:['Account':'TE']\\['Account':'FTE'];\n   #EndRegion\n#EndRegion\n\n#Region N-Calculation rules: Dimension:Account\n#Autogenerated CALC NUMERIC 4163636F756E74\n   #Region Dimension:Account, Member:Rev per FTE\n   #Autogenerated MEMBERCALC NUMERIC 5B4163636F756E745D2E5B52657620706572204654455D\n   #@AutoGenerated\n   ['Account':{'Rev per FTE'}]=N:['Account':'4999']\\['Account':'FTE'];\n   #EndRegion\n   #Region Dimension:Account, Member:Cost per FTE\n   #Autogenerated MEMBERCALC NUMERIC 5B4163636F756E745D2E5B436F737420706572204654455D\n   #@AutoGenerated\n   ['Account':{'Cost per FTE'}]=N:['Account':'TE']\\['Account':'FTE'];\n   #EndRegion\n#EndRegion\n\n\n#Region Bring in The Headcount Section\n#Salary\n['Local','6000']= n:IF(ATTRS('Version',!Version,'Version Type') @= 'B',DB('Compensation', !Organization,'Total', !Month,!Year,!Version, '6000'),CONTINUE);\n# Bonus\n['Local','6005']= n:IF(ATTRS('Version',!Version,'Version Type') @= 'B',DB('Compensation', !Organization,'Total', !Month,!Year,!Version, '6005'),CONTINUE);\n# Benefits\n['Local','6010']= n:IF(ATTRS('Version',!Version,'Version Type') @= 'B',DB('Compensation', !Organization,'Total', !Month,!Year,!Version, '6010'),CONTINUE);\n# Employer Taxes\n['Local','6015']= n:IF(ATTRS('Version',!Version,'Version Type') @= 'B',DB('Compensation', !Organization,'Total', !Month,!Year,!Version, '6015'),CONTINUE);\n# Headcount\n['Local','FTE']= n:IF(ATTRS('Version',!Version,'Version Type') @= 'B',DB('Compensation', !Organization,'Total', !Month,!Year,!Version, 'FTE'),CONTINUE);\n#EndRegion\n\n#Region - Bring in The Revenue\n['Local','4999'] = n: IF(ATTRS('Version',!Version,'Version Type') @= 'B', DB('Revenue',!organization, 'Channel Total', 'Product Total', !Month, !Year,!Version,'Gross Revenue'),CONTINUE);\n['Local','5999'] = n: IF(ATTRS('Version',!Version,'Version Type') @= 'B', DB('Revenue',!organization, 'Channel Total', 'Product Total', !Month, !Year,!Version,'Cost of Sales'),CONTINUE);\n#EndRegion\n\n#Region Bring in the Line Item Detail\n['6400','Local'] = n: IF(ATTRS('Version',!Version,'Version Type') @= 'B',DB('Line Item Detail',!organization, !Account, 'Total', !Year, !Version, 'Total',!Month),CONTINUE);\n['6410','Local'] = n: IF(ATTRS('Version',!Version,'Version Type') @= 'B',DB('Line Item Detail',!organization, !Account, 'Total', !Year, !Version, 'Total',!Month),CONTINUE);\n#EndRegion\n\n#Region Phased Costs\n# 6300\n['Local','6300']=n:IF(ATTRS('Version',!Version,'Version Type') @= 'B',\nDB('Phased Costs',!organization,!Account,!Year,!Version,'Full Year Cost')\n*DB('Spread Methods',DB('Phased Costs',!organization,!Account,!Year,!Version,'Spread Method'),!Month,!Version)\n\\DB('Spread Methods',DB('Phased Costs',!organization,!Account,!Year,!Version,'Spread Method'),'Year',!Version)\n,CONTINUE);\n# 6310\n['Local','6310']=n:IF(ATTRS('Version',!Version,'Version Type') @= 'B',\nDB('Phased Costs',!organization,!Account,!Year,!Version,'Full Year Cost')\n*DB('Spread Methods',DB('Phased Costs',!organization,!Account,!Year,!Version,'Spread Method'),!Month,!Version)\n\\DB('Spread Methods',DB('Phased Costs',!organization,!Account,!Year,!Version,'Spread Method'),'Year',!Version)\n,CONTINUE);\n# 6320\n['Local','6320']=n:IF(ATTRS('Version',!Version,'Version Type') @= 'B',\nDB('Phased Costs',!organization,!Account,!Year,!Version,'Full Year Cost')\n*DB('Spread Methods',DB('Phased Costs',!organization,!Account,!Year,!Version,'Spread Method'),!Month,!Version)\n\\DB('Spread Methods',DB('Phased Costs',!organization,!Account,!Year,!Version,'Spread Method'),'Year',!Version)\n,CONTINUE);\n#EndRegion\n\n#Region Bring in the Depreciation\n# New\n['6520','Local'] = n:IF(ATTRS('Version',!Version,'Version Type') @= 'B',DB('Depreciation', !organization, 'Asset Total', !Month, !Year,!Version, '6520'),CONTINUE);\n# Existing\n['6510','Local'] = n:IF(ATTRS('Version',!Version,'Version Type') @= 'B',DB('Depreciation', !organization, 'Asset Total', !Month, !Year,!Version, '6510'),CONTINUE);\n#EndRegion\n\n#Region Bring in the Allocations\n\n#[{'6600','6610'},'Local','Y1','Actual']=STET;\n\n['6600','Local'] = n:IF(ATTRS('Version',!Version,'Version Type') @= 'B' %\n                        ATTRS('Version',!Version,'Version Type') @= 'A' %\n                        ATTRS('Version',!Version,'Version Type') @= 'T'\n                     ,DB('Allocation Calculation', !organization, 'All Allocations', !Year, !Month, !Version, 'Allocated Amount'),CONTINUE);\n['6610','Local'] = n:IF(ATTRS('Version',!Version,'Version Type') @= 'B' %\n                        ATTRS('Version',!Version,'Version Type') @= 'A' %\n                        ATTRS('Version',!Version,'Version Type') @= 'T'\n                     ,DB('Allocation Calculation', !organization, 'All Allocations', !Year, !Month, !Version, 'Credit Amount'),CONTINUE);\n#EndRegion\n\nFEEDERS;\n\n#Region Currency Calculation\n['Local']=>['Base'];\n#EndRegion\n\n#Region Currency Variance Calcs\n['Local']=>DB(IF(DIMNM('Version', DIMIX('Version', !Version))@=DB('Calendar', 'Current Version', 'String'),'Income Statement',''), 'Base', !organization, !Year, !Month, !Account, 'Performance Variance');\n['Local']=>DB(IF(DIMNM('Version', DIMIX('Version', !Version))@=DB('Calendar', 'Current Version', 'String'),'Income Statement',''), 'Base', !organization, !Year, !Month, !Account, 'Ccy Exchange Variance');\n#EndRegion\n\n\n#Region Target vs Prior Year Actual\n['Prior Year Actual']=>['Target vs Prior Year Actual'],['Target vs Prior Year Actual %'];\n['Target']=>['Target vs Prior Year Actual'],['Target vs Prior Year Actual %'];\n\n#EndRegion\n\n#Region Variance Calculation\n#['Local']=>DB(IF(DIMNM('Version', DIMIX('Version', !Version))@=DB('Calendar', 'Current Version', 'String'),'Income Statement',''),'Local',!organization, !Year, !Month, !Account,'Variance');\n['Actual']=>['Variance'];\n['Variance']=>['Variance%'],['Performance Variance'],['Ccy Exchange Variance'];\n#EndRegion\n\n#Region Prior Year Version\n['Actual','Local'] => DB('Income Statement','Local',!organization,ATTRS('Year',!Year,'Next'),!Month,!Account,'Prior Year Actual');\n#EndRegion\n\n#Region Dashboard Version\n#['Local']=>DB(IF(DIMNM('Version', DIMIX('Version', !Version))@=DB('Calendar', 'Current Version', 'String'),'Income Statement',''), 'Local', !organization, !Year, !Month, !Account, 'Dashboard');\n#['Local']=>DB(IF(DIMNM('Version', DIMIX('Version', !Version))@=DB('Calendar', 'Compare Against', 'String'),'Income Statement',''), 'Local', !organization, !Year, !Month, !Account, 'DashboardCA');\n['Actual']=>['Dashboard'];\n['Actual']=>['DashboardCA'];\n#EndRegion\n\n#Region Forecast Version\n['Actual']=>['Forecast'];\n#EndRegion\n\n#DB('Income Statement', !Currency Calc, !organization, !Year, !Month, !Account, !Version);\n\n#Region Feed the Income Statement Reporting Cube\n[ ] =>DB('Income Statement Reporting', !Currency Calc, !organization, !Year, !Month, !Account, !Version);\n#EndRegion\n\n#Region YoY Variances\n[{'Y1','Y2'}]=> ['Y2-Y1 $'];\n['Y2-Y1 $']=> ['Y2-Y1 %'];\n#EndRegion\n\n#Region EPS\n['Shares']=>['EPS'];\n#EndRegion\n\n\n#Region Automatically generated feeders\n#Autogenerated AUTOFEEDERS\n['Account':'FTE', 'Version':{'Version 1', 'Performance Variance', 'Target vs Prior Year Actual %', 'Ccy Exchange Variance', 'Variance%', 'Prior Year Actual', 'Variance', 'Dashboard', 'Target', 'Volume Variance', 'Predictive', 'Zero', 'DashboardCA', 'Predictivev2', 'Target vs Prior Year Actual', 'Version 2', 'Actual', 'Forecast', 'Rate Variance'}] => ['Account':'Rev per FTE'];\n['Currency Calc':'Base', 'Version':'Dashboard'] => DB('Metrics', !Account, !organization, !Year, !Month, 'Target');\n['Currency Calc':'Base', 'Version':'DashboardCA'] => DB('Metrics', !Account, !organization, !Year, !Month, 'Actual');\n['Currency Calc':'Base', 'Version':'Forecast'] => DB('Metrics', !Account, !organization, !Year, !Month, 'Forecast');\n['Account':'TE', 'Version':{'Version 1', 'Performance Variance', 'Target vs Prior Year Actual %', 'Ccy Exchange Variance', 'Variance%', 'Prior Year Actual', 'Variance', 'Dashboard', 'Target', 'Volume Variance', 'Predictive', 'Zero', 'DashboardCA', 'Predictivev2', 'Target vs Prior Year Actual', 'Version 2', 'Actual', 'Forecast', 'Rate Variance'}] => ['Account':'Cost per FTE'];\n#EndRegion"}
{"Name": "Income Statement Reporting", "Dimensions@odata.bind": ["Dimensions('Currency Calc')", "Dimensions('Organization Reporting')", "Dimensions('Year')", "Dimensions('Month')", "Dimensions('Account')", "Dimensions('Version')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n[]=S:DB('Income Statement', !Currency Calc, !Organization Reporting , !Year, !Month, !Account, !Version);\n[]=n:DB('Income Statement', !Currency Calc, !Organization Reporting , !Year, !Month, !Account, !Version);\n\n#Region EPS\n['Total Company','EPS'] = C: DB('Income Statement', !Currency Calc,!Organization Reporting , !Year, !Month, !Account, !Version);\n#EndRegion\n\n#Region Year on Year Variances\n['Y2-Y1 %' ] = c: (['Y2 - Y1 $']\\['Y1'])*100;\n['Y2-Y1 $' ] =  IF(attrn('Account',!Account,'signswitch')=0,['Y1']-['Y2'],['Y2']-['Y1']);\n#EndRegion\n\n#Region Variance calculation for Custom Version\n['Variance']=if(attrn('Account',!Account,'signswitch')=0,\n\t(DB('Income Statement Reporting',!Currency Calc,!Organization Reporting,!Year,!Month,!Account,DB('Calendar', 'Current Version', 'String'))\n\t        -DB('Income Statement Reporting',!Currency Calc,!Organization Reporting,!Year,!Month,!Account ,DB('Calendar', 'Compare Against', 'String'))) * ATTRN('Version',DB('Calendar', 'Compare Against', 'String'),'VarianceFactor')\n\t,(DB('Income Statement Reporting',!Currency Calc,!Organization Reporting,!Year,!Month,!Account ,DB('Calendar', 'Compare Against', 'String'))\n\t        -DB('Income Statement Reporting', !Currency Calc,!Organization Reporting,!Year,!Month,!Account ,DB('Calendar', 'Current Version', 'String')))*ATTRN('Version',DB('Calendar', 'Compare Against', 'String'),'VarianceFactor'));\n['Variance%']=c:['Variance']\\DB('Income Statement Reporting',!Currency Calc,!Organization Reporting ,!Year,!Month,!Account ,DB('Calendar', 'Current Version', 'String'))*100;\n#EndRegion\n\n#Region Target vs Prior Year Actual\n['Target vs Prior Year Actual %']=(['Target vs Prior Year Actual']\\RoundP(['Prior Year Actual'],0))*100;\n#EndRegion\n#Region Totals for Shares and FTE\n['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Account':{'Shares','FTE'}]\n    =C: DB('Income Statement Reporting', !Currency Calc, !organization reporting, !Year, ATTRS('Month', !Month, 'lastperiod'), !Account, !Version);\n#EndRegion\n\nFEEDERS;\n"}
{"Name": "Job Code Assumptions", "Dimensions@odata.bind": ["Dimensions('jobcode')", "Dimensions('JobCodeAsmpt')", "Dimensions('Year')", "Dimensions('Version')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n\nFEEDERS;"}
{"Name": "Job Type Assumption", "Dimensions@odata.bind": ["Dimensions('JobType')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('JobTypeAssumption')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n\nFEEDERS;"}
{"Name": "Line Item Detail", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('Account')", "Dimensions('LineItemList')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('LineItemDetail')", "Dimensions('Month')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n#UNDEFVALS;\n\n#Region N-Calculation rules: Dimension:Account\n#Autogenerated CALC NUMERIC 4163636F756E74\n   #Region Dimension:Account, Member:Rev per FTE\n   #Autogenerated MEMBERCALC NUMERIC 5B4163636F756E745D2E5B52657620706572204654455D\n   ['Account':'Rev per FTE']=N:(['Account':'4999']\\['Account':'FTE']);\n   #EndRegion\n   #Region Dimension:Account, Member:Cost per FTE\n   #Autogenerated MEMBERCALC NUMERIC 5B4163636F756E745D2E5B436F737420706572204654455D\n   ['Account':'Cost per FTE']=N:(['Account':'TE']\\['Account':'FTE']);\n   #EndRegion\n#EndRegion\n\n#Region N-Calculation rules: Dimension:LineItemDetail\n#Autogenerated CALC NUMERIC 4C696E654974656D44657461696C\n   #Region Dimension:LineItemDetail, Member:Total\n   #Autogenerated MEMBERCALC NUMERIC 5B4C696E654974656D44657461696C5D2E5B546F74616C5D\n   ['LineItemDetail':'Total']=N:IF((['LineItemDetail':'Factor B']=0),['LineItemDetail':'Factor A'],(['LineItemDetail':'Factor A']*['LineItemDetail':'Factor B']));\n   #EndRegion\n#EndRegion\n\n#Region C-Calculation rules: Dimension:LineItemDetail\n#Autogenerated CALC CONSOLIDATED 4C696E654974656D44657461696C\n   #Region Dimension:LineItemDetail, Member:Factor B\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4C696E654974656D44657461696C5D2E5B466163746F7220425D\n   ['LineItemDetail':'Factor B']=C:0;\n   #EndRegion\n#EndRegion\n\n#Region C-Calculation rules: Dimension:Account\n#Autogenerated CALC CONSOLIDATED 4163636F756E74\n   #Region Dimension:Account, Member:FTE\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B4654455D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Account':{'FTE'}]=C:IF(DIMIX('Month', ATTRS('Month', !Month, 'lastper\n   iod'))>0,\n   DB('Line Item Detail', !organization, 'FTE', !LineItemList, !Year, !Version, !LineItemDetail, ATTRS('Month', !Month, 'lastperiod')),\n   DB('Line Item Detail', !organization, 'FTE', !LineItemList, !Year, !Version, !LineItemDetail, ELCOMP('Month', !Month, ELCOMPN('Month', !Month))));\n   #EndRegion\n   #Region Dimension:Account, Member:Rev per FTE\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B52657620706572204654455D\n   ['Account':'Rev per FTE']=C:(['Account':'4999']\\['Account':'FTE']);\n   #EndRegion\n   #Region Dimension:Account, Member:Cost per FTE\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B436F737420706572204654455D\n   ['Account':'Cost per FTE']=C:(['Account':'TE']\\['Account':'FTE']);\n   #EndRegion\n   #Region Dimension:Account, Member:Square Footage\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B53717561726520466F6F746167655D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Account':{'Square Footage'}]=C:IF(DIMIX('Month', ATTRS('Month', !Mont\n   h, 'lastperiod'))>0,\n   DB('Line Item Detail', !organization, 'Square Footage', !LineItemList, !Year, !Version, !LineItemDetail, ATTRS('Month', !Month, 'lastperiod')),\n   DB('Line Item Detail', !organization, 'Square Footage', !LineItemList, !Year, !Version, !LineItemDetail, ELCOMP('Month', !Month, ELCOMPN('Month', !Month))));\n   #EndRegion\n   #Region Dimension:Account, Member:Server Space\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B5365727665722053706163655D\n   ['Month':{'Year', 'YTD', 'Q1', 'Q2', 'Q3', 'Q4', 'Jan YTD', 'Feb YTD', 'Mar YTD', 'Apr YTD', 'May YTD', 'Jun YTD', 'Jul YTD', 'Aug YTD', 'Oct YTD', 'Nov YTD', 'Dec YTD', 'Sep YTD'}, 'Account':{'Server Space'}]=C:IF(DIMIX('Month', ATTRS('Month', !Month,\n   'lastperiod'))>0,\n   DB('Line Item Detail', !organization, 'Server Space', !LineItemList, !Year, !Version, !LineItemDetail, ATTRS('Month', !Month, 'lastperiod')),\n   DB('Line Item Detail', !organization, 'Server Space', !LineItemList, !Year, !Version, !LineItemDetail, ELCOMP('Month', !Month, ELCOMPN('Month', !Month))));\n   #EndRegion\n#EndRegion\n\nFEEDERS;\n['Item']=>['LineItemDetail':'Total'];\n\n\n"}
{"Name": "Metrics", "Dimensions@odata.bind": ["Dimensions('Metrics')", "Dimensions('organization')", "Dimensions('Year')", "Dimensions('Month')", "Dimensions('Metrics Indicators')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n\n#Region N-Calculation rules: Dimension:Metrics Indicators\n#Autogenerated CALC NUMERIC 4D65747269637320496E64696361746F7273\n   #Region Dimension:Metrics Indicators, Member:Status\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B5374617475735D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Status'}]=N:IF(ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Score'])=1, \n   UNDEFINEDCELLVALUE, \n   IF(['Metrics Indicators':'Score']>=0, \n   1, \n   IF(['Metrics Indicators':'Score']>=0-1, \n   0, \n   -1)));\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Trend\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B5472656E645D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Trend'}]=N:IF(ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Score'])=1%ISUNDEFINEDCELLVALUE(IF(ATTRS('Month', !Month, 'previousperiod')@='', \n   UNDEFINEDCELLVALUE, \n   DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Score')))=1, \n   UNDEFINEDCELLVALUE, \n   IF(ABS(['Metrics Indicators':'Score']-IF(ATTRS('Month', !Month, 'previousperiod')@='', \n   UNDEFINEDCELLVALUE, \n   DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Score')))>1*0.05, \n   SIGN(['Metrics Indicators':'Score']-IF(ATTRS('Month', !Month, 'previousperiod')@='', \n   UNDEFINEDCELLVALUE, \n   DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Score'))), \n   0));\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Tolerance\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B546F6C6572616E63655D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Tolerance'}]=N:STET;\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Variance\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B56617269616E63655D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Variance'}]=N:['Metrics Indicators':'Actual']-['Metrics Indicators':'Target'];\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Variance Percent\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B56617269616E63652050657263656E745D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Variance Percent'}]=N:(['Metrics Indicators':'Actual']-['Metrics Indicators':'Target'])\\['Metrics Indicators':'Target'];\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Score\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B53636F72655D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Score'}]=N:IF(ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Target'])=1%ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Actual'])=1, \n   UNDEFINEDCELLVALUE, \n   IF(IF(ATTRN('Metrics', !Metrics, 'tolerancetype')=1, \n   ['Metrics Indicators':'Tolerance'], \n   ['Metrics Indicators':'Tolerance']*['Metrics Indicators':'Target'])<>0, \n   MAX(MIN(ROUNDP(0+IF(ATTRN('Metrics', !Metrics, 'performancepattern')=1, \n   ABS(['Metrics Indicators':'Actual']-['Metrics Indicators':'Target']), \n   ['Metrics Indicators':'Actual']-['Metrics Indicators':'Target'])\\ABS(IF(ATTRN('Metrics', !Metrics, 'tolerancetype')=1, \n   ['Metrics Indicators':'Tolerance'], \n   ['Metrics Indicators':'Tolerance']*['Metrics Indicators':'Target']))*1*IF(ATTRN('Metrics', !Metrics, 'performancepattern')=0, \n   1, \n   -1)+IF(ATTRN('Metrics', !Metrics, 'performancepattern')=1, \n   0.5*1, \n   0),5), 10), -10), \n   IF(['Metrics Indicators':'Actual']=['Metrics Indicators':'Target'], \n   0, \n   IF(ATTRN('Metrics', !Metrics, 'performancepattern')=1  % SIGN(['Metrics Indicators':'Actual']-['Metrics Indicators':'Target']) * IF(ATTRN('Metrics', !Metrics, 'performancepattern')=0, \n   1, \n   -1) <0, \n   -10, \n   10))));\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Score Change\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B53636F7265204368616E67655D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Score Change'}]=N:IF(((ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Score']))=1)%((ISUNDEFINEDCELLVALUE(IF(ATTRS('Month', !Month, 'previousperiod')@='', \n   ['Metrics Indicators':'Trend'], \n   DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Score'))))=1),UNDEFINEDCELLVALUE,IF((ATTRS('Month', !Month, 'previousperiod')@<>''), \n   DB('Metrics', !Metrics, !organization, !Year, !Month, 'Score')-DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Score'), \n   CONTINUE));\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Actual Change Percent\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B41637475616C204368616E67652050657263656E745D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Actual Change Percent'}]=N:IF(((ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Actual']))=1)%((ISUNDEFINEDCELLVALUE(IF(ATTRS('Month', !Month, 'previousperiod')@='', \n   ['Metrics Indicators':'Trend'], \n   DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Actual'))))=1),UNDEFINEDCELLVALUE,(((DB('Metrics', !Metrics, !organization, !Year, !Month, 'Actual')-DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Actual'))\\DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Actual'))*100)\\100);\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Status_1_Count\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B5374617475735F315F436F756E745D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Status_1_Count'}]=N:IF(['Metrics Indicators':'Status']=1,1,0);\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Status_0_Count\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B5374617475735F305F436F756E745D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Status_0_Count'}]=N:IF((['Metrics Indicators':'Status']=0)&((ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Status']))=0),1,0);\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Status_-1_Count\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B5374617475735F2D315F436F756E745D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Status_-1_Count'}]=N:IF(['Metrics Indicators':'Status']=(-1),1,0);\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Status_Incomplete_Count\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B5374617475735F496E636F6D706C6574655F436F756E745D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Status_Incomplete_Count'}]=N:IF((ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Status']))=1,1,0);\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Forecast Status\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B466F726563617374205374617475735D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Forecast Status'}]=N:IF(ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Forecast Score'])=1, \n   UNDEFINEDCELLVALUE, \n   IF(['Metrics Indicators':'Forecast Score']>=0, \n   1, \n   IF(['Metrics Indicators':'Forecast Score']>=0-1, \n   0, \n   -1)));\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Forecast Trend\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B466F726563617374205472656E645D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Forecast Trend'}]=N:IF(ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Forecast Score'])=1%ISUNDEFINEDCELLVALUE(IF(ATTRS('Month', !Month, 'previousperiod')@='', \n   UNDEFINEDCELLVALUE, \n   DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Forecast Score')))=1, \n   UNDEFINEDCELLVALUE, \n   IF(ABS(['Metrics Indicators':'Forecast Score']-IF(ATTRS('Month', !Month, 'previousperiod')@='', \n   UNDEFINEDCELLVALUE, \n   DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Forecast Score')))>1*0.05, \n   SIGN(['Metrics Indicators':'Forecast Score']-IF(ATTRS('Month', !Month, 'previousperiod')@='', \n   UNDEFINEDCELLVALUE, \n   DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Forecast Score'))), \n   0));\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Forecast Variance\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B466F7265636173742056617269616E63655D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Forecast Variance'}]=N:['Metrics Indicators':'Actual']-['Metrics Indicators':'Forecast'];\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Forecast Variance %\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B466F7265636173742056617269616E636520255D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Forecast Variance %'}]=N:(['Metrics Indicators':'Actual']-['Metrics Indicators':'Forecast'])\\['Metrics Indicators':'Forecast'];\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Forecast Score\n   #Autogenerated MEMBERCALC NUMERIC 5B4D65747269637320496E64696361746F72735D2E5B466F7265636173742053636F72655D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Forecast Score'}]=N:IF(ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Forecast'])=1%ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Actual'])=1, \n   UNDEFINEDCELLVALUE, \n   IF(IF(ATTRN('Metrics', !Metrics, 'tolerancetype')=1, \n   ['Metrics Indicators':'Tolerance'], \n   ['Metrics Indicators':'Tolerance']*['Metrics Indicators':'Forecast'])<>0, \n   MAX(MIN(ROUNDP(0+IF(ATTRN('Metrics', !Metrics, 'performancepattern')=1, \n   ABS(['Metrics Indicators':'Actual']-['Metrics Indicators':'Forecast']), \n   ['Metrics Indicators':'Actual']-['Metrics Indicators':'Forecast'])\\ABS(IF(ATTRN('Metrics', !Metrics, 'tolerancetype')=1, \n   ['Metrics Indicators':'Tolerance'], \n   ['Metrics Indicators':'Tolerance']*['Metrics Indicators':'Forecast']))*1*IF(ATTRN('Metrics', !Metrics, 'performancepattern')=0, \n   1, \n   -1)+IF(ATTRN('Metrics', !Metrics, 'performancepattern')=1, \n   0.5*1, \n   0),5), 10), -10), \n   IF(['Metrics Indicators':'Actual']=['Metrics Indicators':'Forecast'], \n   0, \n   IF(ATTRN('Metrics', !Metrics, 'performancepattern')=1  % SIGN(['Metrics Indicators':'Actual']-['Metrics Indicators':'Forecast']) * IF(ATTRN('Metrics', !Metrics, 'performancepattern')=0, \n   1, \n   -1) <0, \n   -10, \n   10))));\n   #EndRegion\n#EndRegion\n\n#Region C-Calculation rules: Dimension:Metrics Indicators\n#Autogenerated CALC CONSOLIDATED 4D65747269637320496E64696361746F7273\n   #Region Dimension:Metrics Indicators, Member:Status\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B5374617475735D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Status'}]=C:IF(ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Score'])=1, \n   UNDEFINEDCELLVALUE, \n   IF(['Metrics Indicators':'Score']>=0, \n   1, \n   IF(['Metrics Indicators':'Score']>=0-1, \n   0, \n   -1)));\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Trend\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B5472656E645D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Trend'}]=C:IF(ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Score'])=1%ISUNDEFINEDCELLVALUE(IF(ATTRS('Month', !Month, 'previousperiod')@='', \n   UNDEFINEDCELLVALUE, \n   DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Score')))=1, \n   UNDEFINEDCELLVALUE, \n   IF(ABS(['Metrics Indicators':'Score']-IF(ATTRS('Month', !Month, 'previousperiod')@='', \n   UNDEFINEDCELLVALUE, \n   DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Score')))>1*0.05, \n   SIGN(['Metrics Indicators':'Score']-IF(ATTRS('Month', !Month, 'previousperiod')@='', \n   UNDEFINEDCELLVALUE, \n   DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Score'))), \n   0));\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Tolerance\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B546F6C6572616E63655D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Tolerance'}]=C:ConsolidatedAvg(3, '', !Metrics, !organization, !Year, !Month, !Metrics Indicators);\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Variance\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B56617269616E63655D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Variance'}]=C:['Metrics Indicators':'Actual']-['Metrics Indicators':'Target'];\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Variance Percent\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B56617269616E63652050657263656E745D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Variance Percent'}]=C:(['Metrics Indicators':'Actual']-['Metrics Indicators':'Target'])\\['Metrics Indicators':'Target'];\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Score\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B53636F72655D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Score'}]=C:IF(ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Target'])=1%ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Actual'])=1, \n   UNDEFINEDCELLVALUE, \n   IF(IF(ATTRN('Metrics', !Metrics, 'tolerancetype')=1, \n   ['Metrics Indicators':'Tolerance'], \n   ['Metrics Indicators':'Tolerance']*['Metrics Indicators':'Target'])<>0, \n   MAX(MIN(ROUNDP(0+IF(ATTRN('Metrics', !Metrics, 'performancepattern')=1, \n   ABS(['Metrics Indicators':'Actual']-['Metrics Indicators':'Target']), \n   ['Metrics Indicators':'Actual']-['Metrics Indicators':'Target'])\\ABS(IF(ATTRN('Metrics', !Metrics, 'tolerancetype')=1, \n   ['Metrics Indicators':'Tolerance'], \n   ['Metrics Indicators':'Tolerance']*['Metrics Indicators':'Target']))*1*IF(ATTRN('Metrics', !Metrics, 'performancepattern')=0, \n   1, \n   -1)+IF(ATTRN('Metrics', !Metrics, 'performancepattern')=1, \n   0.5*1, \n   0),5), 10), -10), \n   IF(['Metrics Indicators':'Actual']=['Metrics Indicators':'Target'], \n   0, \n   IF(ATTRN('Metrics', !Metrics, 'performancepattern')=1  % SIGN(['Metrics Indicators':'Actual']-['Metrics Indicators':'Target']) * IF(ATTRN('Metrics', !Metrics, 'performancepattern')=0, \n   1, \n   -1) <0, \n   -10, \n   10))));\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Score Change\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B53636F7265204368616E67655D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Score Change'}]=C:IF(((ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Score']))=1)%((ISUNDEFINEDCELLVALUE(IF(ATTRS('Month', !Month, 'previousperiod')@='', \n   ['Metrics Indicators':'Trend'], \n   DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Score'))))=1),UNDEFINEDCELLVALUE,IF((ATTRS('Month', !Month, 'previousperiod')@<>''), \n   DB('Metrics', !Metrics, !organization, !Year, !Month, 'Score')-DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Score'), \n   CONTINUE));\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Actual Change Percent\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B41637475616C204368616E67652050657263656E745D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Actual Change Percent'}]=C:IF(((ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Actual']))=1)%((ISUNDEFINEDCELLVALUE(IF(ATTRS('Month', !Month, 'previousperiod')@='', \n   ['Metrics Indicators':'Trend'], \n   DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Actual'))))=1),UNDEFINEDCELLVALUE,(((DB('Metrics', !Metrics, !organization, !Year, !Month, 'Actual')-DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Actual'))\\DB('Metrics', !Metrics, !organization, !Year, ATTRS('Month', !Month, 'previousperiod'), 'Actual'))*100)\\100);\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Status_1_Count\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B5374617475735F315F436F756E745D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Status_1_Count'}]=C:IF(['Metrics Indicators':'Status']=1,1,0);\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Status_0_Count\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B5374617475735F305F436F756E745D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Status_0_Count'}]=C:IF((['Metrics Indicators':'Status']=0)&((ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Status']))=0),1,0);\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Status_-1_Count\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B5374617475735F2D315F436F756E745D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Status_-1_Count'}]=C:IF(['Metrics Indicators':'Status']=(-1),1,0);\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Status_Incomplete_Count\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B5374617475735F496E636F6D706C6574655F436F756E745D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Status_Incomplete_Count'}]=C:IF((ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Status']))=1,1,0);\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Forecast Status\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B466F726563617374205374617475735D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Forecast Status'}]=C:IF(ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Forecast Score'])=1, \n   UNDEFINEDCELLVALUE, \n   IF(['Metrics Indicators':'Forecast Score']>=0, \n   1, \n   IF(['Metrics Indicators':'Forecast Score']>=0-1, \n   0, \n   -1)));\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Forecast Trend\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B466F726563617374205472656E645D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Forecast Trend'}]=C:IF(ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Forecast Score'])=1, \n   UNDEFINEDCELLVALUE, \n   IF(['Metrics Indicators':'Forecast Score']>=0, \n   1, \n   IF(['Metrics Indicators':'Forecast Score']>=0-1, \n   0, \n   -1)));\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Forecast Variance\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B466F7265636173742056617269616E63655D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Forecast Variance'}]=C:['Metrics Indicators':'Actual']-['Metrics Indicators':'Forecast'];\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Forecast Variance %\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B466F7265636173742056617269616E636520255D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Forecast Variance %'}]=C:(['Metrics Indicators':'Actual']-['Metrics Indicators':'Forecast'])\\['Metrics Indicators':'Forecast'];\n   #EndRegion\n   #Region Dimension:Metrics Indicators, Member:Forecast Score\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4D65747269637320496E64696361746F72735D2E5B466F7265636173742053636F72655D\n   #@AutoGenerated\n   ['Metrics Indicators':{'Forecast Score'}]=C:IF(ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Forecast'])=1%ISUNDEFINEDCELLVALUE(['Metrics Indicators':'Actual'])=1, \n   UNDEFINEDCELLVALUE, \n   IF(IF(ATTRN('Metrics', !Metrics, 'tolerancetype')=1, \n   ['Metrics Indicators':'Tolerance'], \n   ['Metrics Indicators':'Tolerance']*['Metrics Indicators':'Forecast'])<>0, \n   MAX(MIN(ROUNDP(0+IF(ATTRN('Metrics', !Metrics, 'performancepattern')=1, \n   ABS(['Metrics Indicators':'Actual']-['Metrics Indicators':'Forecast']), \n   ['Metrics Indicators':'Actual']-['Metrics Indicators':'Forecast'])\\ABS(IF(ATTRN('Metrics', !Metrics, 'tolerancetype')=1, \n   ['Metrics Indicators':'Tolerance'], \n   ['Metrics Indicators':'Tolerance']*['Metrics Indicators':'Forecast']))*1*IF(ATTRN('Metrics', !Metrics, 'performancepattern')=0, \n   1, \n   -1)+IF(ATTRN('Metrics', !Metrics, 'performancepattern')=1, \n   0.5*1, \n   0),5), 10), -10), \n   IF(['Metrics Indicators':'Actual']=['Metrics Indicators':'Forecast'], \n   0, \n   IF(ATTRN('Metrics', !Metrics, 'performancepattern')=1  % SIGN(['Metrics Indicators':'Actual']-['Metrics Indicators':'Forecast']) * IF(ATTRN('Metrics', !Metrics, 'performancepattern')=0, \n   1, \n   -1) <0, \n   -10, \n   10))));\n   #EndRegion\n#EndRegion\n\n#Region Link rule: Metrics < Income Statement - Numeric\n#Source cube: Income Statement\n#Target cube: Metrics\n#Autogenerated LINK NUMERIC 7D4C696E6B5F4D657472696373205F334320496E636F6D652053746174656D656E74\n#@AutoGenerated\n['Metrics Indicators':{'Target','Actual','Forecast'}] = N:IF(DIMIX('Account', \n    !Metrics) <> 0, DB('Income Statement', 'Base', !organization, \n    !Year, !Month, !Metrics, ATTRS('Metrics Indicators', !Metrics Indicators, \n    '}Map_}Link_Metrics _3C Income Statement')), CONTINUE);\n#EndRegion\n\nFEEDERS;\n#Region Automatically generated feeders\n#Autogenerated AUTOFEEDERS\n['Metrics Indicators':'Score'] => ['Metrics Indicators':'Status'];\n['Metrics Indicators':'Score'] => ['Metrics Indicators':'Trend'];\n['Metrics Indicators':'Score'] => ['Metrics Indicators':'Score Change'];\n['Metrics Indicators':'Actual'] => ['Metrics Indicators':'Score'];\n['Metrics Indicators':'Status'] => ['Metrics Indicators':'Status_-1_Count'];\n['Metrics Indicators':'Forecast Score'] => ['Metrics Indicators':'Forecast Trend'];\n['Metrics Indicators':'Status'] => ['Metrics Indicators':'Status_0_Count'];\n['Metrics Indicators':'Status'] => ['Metrics Indicators':'Status_1_Count'];\n['Metrics Indicators':'Forecast Score'] => ['Metrics Indicators':'Forecast Status'];\n['Metrics Indicators':{'Target', 'Actual'}] => ['Metrics Indicators':'Variance'];\n['Metrics Indicators':'Target'] => ['Metrics Indicators':'Variance Percent'];\n['Metrics Indicators':'Actual'] => ['Metrics Indicators':'Actual Change Percent'];\n['Metrics Indicators':'Forecast'] => ['Metrics Indicators':'Forecast Variance %'];\n['Metrics Indicators':{'Actual', 'Forecast'}] => ['Metrics Indicators':'Forecast Variance'];\n['Metrics Indicators':'Actual'] => ['Metrics Indicators':'Forecast Score'];\n#EndRegion"}
{"Name": "Phased Costs", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('Account')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('PhasedCosts')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n#UNDEFVALS;\n\n#Region C-Calculation rules: Dimension:Account\n#Autogenerated CALC CONSOLIDATED 4163636F756E74\n   #Region Dimension:Account, Member:Rev per FTE\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B52657620706572204654455D\n   ['Account':'Rev per FTE']=C:(['Account':'4999']\\['Account':'FTE']);\n   #EndRegion\n   #Region Dimension:Account, Member:Cost per FTE\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B4163636F756E745D2E5B436F737420706572204654455D\n   ['Account':'Cost per FTE']=C:(['Account':'TE']\\['Account':'FTE']);\n   #EndRegion\n#EndRegion\n\n#Region N-Calculation rules: Dimension:Account\n#Autogenerated CALC NUMERIC 4163636F756E74\n   #Region Dimension:Account, Member:Rev per FTE\n   #Autogenerated MEMBERCALC NUMERIC 5B4163636F756E745D2E5B52657620706572204654455D\n   ['Account':'Rev per FTE']=N:(['Account':'4999']\\['Account':'FTE']);\n   #EndRegion\n   #Region Dimension:Account, Member:Cost per FTE\n   #Autogenerated MEMBERCALC NUMERIC 5B4163636F756E745D2E5B436F737420706572204654455D\n   ['Account':'Cost per FTE']=N:(['Account':'TE']\\['Account':'FTE']);\n   #EndRegion\n#EndRegion\n\nFEEDERS;\n\n#Region FEED The Income Statement\n['6300','Spread Method']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''),'local',!organization,!Year,'Year',!Account,!Version);\n['6310','Spread Method']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''),'local',!organization,!Year,'Year',!Account,!Version);\n['6320','Spread Method']=>DB(IF(ATTRS('Version',!Version,'LinkVersion')@<>'','Income Statement',''),'local',!organization,!Year,'Year',!Account,!Version);\n\n#EndRegion"}
{"Name": "Rate BOM", "Dimensions@odata.bind": ["Dimensions('Month')", "Dimensions('Plant')", "Dimensions('product')", "Dimensions('Rate Measure')", "Dimensions('Year')", "Dimensions('Version')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n\n#Region National BOM Averaging Factor\n\n['BOM Averaging Factor'] = N: (DB('Rate BOM', 'Total Plants', !Product, 'Total Local BOM', !year, !version)/6)-DB('Rate BOM', !Plant, !Product, 'Total Local BOM', !year, !Version);\n\n#EndRegion\n\n#Region C-Calculation rules: Dimension:Rate Measure\n#Autogenerated CALC CONSOLIDATED 52617465204D656173757265\n   #Region Dimension:Rate Measure, Member:RM 1\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B524D20315D\n   #@AutoGenerated\n   ['Rate Measure':{'RM 1'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:RM 2\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B524D20325D\n   #@AutoGenerated\n   ['Rate Measure':{'RM 2'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:RM 3\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B524D20335D\n   #@AutoGenerated\n   ['Rate Measure':{'RM 3'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:RM 4\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B526177204D6174657269616C5E524D20345D\n   #@AutoGenerated\n   ['Rate Measure':{'RM 4'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:RM 5\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B526177204D6174657269616C5E524D20355D\n   #@AutoGenerated\n   ['Rate Measure':{'RM 5'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:RM 7\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B526177204D6174657269616C5E524D20375D\n   #@AutoGenerated\n   ['Rate Measure':{'RM 7'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:RM 8\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B524D20385D\n   #@AutoGenerated\n   ['Rate Measure':{'RM 8'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:PM 1\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B5061636B6167696E67204D6174657269616C5E504D20315D\n   #@AutoGenerated\n   ['Rate Measure':{'PM 1'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:PM 2\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B5061636B6167696E67204D6174657269616C5E504D20325D\n   #@AutoGenerated\n   ['Rate Measure':{'PM 2'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:PM 3\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B5061636B6167696E67204D6174657269616C5E504D20335D\n   #@AutoGenerated\n   ['Rate Measure':{'PM 3'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:PM 4\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B5061636B6167696E67204D6174657269616C5E504D20345D\n   #@AutoGenerated\n   ['Rate Measure':{'PM 4'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:PM 5\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B5061636B6167696E67204D6174657269616C5E504D20355D\n   #@AutoGenerated\n   ['Rate Measure':{'PM 5'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:PM 6\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B504D20365D\n   #@AutoGenerated\n   ['Rate Measure':{'PM 6'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:PM 7\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B504D20375D\n   #@AutoGenerated\n   ['Rate Measure':{'PM 7'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:PM 8\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B504D20385D\n   #@AutoGenerated\n   ['Rate Measure':{'PM 8'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:Direct labor\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B446972656374206C61626F725D\n   #@AutoGenerated\n   ['Rate Measure':{'Direct labor'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:Average Local BOM\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B41766572616765204C6F63616C20424F4D5D\n   #@AutoGenerated\n   ['Rate Measure':{'Average Local BOM'}]=C:ConsolidatedAvg(2, '', !Month, !Plant, !product, 'Average Local BOM', !Year, !Version);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:Commodity 3\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B436F6D6D6F6469747920335D\n   #@AutoGenerated\n   ['Rate Measure':{'Commodity 3'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:Commodity 1\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B436F6D6D6F6469747920315D\n   #@AutoGenerated\n   ['Rate Measure':{'Commodity 1'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:Commodity 2\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B436F6D6D6F6469747920325D\n   #@AutoGenerated\n   ['Rate Measure':{'Commodity 2'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:Commodities\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B436F6D6D6F6469746965735D\n   #@AutoGenerated\n   ['Rate Measure':{'Commodities'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:National Average BOM\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B4E6174696F6E616C204176657261676520424F4D5D\n   #@AutoGenerated\n   ['Rate Measure':{'National Average BOM'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:BOM Averaging Factor\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B424F4D20417665726167696E6720466163746F725D\n   #@AutoGenerated\n   ['Rate Measure':{'BOM Averaging Factor'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:Total Local BOM\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B546F74616C204C6F63616C20424F4D5D\n   #@AutoGenerated\n   ['Rate Measure':{'Total Local BOM'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:Raw Material\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B526177204D6174657269616C5D\n   #@AutoGenerated\n   ['Rate Measure':{'Raw Material'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:Packaging Material\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B5061636B6167696E67204D6174657269616C5D\n   #@AutoGenerated\n   ['Rate Measure':{'Packaging Material'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n   #Region Dimension:Rate Measure, Member:RM 6\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B52617465204D6561737572655D2E5B526177204D6174657269616C5E524D20365D\n   #@AutoGenerated\n   ['Rate Measure':{'RM 6'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n#EndRegion\n\n#Region N-Calculation rules: Dimension:Rate Measure\n#Autogenerated CALC NUMERIC 52617465204D656173757265\n   #Region Dimension:Rate Measure, Member:Average Local BOM\n   #Autogenerated MEMBERCALC NUMERIC 5B52617465204D6561737572655D2E5B41766572616765204C6F63616C20424F4D5D\n   #@AutoGenerated\n   ['Rate Measure':{'Average Local BOM'}]=N:['Rate Measure':'Packaging Material']+['Rate Measure':'Raw Material']+['Rate Measure':'Direct labor'];\n   #EndRegion\n#EndRegion\n\nFEEDERS;\n\n#Region BOM Avg Factor Feeder\n\n['Total Local BOM'] => ['BOM Averaging Factor'];\n\n#EndRegion\n#Region Automatically generated feeders\n#Autogenerated AUTOFEEDERS\n['Rate Measure':{'Raw Material', 'Packaging Material', 'Direct labor'}, 'Version':{'Version 1', 'Performance Variance', 'Target vs Prior Year Actual %', 'Ccy Exchange Variance', 'Variance%', 'Prior Year Actual', 'Variance', 'Dashboard', 'Target', 'Volume Variance', 'Predictive', 'Zero', 'DashboardCA', 'Predictivev2', 'Target vs Prior Year Actual', 'Version 2', 'Actual', 'Forecast', 'Rate Variance'}] => ['Rate Measure':'Average Local BOM'];\n#EndRegion"}
{"Name": "Relative Time", "Dimensions@odata.bind": ["Dimensions('Year')", "Dimensions('Month')", "Dimensions('Relative Time')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n#UNDEFVALS;\n\n['ActFor']=S:IF(ATTRN('Month',!Month,'Number')>=ATTRN('Month',DB('Calendar','Fcst Month','String'),'Number'),'F','A');\n\n['ActForMonth']=N:IF(DB('Relative Time',!Year,!Month,'ActFor')@='A',1,0);\n\n\nFEEDERS;\n['ActFor']=>['ActForMonth'];\n['ActFor']=>DB('Income Statement', 'Local', 'Total Company', !Year, !Month, 'NPAA', 'Forecast');\n['ActFor']=>DB('Income Statement', 'Local', 'Total Company', !Year, !Month, 'Statistics', 'Forecast');"}
{"Name": "Revenue", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('Channel')", "Dimensions('product')", "Dimensions('Month')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Revenue')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\nUNDEFVALS;\n#EndRegion\n\n#Region Year on Year Variances\n['Y2-Y1 %' ] =  (['Y2 - Y1 $']\\['Y1'])*100;\n['Y2-Y1 $' ] =  IF(attrn('Revenue',!Revenue,'signswitch')=0,['Y1']-['Y2'],['Y2']-['Y1']);\n#EndRegion\n\n#Region Rate and Volume Variances\n['Gross Revenue','Volume Variance']= N:(DB('Revenue', !organization, !Channel, !product, !Month, !Year, DB('Calendar', 'Compare Against', 'String'), 'Units Sold') -\n\tDB('Revenue', !organization, !Channel, !product, !Month, !Year, DB('Calendar', 'Current Version', 'String'), 'Units Sold'))*\n\tDB('Revenue Assumptions', !product, !Channel, !Month, !Year, DB('Calendar', 'Current Version', 'String'), 'Unit Price');\n['Gross Revenue','Rate Variance']= N:(DB('Revenue Assumptions', !product, !Channel, !Month, !Year, DB('Calendar', 'Compare Against', 'String'), 'Unit Price') -\n\tDB('Revenue Assumptions', !product, !Channel, !Month, !Year, DB('Calendar', 'Current Version', 'String'), 'Unit Price')) *\n\tDB('Revenue', !organization, !Channel, !product, !Month, !Year, DB('Calendar', 'Compare Against', 'String'), 'Units Sold');\n#EndRegion\n\n#Region Variances\n['Variance']=if(attrn('Revenue',!Revenue,'signswitch')=0,\n          (DB('Revenue', !organization, !Channel, !product, !Month, !Year, DB('Calendar', 'Current Version', 'String'), !Revenue)-DB('Revenue', !organization, !Channel, !product, !Month, !Year, DB('Calendar', 'Compare Against', 'String'), !Revenue))* ATTR\nN('Version',DB('Calendar', 'Compare Against', 'String'),'VarianceFactor'),\n          (DB('Revenue', !organization, !Channel, !product, !Month, !Year, DB('Calendar', 'Compare Against', 'String'), !Revenue)-DB('Revenue', !organization, !Channel, !product, !Month, !Year, DB('Calendar', 'Current Version', 'String'), !Revenue))* ATTR\nN('Version',DB('Calendar', 'Compare Against', 'String'),'VarianceFactor')\n          );\n['Variance%']=['Variance']\\DB('Revenue', !organization, !Channel, !product, !Month, !Year,DB('Calendar', 'Current Version', 'String') , !Revenue)*100;\n#EndRegion\n\n#Region Target vs Prior Year Actual\n['Target vs Prior Year Actual']=if(attrn('Revenue',!Revenue,'signswitch')=0,['Target']-['Prior Year Actual'],['Prior Year Actual']-['Target'])*-1;\n['Target vs Prior Year Actual %']=(['Target vs Prior Year Actual']\\RoundP(['Prior Year Actual'],0))*100;\n#EndRegion\n#Region Prior Year Actual\n['Prior Year Actual'] = n: DB('Revenue', !organization, !Channel, !product, !Month, ATTRS('Year',!Year,'Prev'), 'Actual', !Revenue);\n#EndRegion\n\n['Gross Margin %']=c: (['Gross Margin']\\['Gross Revenue'])*100;\n['Unit Price'] = c: ['Gross Revenue']\\['Units Sold'];\n['Unit Cost'] = c: ['Cost of Sales']\\['Units Sold'];\n\n#Region Get Version for Dashboard\n['Dashboard'] = n: DB('Revenue', !organization, !Channel, !product, !Month, !Year, DB('Calendar', 'Current Version', 'String'), !Revenue);\n['DashboardCA'] = n: DB('Revenue', !organization, !Channel, !product, !Month, !Year, DB('Calendar', 'Compare Against', 'String'), !Revenue);\n#EndRegion\n\n['Gross Revenue']=n:['Units Sold']*['Unit Price'];\n['Direct COGS']=n:DB('Supply Chain', !organization, !Channel, !product, !Month, !Year, 'Direct Costs', !Version);\n['Indirect COGS']=n:IF(DB('Supply Chain', !organization, !Channel, !product, !Month, !Year, 'Units Sold', !Version)<>0,DB('Supply Chain', !organization, !Channel, !product, !Month, !Year, 'Indirect Costs', !Version),CONTINUE);\n\n#['Unit Cost']=n:db('Revenue Assumptions',!Product,!Channel,!Month, !Year, !Version, 'Unit Cost');\n['Unit Cost' ] = n: DB('Rate BOM', !Month, ATTRS('organization', !organization, 'Default Plant'), !product, 'Total Local BOM', !Year, !Version);\n['Unit Price']=n:db('Revenue Assumptions',!Product,!Channel,!Month, !Year, !Version, 'Unit Price');\n\n#Region C-Calculation rules: Dimension:Revenue\n#Autogenerated CALC CONSOLIDATED 526576656E7565\n   #Region Dimension:Revenue, Member:Unit Cost\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B526576656E75655D2E5B556E697420436F73745D\n   #@AutoGenerated\n   #['Revenue':{'Unit Cost'}]=C:IF(DTYPE('Month', !Month)@='C',\n   #ConsolidateChildren('Month')\\ELCOMPN('Month', !Month),\n   #CONTINUE);\n   #EndRegion\n#EndRegion\n\nFEEDERS;\n['Units Sold']=>['Unit Cost'],['Unit Price'],['Gross Revenue'],['Direct COGS' ],['Indirect COGS'] ;\n\n#Region Year on Year Variances\n[{'Y1','Y2'}]=> ['Y2-Y1 $'];\n['Y2-Y1 $']=> ['Y2-Y1 %'];\n#EndRegion\n\n#Region Variance Calculation\n#['Units Sold']=>DB(IF(DIMNM('Version', DIMIX('Version', !Version))@=DB('Calendar', 'Current Version', 'String'),'Revenue',''), !organization, !Channel, !product, !Month, !Year, 'Variance', !Revenue);\n['Actual']=>['Variance'];\n['Variance']=>['Variance%'];\n#EndRegion\n\n#Region Prior Year Actual\n['Actual'] => DB('Revenue', !organization, !Channel, !product, !Month, ATTRS('Year',!Year,'Next'), 'Prior Year Actual', !Revenue);\n#EndRegion\n\n#Region Dashboard Version\n#['Units Sold']=>DB(IF(DIMNM('Version', DIMIX('Version', !Version))@=DB('Calendar', 'Current Version', 'String'),'Revenue',''),!organization, !Channel, !product, !Month, !Year, 'Dashboard', 'Units Sold');\n#['Units Sold']=>DB(IF(DIMNM('Version', DIMIX('Version', !Version))@=DB('Calendar', 'Compare Against', 'String'),'Revenue',''),!organization, !Channel, !product, !Month, !Year, 'DashboardCA', 'Units Sold');\n['Budget']=>['Dashboard'];\n['Budget']=>['DashboardCA'];\n#EndRegion\n\n#Region Target vs Prior Year Actual\n['Prior Year Actual']=>['Target vs Prior Year Actual'],['Target vs Prior Year Actual %'];\n['Target']=>['Target vs Prior Year Actual'],['Target vs Prior Year Actual %'];\n#EndRegion\n\n#Region Rate and Volume Variance Feeders\n['Units Sold']=>['Volume Variance'],['Rate Variance'];\n['Unit Price']=>['Volume Variance'],['Rate Variance'];\n#EndRegion\n\n#REGION Feed Units Sold to Supply Chain Cube\n#['Units Sold' ]  => DB('Supply Chain', !organization, !Channel, !product, !Month, !Year,!Revenue,!Version);\n#ENDREGION\n\n#Region Automatically generated feeders\n#Autogenerated AUTOFEEDERS\n['Channel':'Channel Total', 'Version':'Dashboard'] => DB('Revenue Metrics', !organization, !Year, !Month, !Revenue, \n    !product, 'Target');\n['Channel':'Channel Total', 'Version':'DashboardCA'] => DB('Revenue Metrics', !organization, !Year, !Month, !Revenue, \n    !product, 'Actual');\n['Channel':'Channel Total', 'Version':'Forecast'] => DB('Revenue Metrics', !organization, !Year, !Month, !Revenue, \n    !product, 'Forecast');\n#EndRegion"}
{"Name": "Revenue Assumptions", "Dimensions@odata.bind": ["Dimensions('product')", "Dimensions('Channel')", "Dimensions('Month')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('RevenueAsmpt')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\nUNDEFVALS;\n#EndRegion\n\n#Region N-Calculation rules: Dimension:RevenueAsmpt\n#Autogenerated CALC NUMERIC 526576656E756541736D7074\n   #Region Dimension:RevenueAsmpt, Member:Average Unit Price\n   #Autogenerated MEMBERCALC NUMERIC 5B526576656E756541736D70745D2E5B4176657261676520556E69742050726963655D\n   #@AutoGenerated\n   ['RevenueAsmpt':{'Average Unit Price'}]=N:['RevenueAsmpt':'Unit Price']*(1-(['RevenueAsmpt':'Initiative Discount']\\100));\n   #EndRegion\n#EndRegion\n\n#Region C-Calculation rules: Dimension:RevenueAsmpt\n#Autogenerated CALC CONSOLIDATED 526576656E756541736D7074\n   #Region Dimension:RevenueAsmpt, Member:Average Unit Price\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B526576656E756541736D70745D2E5B4176657261676520556E69742050726963655D\n   #@AutoGenerated\n   ['RevenueAsmpt':{'Average Unit Price'}]=C:0;\n   #EndRegion\n   #Region Dimension:RevenueAsmpt, Member:Unit Cost\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B526576656E756541736D70745D2E5B556E697420436F73745D\n   #@AutoGenerated\n   ['RevenueAsmpt':{'Unit Cost'}]=C:ConsolidatedAvg(2, '', !product, !Channel, !Month, !Year, !Version, 'Unit Cost');\n   #EndRegion\n#EndRegion\n\n#Region Dashboard Version\n['Dashboard' ] = n: DB('Revenue Assumptions', !product, !Channel, !Month, !Year, DB('Calendar', 'Current Version', 'String'), !RevenueAsmpt);\n['DashboardCA' ] = n: DB('Revenue Assumptions', !product, !Channel, !Month, !Year, DB('Calendar', 'Compare Against', 'String'), !RevenueAsmpt);\n#EndRegion\n\n#REGION Unit Cost Feed from Rate BOM Cube\n['Unit Cost'] = N: DB('Rate BOM',!Month, 'Total Plants', !product, 'Total Local BOM', !Year, !Version);\n#ENDREGION\n\nFEEDERS;\n\n\n#Region Dashboard Version\n['Actual']=>['Dashboard'];\n['Actual']=>['DashboardCA'];\n#EndRegion\n['Unit Price' ] => ['Unit Cost'];\n#Region Automatically generated feeders\n#Autogenerated AUTOFEEDERS\n['RevenueAsmpt':'Unit Price'] => ['RevenueAsmpt':'Average Unit Price'];\n#EndRegion"}
{"Name": "Revenue Reporting", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('Channel')", "Dimensions('product')", "Dimensions('Month')", "Dimensions('Year')", "Dimensions('Revenue')", "Dimensions('Version')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n\n#REGION Set Explanation as String\n['Explanation'] = S: STET;\n#ENDREGION\n\n#Region Rate and Volume Variances\n['Gross Revenue','Volume Variance']= N:(DB('Revenue', !organization, !Channel, !product, !Month, !Year, DB('Calendar', 'Compare Against', 'String'), 'Units Sold') -\n\tDB('Revenue', !organization, !Channel, !product, !Month, !Year, DB('Calendar', 'Current Version', 'String'), 'Units Sold'))*\n\tDB('Revenue Assumptions', !product, !Channel, !Month, !Year, DB('Calendar', 'Current Version', 'String'), 'Unit Price');\n['Gross Revenue','Rate Variance']= N:(DB('Revenue Assumptions', !product, !Channel, !Month, !Year, DB('Calendar', 'Compare Against', 'String'), 'Unit Price') -\n\tDB('Revenue Assumptions', !product, !Channel, !Month, !Year, DB('Calendar', 'Current Version', 'String'), 'Unit Price')) *\n\tDB('Revenue', !organization, !Channel, !product, !Month, !Year, DB('Calendar', 'Compare Against', 'String'), 'Units Sold');\n#EndRegion\n\n#Region Link rule: RevenueReporting:Revenue - Numeric\n#Source cube: Revenue\n#Target cube: Revenue Reporting\n[] =DB('Revenue', !organization, !Channel, !product, !Month, !Year, !Version, !Revenue);\n#ENDRegion\n\n#Region C-Calculation rules: Dimension:Revenue\n#Autogenerated CALC CONSOLIDATED 526576656E7565\n   #Region Dimension:Revenue, Member:Unit Cost\n   #Autogenerated MEMBERCALC CONSOLIDATED 5B526576656E75655D2E5B556E697420436F73745D\n   #@AutoGenerated\n   ['Revenue':{'Unit Cost'}]=C:IF(DTYPE('Month', !Month)@='C', \n   ConsolidateChildren('Month')\\ELCOMPN('Month', !Month), \n   CONTINUE);\n   #EndRegion\n#EndRegion\n\nFEEDERS;"}
{"Name": "Social Media", "Dimensions@odata.bind": ["Dimensions('product')", "Dimensions('SM Entries')", "Dimensions('SM Reviews')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "Spread Methods", "Dimensions@odata.bind": ["Dimensions('Spread Methods')", "Dimensions('Month')", "Dimensions('Version')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n\nFEEDERS;"}
{"Name": "Supply Chain", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('Channel')", "Dimensions('product')", "Dimensions('Month')", "Dimensions('Year')", "Dimensions('Supply Chain Measures')", "Dimensions('Version')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n\n['Units Sold' ] = n: DB('Revenue', !organization, !Channel, !product, !Month, !Year, !Version, 'Units Sold');\n['Raw Material' ] = n: DB('Rate BOM', !Month, ATTRS('organization', !organization, 'Default Plant'), !product, 'Raw Material', !Year, !Version)*DB('Supply Chain', !organization, !Channel, !product, !Month, !Year, 'Units Sold', !Version);\n['Packaging Material' ] = n: DB('Rate BOM', !Month, ATTRS('organization', !organization, 'Default Plant'), !product, 'Packaging Material', !Year, !Version)*DB('Supply Chain', !organization, !Channel, !product, !Month, !Year, 'Units Sold', !Version);\n#['Pallets' ] = n:(['Units Sold' ] /49)*15;\n['Direct Labor' ] = n: DB('Rate BOM', !Month, ATTRS('organization', !organization, 'Default Plant'), !product, 'Direct Labor', !Year, !Version)*DB('Supply Chain', !organization, !Channel, !product, !Month, !Year, 'Units Sold', !Version);\n\nFEEDERS;\n\n#\n# Feeders Added by Guy to replace Garbage produced by PM\n#\n['Indirect Labor']=>['Raw Material'],['Packaging Material'],['Direct Labor'],['Units Sold' ];"}
{"Name": "Task Workflow", "Dimensions@odata.bind": ["Dimensions('Task')", "Dimensions('organization')", "Dimensions('Task Workflow Measure')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n#['Date Completed'] =s:\n#\tIF( ELLEV('Task', !Task) =0,continue,'');\n\t\n\n['Status'] = S:\n\tIF( ELLEV('Task', !Task) =0,\n\t\tcontinue,\n\t\tIF(['Complete']>0,IF(['Complete'] = ['Active'],'Complete','In Progress'),'Not Started'));\n\n#['Active'] = N: 1;\n['Complete'] = N: IF( DB('Task Workflow',!Task,!organization,'Status') @= 'Complete',1,0);\n\n['Overdue'] = S:\n\tIF( ELLEV('Task', !Task) =0,\n\t\n\tIF( ['days left'] < 1 &\n\tDB('Task Workflow',!Task,!organization,'Status') @<> 'Complete'\n\t ,'Overdue','')\n\t ,'');\n\n['Days Left'] = N:DAYNO(DB('Task Workflow',!Task,!organization,'Due Date'))-DAYNo(TOday);\n\n#['system date'] = N:DAYNo(TOday);\n\n\nFEEDERS;\n['Active'] => ['Complete'];"}
{"Name": "Version Copy Control", "Dimensions@odata.bind": ["Dimensions('LineItemList')", "Dimensions('Version Copy Measures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "Version Subset Control", "Dimensions@odata.bind": ["Dimensions('Version Subsets')", "Dimensions('LineItemList')", "Dimensions('Version Subset Measures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion"}
{"Name": "Workflow Reporting", "Dimensions@odata.bind": ["Dimensions('BI Measure')", "Dimensions('organization')", "Dimensions('Workflow Info')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ApplicationSecurity", "Dimensions@odata.bind": ["Dimensions('}ApplicationEntries')", "Dimensions('}Groups')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}Capabilities", "Dimensions@odata.bind": ["Dimensions('}Features')", "Dimensions('}Permissions')", "Dimensions('}Groups')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}CellAnnotations_Capital", "Dimensions@odata.bind": ["Dimensions('}Annotation_ApplicationID')", "Dimensions('organization')", "Dimensions('CapitalList')", "Dimensions('Asset Types')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Capital')", "Dimensions('}AnnotationMeasures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}CellAnnotations_Employee", "Dimensions@odata.bind": ["Dimensions('}Annotation_ApplicationID')", "Dimensions('organization')", "Dimensions('EmployeeList')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Employee')", "Dimensions('}AnnotationMeasures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}CellAnnotations_Income Statement", "Dimensions@odata.bind": ["Dimensions('}Annotation_ApplicationID')", "Dimensions('Currency Calc')", "Dimensions('organization')", "Dimensions('Year')", "Dimensions('Month')", "Dimensions('Account')", "Dimensions('Version')", "Dimensions('}AnnotationMeasures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}CellAnnotations_Line Item Detail", "Dimensions@odata.bind": ["Dimensions('}Annotation_ApplicationID')", "Dimensions('organization')", "Dimensions('Account')", "Dimensions('LineItemList')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('LineItemDetail')", "Dimensions('Month')", "Dimensions('}AnnotationMeasures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}CellAnnotations_Metrics", "Dimensions@odata.bind": ["Dimensions('}Annotation_ApplicationID')", "Dimensions('Metrics')", "Dimensions('organization')", "Dimensions('Year')", "Dimensions('Month')", "Dimensions('Metrics Indicators')", "Dimensions('}AnnotationMeasures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}CellAnnotations_Phased Costs", "Dimensions@odata.bind": ["Dimensions('}Annotation_ApplicationID')", "Dimensions('organization')", "Dimensions('Account')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('PhasedCosts')", "Dimensions('}AnnotationMeasures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}CellAnnotations_Revenue", "Dimensions@odata.bind": ["Dimensions('}Annotation_ApplicationID')", "Dimensions('organization')", "Dimensions('Channel')", "Dimensions('product')", "Dimensions('Month')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Revenue')", "Dimensions('}AnnotationMeasures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}CellSecurity_Income Statement", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('}Groups')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n\n#Region tp_planning_rule\n[]=S:IF(DB('}tp_intermediate_RDCLS}Income Statement',!organization,!}Groups,'all_applications','StaticRights')@<>'',DB('}tp_intermediate_RDCLS}Income Statement',!organization,!}Groups,'all_applications','StaticRights'),CONTINUE);\n\n#EndRegion\n\nFEEDERS;"}
{"Name": "}CellSecurity_Income Statement Reporting", "Dimensions@odata.bind": ["Dimensions('Currency Calc')", "Dimensions('Organization Reporting')", "Dimensions('Year')", "Dimensions('Month')", "Dimensions('Account')", "Dimensions('Version')", "Dimensions('}Groups')"]}
{"Name": "}CellSecurity_Metrics", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('}Groups')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n\n#Region tp_planning_rule\n[]=S:IF(DB('}tp_intermediate_RDCLS}Metrics',!organization,!}Groups,'all_applications','StaticRights')@<>'',DB('}tp_intermediate_RDCLS}Metrics',!organization,!}Groups,'all_applications','StaticRights'),CONTINUE);\n\n#EndRegion\n\nFEEDERS;"}
{"Name": "}CellSecurity_Revenue", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('}Groups')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n\n#Region tp_planning_rule\n[]=S:IF(DB('}tp_intermediate_RDCLS}Revenue',!organization,!}Groups,'all_applications','StaticRights')@<>'',DB('}tp_intermediate_RDCLS}Revenue',!organization,!}Groups,'all_applications','StaticRights'),CONTINUE);\n\n#EndRegion\n\nFEEDERS;"}
{"Name": "}CellSecurity_Revenue Reporting", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('}Groups')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n#Region \n#Autogenerated CUSTOM 7D43656C6C53656375726974795F526576656E7565205265706F7274696E67 74705F706C616E6E696E675F72756C65\n[]=S:IF(DB('}tp_intermediate_RDCLS}Revenue Reporting',!organization,'all_applications',!}Groups,'StaticRights')@<>'',DB('}tp_intermediate_RDCLS}Revenue Reporting',!organization,'all_applications',!}Groups,'StaticRights'),CONTINUE);\n#EndRegion\n\nFEEDERS;"}
{"Name": "}CellSecurity_Supply Chain", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('}Groups')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n\nFEEDERS;"}
{"Name": "}CellSecurity_}tp_application_permission}0f309cd0-4215-4482-8471-80ef000fcbb3", "Dimensions@odata.bind": ["Dimensions('}tp_tasks}0f309cd0-4215-4482-8471-80ef000fcbb3')", "Dimensions('}tp_permissions')", "Dimensions('}Groups')"]}
{"Name": "}CellSecurity_}tp_application_root_permissions", "Dimensions@odata.bind": ["Dimensions('}tp_applications')", "Dimensions('}tp_root_permissions')", "Dimensions('}Groups')"]}
{"Name": "}ChoreSecurity", "Dimensions@odata.bind": ["Dimensions('}Chores')", "Dimensions('}Groups')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ClientCAMAssociatedGroups", "Dimensions@odata.bind": ["Dimensions('}CAMAssociatedGroups')", "Dimensions('}Groups')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ClientGroups", "Dimensions@odata.bind": ["Dimensions('}Clients')", "Dimensions('}Groups')"]}
{"Name": "}ClientProperties", "Dimensions@odata.bind": ["Dimensions('}Clients')", "Dimensions('}ClientProperties')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ClientSettings", "Dimensions@odata.bind": ["Dimensions('}Clients')", "Dimensions('}ClientSettings')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}CubeAttributes", "Dimensions@odata.bind": ["Dimensions('}Cubes')", "Dimensions('}CubeAttributes')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}CubeCaptions", "Dimensions@odata.bind": ["Dimensions('}Cultures')", "Dimensions('}CaptionMeasures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n['}CaptionMeasures':'Value'] = S:\n  IF(\n    DB( '}CubeCaptions', !}Cultures, 'Input' ) @= '',\n    IF(\n      ATTRS( '}Cultures', !}Cultures, 'BaseCulture' ) @= '',\n      DB( '}CubeCaptions', 'Default', 'Input' ),\n      DB( '}CubeCaptions', ATTRS( '}Cultures', !}Cultures, 'BaseCulture' ), 'Value' )\n    ),\n    DB( '}CubeCaptions', !}Cultures, 'Input' )\n  );"}
{"Name": "}CubeDrill_Capital", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('CapitalList')", "Dimensions('Asset Types')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Capital')", "Dimensions('}CubeDrillString')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n['Life']=s:'AssetLife';\n['Monthly Expense']=S:'Depreciation';"}
{"Name": "}CubeDrill_Employee", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('EmployeeList')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Employee')", "Dimensions('}CubeDrillString')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n['Job Type']=S:'JobTypeAssumption';\n\n['Job Code']=S:'JobCodeAssumption';"}
{"Name": "}CubeDrill_Income Statement", "Dimensions@odata.bind": ["Dimensions('Currency Calc')", "Dimensions('organization')", "Dimensions('Year')", "Dimensions('Month')", "Dimensions('Account')", "Dimensions('Version')", "Dimensions('}CubeDrillString')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n#Dashboard\n['Dashboard'] = S: IF(DB('Calendar', 'Current Version', 'String')@='Actual','Actuals',Continue);\n['Dashboard',{'4999','5999'}] = S:IF (ATTRS('Version',DB('Calendar', 'Current Version', 'String'),'Version Type') @= 'B','Revenue',STET);\n['Dashboard',{'6000','6005','6010','6015','FTE'}] = S:IF (ATTRS('Version',DB('Calendar', 'Current Version', 'String'),'Version Type') @= 'B','Employee',STET);\n['Dashboard',{'6300','6310','6320'}] = S:IF (ATTRS('Version',DB('Calendar', 'Current Version', 'String'),'Version Type') @= 'B','PhasedCosts',STET);\n['Dashboard',{'6400','6410'}] = S:IF (ATTRS('Version',DB('Calendar', 'Current Version', 'String'),'Version Type') @= 'B','LineItemDetail',STET);\n['Dashboard',{'6520'}] = S:IF (ATTRS('Version',DB('Calendar', 'Current Version', 'String'),'Version Type') @= 'B','Capital',STET);\n['Dashboard',{'6600'}] = S:IF (ATTRS('Version',DB('Calendar', 'Current Version', 'String'),'Version Type') @= 'B','AllocationsSenders',STET);\n['Dashboard',{'6610'}] = S:IF (ATTRS('Version',DB('Calendar', 'Current Version', 'String'),'Version Type') @= 'B','AllocationsReceivers',STET);\n#DashboardCA\n['DashboardCA'] = S: IF(DB('Calendar', 'Compare Against', 'String')@='Actual','Actuals',Continue);\n#Actuals\n['Actual'] = s: 'Actuals';\n['Forecast'] = S:IF(DB('Relative Time',!Year,!Month,'ActFor')@='A','Actuals',Continue);\n#Revenue\n['4999']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Revenue',CONTINUE);\n['5999']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Revenue',CONTINUE);\n# Payroll\n['6000']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Employee',CONTINUE);\n['6005']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Employee',CONTINUE);\n['6010']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Employee',CONTINUE);\n['6015']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Employee',CONTINUE);\n['FTE']    = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Employee',CONTINUE);\n# Occupancy\n['6300']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','PhasedCosts',CONTINUE);\n['6310']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','PhasedCosts',CONTINUE);\n['6320']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','PhasedCosts',CONTINUE);\n# Marketing\n['6400']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','LineItemDetail',CONTINUE);\n['6410']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','LineItemDetail',CONTINUE);\n# Capital\n['6520']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Capital',CONTINUE);\n# Allocations\n['6600']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','AllocationsSenders',CONTINUE);\n['6610']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','AllocationsReceivers',CONTINUE);"}
{"Name": "}CubeDrill_Income Statement Reporting", "Dimensions@odata.bind": ["Dimensions('Currency Calc')", "Dimensions('Organization Reporting')", "Dimensions('Year')", "Dimensions('Month')", "Dimensions('Account')", "Dimensions('Version')", "Dimensions('}CubeDrillString')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n#Dashboard\n['Dashboard','101'] = S: IF(DB('Calendar', 'Current Version', 'String')@='Actual','Actuals',Continue);\n['Dashboard','101',{'4999','5999'}] = S:IF (ATTRS('Version',DB('Calendar', 'Current Version', 'String'),'Version Type') @= 'B','Revenue',STET);\n['Dashboard','101',{'6000','6005','6010','6015','FTE'}] = S:IF (ATTRS('Version',DB('Calendar', 'Current Version', 'String'),'Version Type') @= 'B','Employee',STET);\n['Dashboard','101',{'6300','6310','6320'}] = S:IF (ATTRS('Version',DB('Calendar', 'Current Version', 'String'),'Version Type') @= 'B','PhasedCosts',STET);\n['Dashboard','101',{'6400','6410'}] = S:IF (ATTRS('Version',DB('Calendar', 'Current Version', 'String'),'Version Type') @= 'B','LineItemDetail',STET);\n['Dashboard','101',{'6520'}] = S:IF (ATTRS('Version',DB('Calendar', 'Current Version', 'String'),'Version Type') @= 'B','Capital',STET);\n['Dashboard','101',{'6600'}] = S:IF (ATTRS('Version',DB('Calendar', 'Current Version', 'String'),'Version Type') @= 'B','AllocationsSenders',STET);\n['Dashboard','101',{'6610'}] = S:IF (ATTRS('Version',DB('Calendar', 'Current Version', 'String'),'Version Type') @= 'B','AllocationsReceivers',STET);\n#DashboardCA\n['DashboardCA','101'] = S: IF(DB('Calendar', 'Compare Against', 'String')@='Actual','Actuals',Continue);\n#Actuals\n['Actual','101'] = s: 'Actuals';\n['Forecast','101'] = S:IF(DB('Relative Time',!Year,!Month,'ActFor')@='A','Actuals',Continue);\n#Revenue\n['4999','101']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Revenue',CONTINUE);\n['5999','101']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Revenue',CONTINUE);\n# Payroll\n['6000','101']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Employee',CONTINUE);\n['6005','101']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Employee',CONTINUE);\n['6010','101']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Employee',CONTINUE);\n['6015','101']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Employee',CONTINUE);\n['FTE','101']    = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Employee',CONTINUE);\n# Occupancy\n['6300','101']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','PhasedCosts',CONTINUE);\n['6310','101']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','PhasedCosts',CONTINUE);\n['6320','101']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','PhasedCosts',CONTINUE);\n# Marketing\n['6400','101']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','LineItemDetail',CONTINUE);\n['6410','101']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','LineItemDetail',CONTINUE);\n# Capital\n['6520','101']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','Capital',CONTINUE);\n# Allocations\n['6600','101']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','AllocationsSenders',CONTINUE);\n['6610','101']  = S:IF (ATTRS('Version',!Version,'Version Type') @= 'B','AllocationsReceivers',CONTINUE);"}
{"Name": "}CubeDrill_Revenue", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('Channel')", "Dimensions('product')", "Dimensions('Month')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Revenue')", "Dimensions('}CubeDrillString')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n[]=S:'ProductAnalysis';"}
{"Name": "}CubeProperties", "Dimensions@odata.bind": ["Dimensions('}Cubes')", "Dimensions('}CubeProperties')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}CubeSecurity", "Dimensions@odata.bind": ["Dimensions('}Cubes')", "Dimensions('}Groups')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}CubeSecurityProperties", "Dimensions@odata.bind": ["Dimensions('}Cubes')", "Dimensions('}CubeSecurityProperties')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}DimensionAttributes", "Dimensions@odata.bind": ["Dimensions('}Dimensions')", "Dimensions('}DimensionAttributes')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}DimensionCaptions", "Dimensions@odata.bind": ["Dimensions('}Cultures')", "Dimensions('}CaptionMeasures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n['}CaptionMeasures':'Value'] = S:\n  IF(\n    DB( '}DimensionCaptions', !}Cultures, 'Input' ) @= '',\n    IF(\n      ATTRS( '}Cultures', !}Cultures, 'BaseCulture' ) @= '',\n      DB( '}DimensionCaptions', 'Default', 'Input' ),\n      DB( '}DimensionCaptions', ATTRS( '}Cultures', !}Cultures, 'BaseCulture' ), 'Value' )\n    ),\n    DB( '}DimensionCaptions', !}Cultures, 'Input' )\n  );"}
{"Name": "}DimensionProperties", "Dimensions@odata.bind": ["Dimensions('}Dimensions')", "Dimensions('}DimensionProperties')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}DimensionSecurity", "Dimensions@odata.bind": ["Dimensions('}Dimensions')", "Dimensions('}Groups')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAnnotations_organization", "Dimensions@odata.bind": ["Dimensions('}Annotation_ApplicationID')", "Dimensions('organization')", "Dimensions('}AnnotationMeasures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Account", "Dimensions@odata.bind": ["Dimensions('Account')", "Dimensions('}ElementAttributes_Account')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Account Reporting", "Dimensions@odata.bind": ["Dimensions('Account Reporting')", "Dimensions('}ElementAttributes_Account Reporting')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Allocation Calculation", "Dimensions@odata.bind": ["Dimensions('Allocation Calculation')", "Dimensions('}ElementAttributes_Allocation Calculation')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Allocation List", "Dimensions@odata.bind": ["Dimensions('Allocation List')", "Dimensions('}ElementAttributes_Allocation List')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Allocation Source Definition", "Dimensions@odata.bind": ["Dimensions('Allocation Source Definition')", "Dimensions('}ElementAttributes_Allocation Source Definition')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Asset Life", "Dimensions@odata.bind": ["Dimensions('Asset Life')", "Dimensions('}ElementAttributes_Asset Life')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Asset Types", "Dimensions@odata.bind": ["Dimensions('Asset Types')", "Dimensions('}ElementAttributes_Asset Types')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Benefit", "Dimensions@odata.bind": ["Dimensions('Benefit')", "Dimensions('}ElementAttributes_Benefit')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_BI Measure", "Dimensions@odata.bind": ["Dimensions('BI Measure')", "Dimensions('}ElementAttributes_BI Measure')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Calendar", "Dimensions@odata.bind": ["Dimensions('Calendar')", "Dimensions('}ElementAttributes_Calendar')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Capital", "Dimensions@odata.bind": ["Dimensions('Capital')", "Dimensions('}ElementAttributes_Capital')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_CapitalList", "Dimensions@odata.bind": ["Dimensions('CapitalList')", "Dimensions('}ElementAttributes_CapitalList')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Channel", "Dimensions@odata.bind": ["Dimensions('Channel')", "Dimensions('}ElementAttributes_Channel')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Compensation", "Dimensions@odata.bind": ["Dimensions('Compensation')", "Dimensions('}ElementAttributes_Compensation')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Currency", "Dimensions@odata.bind": ["Dimensions('Currency')", "Dimensions('}ElementAttributes_Currency')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Currency Calc", "Dimensions@odata.bind": ["Dimensions('Currency Calc')", "Dimensions('}ElementAttributes_Currency Calc')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Depreciation", "Dimensions@odata.bind": ["Dimensions('Depreciation')", "Dimensions('}ElementAttributes_Depreciation')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Employee", "Dimensions@odata.bind": ["Dimensions('Employee')", "Dimensions('}ElementAttributes_Employee')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_EmployeeList", "Dimensions@odata.bind": ["Dimensions('EmployeeList')", "Dimensions('}ElementAttributes_EmployeeList')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n\n#EndRegion\n\nFEEDERS;\n"}
{"Name": "}ElementAttributes_Employee Name", "Dimensions@odata.bind": ["Dimensions('Employee Name')", "Dimensions('}ElementAttributes_Employee Name')"]}
{"Name": "}ElementAttributes_Exchange Rate", "Dimensions@odata.bind": ["Dimensions('Exchange Rate')", "Dimensions('}ElementAttributes_Exchange Rate')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Exchange Rate Type", "Dimensions@odata.bind": ["Dimensions('Exchange Rate Type')", "Dimensions('}ElementAttributes_Exchange Rate Type')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_ExternalFactors", "Dimensions@odata.bind": ["Dimensions('ExternalFactors')", "Dimensions('}ElementAttributes_ExternalFactors')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_FcstMethod", "Dimensions@odata.bind": ["Dimensions('FcstMethod')", "Dimensions('}ElementAttributes_FcstMethod')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_jobcode", "Dimensions@odata.bind": ["Dimensions('jobcode')", "Dimensions('}ElementAttributes_jobcode')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n['Label2']=S:IF(ELLEV('jobcode',!jobcode)=0,\n!jobcode|' '|DB('}ElementAttributes_jobcode',!jobcode,'Label'),DB('}ElementAttributes_jobcode',!jobcode,'Label'));"}
{"Name": "}ElementAttributes_JobCodeAsmpt", "Dimensions@odata.bind": ["Dimensions('JobCodeAsmpt')", "Dimensions('}ElementAttributes_JobCodeAsmpt')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_JobType", "Dimensions@odata.bind": ["Dimensions('JobType')", "Dimensions('}ElementAttributes_JobType')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_JobTypeAssumption", "Dimensions@odata.bind": ["Dimensions('JobTypeAssumption')", "Dimensions('}ElementAttributes_JobTypeAssumption')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_LineItem_PickList", "Dimensions@odata.bind": ["Dimensions('LineItem_PickList')", "Dimensions('}ElementAttributes_LineItem_PickList')"]}
{"Name": "}ElementAttributes_LineItemDetail", "Dimensions@odata.bind": ["Dimensions('LineItemDetail')", "Dimensions('}ElementAttributes_LineItemDetail')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_LineItemList", "Dimensions@odata.bind": ["Dimensions('LineItemList')", "Dimensions('}ElementAttributes_LineItemList')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Metrics", "Dimensions@odata.bind": ["Dimensions('Metrics')", "Dimensions('}ElementAttributes_Metrics')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Metrics Indicators", "Dimensions@odata.bind": ["Dimensions('Metrics Indicators')", "Dimensions('}ElementAttributes_Metrics Indicators')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Month", "Dimensions@odata.bind": ["Dimensions('Month')", "Dimensions('}ElementAttributes_Month')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_MonthMap", "Dimensions@odata.bind": ["Dimensions('MonthMap')", "Dimensions('}ElementAttributes_MonthMap')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Month Reporting", "Dimensions@odata.bind": ["Dimensions('Month Reporting')", "Dimensions('}ElementAttributes_Month Reporting')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Numbered List", "Dimensions@odata.bind": ["Dimensions('Numbered List')", "Dimensions('}ElementAttributes_Numbered List')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_OpExSubset_Picklist", "Dimensions@odata.bind": ["Dimensions('OpExSubset_Picklist')", "Dimensions('}ElementAttributes_OpExSubset_Picklist')"]}
{"Name": "}ElementAttributes_organization", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('}ElementAttributes_organization')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Organization Reporting", "Dimensions@odata.bind": ["Dimensions('Organization Reporting')", "Dimensions('}ElementAttributes_Organization Reporting')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_PhasedCosts", "Dimensions@odata.bind": ["Dimensions('PhasedCosts')", "Dimensions('}ElementAttributes_PhasedCosts')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Plant", "Dimensions@odata.bind": ["Dimensions('Plant')", "Dimensions('}ElementAttributes_Plant')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_product", "Dimensions@odata.bind": ["Dimensions('product')", "Dimensions('}ElementAttributes_product')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_ProductSubset_PickList", "Dimensions@odata.bind": ["Dimensions('ProductSubset_PickList')", "Dimensions('}ElementAttributes_ProductSubset_PickList')"]}
{"Name": "}ElementAttributes_Rate Measure", "Dimensions@odata.bind": ["Dimensions('Rate Measure')", "Dimensions('}ElementAttributes_Rate Measure')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Relative Time", "Dimensions@odata.bind": ["Dimensions('Relative Time')", "Dimensions('}ElementAttributes_Relative Time')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Revenue", "Dimensions@odata.bind": ["Dimensions('Revenue')", "Dimensions('}ElementAttributes_Revenue')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_RevenueAsmpt", "Dimensions@odata.bind": ["Dimensions('RevenueAsmpt')", "Dimensions('}ElementAttributes_RevenueAsmpt')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_SM Entries", "Dimensions@odata.bind": ["Dimensions('SM Entries')", "Dimensions('}ElementAttributes_SM Entries')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_SM Reviews", "Dimensions@odata.bind": ["Dimensions('SM Reviews')", "Dimensions('}ElementAttributes_SM Reviews')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Spread Methods", "Dimensions@odata.bind": ["Dimensions('Spread Methods')", "Dimensions('}ElementAttributes_Spread Methods')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_String", "Dimensions@odata.bind": ["Dimensions('String')", "Dimensions('}ElementAttributes_String')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Supply Chain Measures", "Dimensions@odata.bind": ["Dimensions('Supply Chain Measures')", "Dimensions('}ElementAttributes_Supply Chain Measures')"]}
{"Name": "}ElementAttributes_Task", "Dimensions@odata.bind": ["Dimensions('Task')", "Dimensions('}ElementAttributes_Task')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Task Workflow Measure", "Dimensions@odata.bind": ["Dimensions('Task Workflow Measure')", "Dimensions('}ElementAttributes_Task Workflow Measure')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_TrxID", "Dimensions@odata.bind": ["Dimensions('TrxID')", "Dimensions('}ElementAttributes_TrxID')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_TrxMeasures", "Dimensions@odata.bind": ["Dimensions('TrxMeasures')", "Dimensions('}ElementAttributes_TrxMeasures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Version", "Dimensions@odata.bind": ["Dimensions('Version')", "Dimensions('}ElementAttributes_Version')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n\n\n['Forecast','FcstMonth']=S:ATTRS('MonthMap',STR(DB('Relative Time',DB('Calendar','Current Year','String'),'Year','ActForMonth'),2,0),'Name');\n#['Forecast','FcstMonth']=S:ATTRS('MonthMap',STR(4,2,0),'Name');\n\n\nFEEDERS;\n\n\n\n\n"}
{"Name": "}ElementAttributes_Version Copy Measures", "Dimensions@odata.bind": ["Dimensions('Version Copy Measures')", "Dimensions('}ElementAttributes_Version Copy Measures')"]}
{"Name": "}ElementAttributes_Version Reporting", "Dimensions@odata.bind": ["Dimensions('Version Reporting')", "Dimensions('}ElementAttributes_Version Reporting')"]}
{"Name": "}ElementAttributes_Version Subset Measures", "Dimensions@odata.bind": ["Dimensions('Version Subset Measures')", "Dimensions('}ElementAttributes_Version Subset Measures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Version Subsets", "Dimensions@odata.bind": ["Dimensions('Version Subsets')", "Dimensions('}ElementAttributes_Version Subsets')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_Workflow Info", "Dimensions@odata.bind": ["Dimensions('Workflow Info')", "Dimensions('}ElementAttributes_Workflow Info')"]}
{"Name": "}ElementAttributes_Year", "Dimensions@odata.bind": ["Dimensions('Year')", "Dimensions('}ElementAttributes_Year')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Backup_Metrics Indicators", "Dimensions@odata.bind": ["Dimensions('}Backup_Metrics Indicators')", "Dimensions('}ElementAttributes_}Backup_Metrics Indicators')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Backup_Organization Reporting", "Dimensions@odata.bind": ["Dimensions('}Backup_Organization Reporting')", "Dimensions('}ElementAttributes_}Backup_Organization Reporting')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Clients", "Dimensions@odata.bind": ["Dimensions('}Clients')", "Dimensions('}ElementAttributes_}Clients')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Cultures", "Dimensions@odata.bind": ["Dimensions('}Cultures')", "Dimensions('}ElementAttributes_}Cultures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}DeployedLinkRecord", "Dimensions@odata.bind": ["Dimensions('}DeployedLinkRecord')", "Dimensions('}ElementAttributes_}DeployedLinkRecord')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}ElementAttributes_organization", "Dimensions@odata.bind": ["Dimensions('}ElementAttributes_organization')", "Dimensions('}ElementAttributes_}ElementAttributes_organization')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}formatTesterDimensionA", "Dimensions@odata.bind": ["Dimensions('}formatTesterDimensionA')", "Dimensions('}ElementAttributes_}formatTesterDimensionA')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}formatTesterDimensionB", "Dimensions@odata.bind": ["Dimensions('}formatTesterDimensionB')", "Dimensions('}ElementAttributes_}formatTesterDimensionB')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Groups", "Dimensions@odata.bind": ["Dimensions('}Groups')", "Dimensions('}ElementAttributes_}Groups')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Link_Allocation Calculation_3AAllocation Source Definition", "Dimensions@odata.bind": ["Dimensions('}Link_Allocation Calculation_3AAllocation Source Definition')", "Dimensions('}ElementAttributes_}Link_Allocation Calculation_3AAllocation Source Definition')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Link_Capital_3AAssetLife", "Dimensions@odata.bind": ["Dimensions('}Link_Capital_3AAssetLife')", "Dimensions('}ElementAttributes_}Link_Capital_3AAssetLife')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Link_Dep_3ACap_Additions", "Dimensions@odata.bind": ["Dimensions('}Link_Dep_3ACap_Additions')", "Dimensions('}ElementAttributes_}Link_Dep_3ACap_Additions')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Link_Dep_3ACap_InService", "Dimensions@odata.bind": ["Dimensions('}Link_Dep_3ACap_InService')", "Dimensions('}ElementAttributes_}Link_Dep_3ACap_InService')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Link_Emp_3AComp", "Dimensions@odata.bind": ["Dimensions('}Link_Emp_3AComp')", "Dimensions('}ElementAttributes_}Link_Emp_3AComp')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Link_Emp_3AJCAsmpt", "Dimensions@odata.bind": ["Dimensions('}Link_Emp_3AJCAsmpt')", "Dimensions('}ElementAttributes_}Link_Emp_3AJCAsmpt')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Link_Emp_3AJTAsmpt", "Dimensions@odata.bind": ["Dimensions('}Link_Emp_3AJTAsmpt')", "Dimensions('}ElementAttributes_}Link_Emp_3AJTAsmpt')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Link_Metrics _3C Income Statement", "Dimensions@odata.bind": ["Dimensions('}Link_Metrics _3C Income Statement')", "Dimensions('}ElementAttributes_}Link_Metrics _3C Income Statement')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Links", "Dimensions@odata.bind": ["Dimensions('}Links')", "Dimensions('}ElementAttributes_}Links')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}MH_Metrics", "Dimensions@odata.bind": ["Dimensions('}MH_Metrics')", "Dimensions('}ElementAttributes_}MH_Metrics')"]}
{"Name": "}ElementAttributes_}MI_Metrics_D", "Dimensions@odata.bind": ["Dimensions('}MI_Metrics_D')", "Dimensions('}ElementAttributes_}MI_Metrics_D')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}MI_Metrics_I", "Dimensions@odata.bind": ["Dimensions('}MI_Metrics_I')", "Dimensions('}ElementAttributes_}MI_Metrics_I')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Modeling", "Dimensions@odata.bind": ["Dimensions('}Modeling')", "Dimensions('}ElementAttributes_}Modeling')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}ModelProperties", "Dimensions@odata.bind": ["Dimensions('}ModelProperties')", "Dimensions('}ElementAttributes_}ModelProperties')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}MS_Metrics}_Smartco 2015 Plan", "Dimensions@odata.bind": ["Dimensions('}MS_Metrics}_Smartco 2015 Plan')", "Dimensions('}ElementAttributes_}MS_Metrics}_Smartco 2015 Plan')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}Processes", "Dimensions@odata.bind": ["Dimensions('}Processes')", "Dimensions('}ElementAttributes_}Processes')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}ProgressTimings", "Dimensions@odata.bind": ["Dimensions('}ProgressTimings')", "Dimensions('}ElementAttributes_}ProgressTimings')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}tp_applications", "Dimensions@odata.bind": ["Dimensions('}tp_applications')", "Dimensions('}ElementAttributes_}tp_applications')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}tp_config", "Dimensions@odata.bind": ["Dimensions('}tp_config')", "Dimensions('}ElementAttributes_}tp_config')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}tp_process_errors_localization", "Dimensions@odata.bind": ["Dimensions('}tp_process_errors_localization')", "Dimensions('}ElementAttributes_}tp_process_errors_localization')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}tp_system_config", "Dimensions@odata.bind": ["Dimensions('}tp_system_config')", "Dimensions('}ElementAttributes_}tp_system_config')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementAttributes_}tp_tasks}0f309cd0-4215-4482-8471-80ef000fcbb3", "Dimensions@odata.bind": ["Dimensions('}tp_tasks}0f309cd0-4215-4482-8471-80ef000fcbb3')", "Dimensions('}ElementAttributes_}tp_tasks}0f309cd0-4215-4482-8471-80ef000fcbb3')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementCaptions", "Dimensions@odata.bind": ["Dimensions('}Cultures')", "Dimensions('}CaptionMeasures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n['}CaptionMeasures':'Value'] = S:\n  IF(\n    DB( '}ElementCaptions', !}Cultures, 'Input' ) @= '',\n    IF(\n      ATTRS( '}Cultures', !}Cultures, 'BaseCulture' ) @= '',\n      DB( '}ElementCaptions', 'Default', 'Input' ),\n      DB( '}ElementCaptions', ATTRS( '}Cultures', !}Cultures, 'BaseCulture' ), 'Value' )\n    ),\n    DB( '}ElementCaptions', !}Cultures, 'Input' )\n  );"}
{"Name": "}ElementCaptionsByDimension", "Dimensions@odata.bind": ["Dimensions('}Dimensions')", "Dimensions('}Cultures')", "Dimensions('}CaptionMeasures')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n['}CaptionMeasures':'Value'] = S:\n  IF(\n    DB( '}ElementCaptionsByDimension', !}Dimensions, !}Cultures, 'Input' ) @= '',\n    IF(\n      DB( '}ElementCaptions', !}Cultures, 'Input' ) @= '',\n      IF(\n        ATTRS( '}Cultures', !}Cultures, 'BaseCulture' ) @= '',\n        IF(\n          DB( '}ElementCaptionsByDimension', !}Dimensions, 'Default', 'Input' ) @= '',\n          DB( '}ElementCaptions', 'Default', 'Input' ),\n          DB( '}ElementCaptionsByDimension', !}Dimensions, 'Default', 'Input' )\n        ),\n        DB( '}ElementCaptionsByDimension', !}Dimensions, ATTRS( '}Cultures', !}Cultures, 'BaseCulture' ), 'Value' )\n      ),\n      DB( '}ElementCaptions', !}Cultures, 'Input' )\n    ),\n    DB( '}ElementCaptionsByDimension', !}Dimensions, !}Cultures, 'Input' )\n  );"}
{"Name": "}ElementProperties_organization", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('}ElementProperties')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ElementSecurity_Metrics Indicators", "Dimensions@odata.bind": ["Dimensions('Metrics Indicators')", "Dimensions('}Groups')"]}
{"Name": "}ElementSecurity_organization", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('}Groups')"], "Rules": "#Region tp_planning_rule\n[]=S:IF(DB('}tp_intermediate_ElementSecurity}organization',!organization,!}Groups,'all_applications','Rights')@<>'',DB('}tp_intermediate_ElementSecurity}organization',!organization,!}Groups,'all_applications','Rights'),CONTINUE);\n\n#EndRegion"}
{"Name": "}ElementSecurity_Organization Reporting", "Dimensions@odata.bind": ["Dimensions('Organization Reporting')", "Dimensions('}Groups')"]}
{"Name": "}ElementSecurity_Version", "Dimensions@odata.bind": ["Dimensions('Version')", "Dimensions('}Groups')"]}
{"Name": "}ElementSecurity_}tp_applications", "Dimensions@odata.bind": ["Dimensions('}tp_applications')", "Dimensions('}Groups')"], "Rules": "[]=S:STET;"}
{"Name": "}ElementSecurity_}tp_tasks}0f309cd0-4215-4482-8471-80ef000fcbb3", "Dimensions@odata.bind": ["Dimensions('}tp_tasks}0f309cd0-4215-4482-8471-80ef000fcbb3')", "Dimensions('}Groups')"]}
{"Name": "}formatTesterCube", "Dimensions@odata.bind": ["Dimensions('}formatTesterDimensionA')", "Dimensions('}formatTesterDimensionB')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}HierarchyProperties", "Dimensions@odata.bind": ["Dimensions('}Dimensions')", "Dimensions('}Hierarchies')", "Dimensions('}HierarchyProperties')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ICube_}Link_Dep_3ACap_Additions", "Dimensions@odata.bind": ["Dimensions('Month')", "Dimensions('organization')", "Dimensions('CapitalList')", "Dimensions('Asset Types')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Capital')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n[] = S:IF(!Month @<> DB('Capital', !organization, !CapitalList, \n    !Asset Types, !Year, !Version, 'Purchase Period'), CONTINUE, \n    DB('Capital', !organization, !CapitalList, !Asset Types, \n    !Year, !Version, !Capital));\n[] = N:IF(!Month @<> DB('Capital', !organization, !CapitalList, \n    !Asset Types, !Year, !Version, 'Purchase Period'), CONTINUE, \n    DB('Capital', !organization, !CapitalList, !Asset Types, \n    !Year, !Version, !Capital));\n\nFEEDERS;\n['CapitalList':{'1','2','3','4','5'}, 'Capital':'Purchase Cost'] => DB('Depreciation', \n    !organization, !Asset Types, !Month, !Year, !Version, 'Additions');"}
{"Name": "}ICube_}Link_Dep_3ACap_InService", "Dimensions@odata.bind": ["Dimensions('Month')", "Dimensions('organization')", "Dimensions('CapitalList')", "Dimensions('Asset Types')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Capital')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n[] = S:IF(!Month @<> DB('Capital', !organization, !CapitalList, \n    !Asset Types, !Year, !Version, 'In-Service Period'), CONTINUE, \n    DB('Capital', !organization, !CapitalList, !Asset Types, \n    !Year, !Version, !Capital));\n[] = N:IF(!Month @<> DB('Capital', !organization, !CapitalList, \n    !Asset Types, !Year, !Version, 'In-Service Period'), CONTINUE, \n    DB('Capital', !organization, !CapitalList, !Asset Types, \n    !Year, !Version, !Capital));\n\nFEEDERS;\n['CapitalList':{'11','12','13','14','15','16','17','18','19','1','2','3','4','5','6','7','8','9','20','10'}, 'Capital':'Purchase Cost'] => DB('Depreciation', \n    !organization, !Asset Types, !Month, !Year, !Version, 'In Service');"}
{"Name": "}LocalizedCubeAttributes", "Dimensions@odata.bind": ["Dimensions('}Cubes')", "Dimensions('}Cultures')", "Dimensions('}CubeAttributes')"]}
{"Name": "}LocalizedDimensionAttributes", "Dimensions@odata.bind": ["Dimensions('}Dimensions')", "Dimensions('}Cultures')", "Dimensions('}DimensionAttributes')"]}
{"Name": "}LocalizedElementAttributes_Account", "Dimensions@odata.bind": ["Dimensions('Account')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Account')"]}
{"Name": "}LocalizedElementAttributes_Account Reporting", "Dimensions@odata.bind": ["Dimensions('Account Reporting')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Account Reporting')"]}
{"Name": "}LocalizedElementAttributes_Allocation Calculation", "Dimensions@odata.bind": ["Dimensions('Allocation Calculation')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Allocation Calculation')"]}
{"Name": "}LocalizedElementAttributes_Allocation List", "Dimensions@odata.bind": ["Dimensions('Allocation List')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Allocation List')"]}
{"Name": "}LocalizedElementAttributes_Allocation Source Definition", "Dimensions@odata.bind": ["Dimensions('Allocation Source Definition')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Allocation Source Definition')"]}
{"Name": "}LocalizedElementAttributes_Asset Life", "Dimensions@odata.bind": ["Dimensions('Asset Life')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Asset Life')"]}
{"Name": "}LocalizedElementAttributes_Asset Types", "Dimensions@odata.bind": ["Dimensions('Asset Types')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Asset Types')"]}
{"Name": "}LocalizedElementAttributes_Benefit", "Dimensions@odata.bind": ["Dimensions('Benefit')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Benefit')"]}
{"Name": "}LocalizedElementAttributes_Calendar", "Dimensions@odata.bind": ["Dimensions('Calendar')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Calendar')"]}
{"Name": "}LocalizedElementAttributes_Capital", "Dimensions@odata.bind": ["Dimensions('Capital')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Capital')"]}
{"Name": "}LocalizedElementAttributes_CapitalList", "Dimensions@odata.bind": ["Dimensions('CapitalList')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_CapitalList')"]}
{"Name": "}LocalizedElementAttributes_Channel", "Dimensions@odata.bind": ["Dimensions('Channel')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Channel')"]}
{"Name": "}LocalizedElementAttributes_Compensation", "Dimensions@odata.bind": ["Dimensions('Compensation')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Compensation')"]}
{"Name": "}LocalizedElementAttributes_Currency Calc", "Dimensions@odata.bind": ["Dimensions('Currency Calc')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Currency Calc')"]}
{"Name": "}LocalizedElementAttributes_Depreciation", "Dimensions@odata.bind": ["Dimensions('Depreciation')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Depreciation')"]}
{"Name": "}LocalizedElementAttributes_Employee", "Dimensions@odata.bind": ["Dimensions('Employee')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Employee')"]}
{"Name": "}LocalizedElementAttributes_EmployeeList", "Dimensions@odata.bind": ["Dimensions('EmployeeList')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_EmployeeList')"]}
{"Name": "}LocalizedElementAttributes_Employee Name", "Dimensions@odata.bind": ["Dimensions('Employee Name')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Employee Name')"]}
{"Name": "}LocalizedElementAttributes_Exchange Rate", "Dimensions@odata.bind": ["Dimensions('Exchange Rate')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Exchange Rate')"]}
{"Name": "}LocalizedElementAttributes_Exchange Rate Type", "Dimensions@odata.bind": ["Dimensions('Exchange Rate Type')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Exchange Rate Type')"]}
{"Name": "}LocalizedElementAttributes_ExternalFactors", "Dimensions@odata.bind": ["Dimensions('ExternalFactors')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_ExternalFactors')"]}
{"Name": "}LocalizedElementAttributes_FcstMethod", "Dimensions@odata.bind": ["Dimensions('FcstMethod')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_FcstMethod')"]}
{"Name": "}LocalizedElementAttributes_jobcode", "Dimensions@odata.bind": ["Dimensions('jobcode')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_jobcode')"]}
{"Name": "}LocalizedElementAttributes_JobCodeAsmpt", "Dimensions@odata.bind": ["Dimensions('JobCodeAsmpt')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_JobCodeAsmpt')"]}
{"Name": "}LocalizedElementAttributes_JobType", "Dimensions@odata.bind": ["Dimensions('JobType')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_JobType')"]}
{"Name": "}LocalizedElementAttributes_JobTypeAssumption", "Dimensions@odata.bind": ["Dimensions('JobTypeAssumption')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_JobTypeAssumption')"]}
{"Name": "}LocalizedElementAttributes_LineItem_PickList", "Dimensions@odata.bind": ["Dimensions('LineItem_PickList')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_LineItem_PickList')"]}
{"Name": "}LocalizedElementAttributes_LineItemDetail", "Dimensions@odata.bind": ["Dimensions('LineItemDetail')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_LineItemDetail')"]}
{"Name": "}LocalizedElementAttributes_LineItemList", "Dimensions@odata.bind": ["Dimensions('LineItemList')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_LineItemList')"]}
{"Name": "}LocalizedElementAttributes_Metrics", "Dimensions@odata.bind": ["Dimensions('Metrics')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Metrics')"]}
{"Name": "}LocalizedElementAttributes_Metrics Indicators", "Dimensions@odata.bind": ["Dimensions('Metrics Indicators')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Metrics Indicators')"]}
{"Name": "}LocalizedElementAttributes_Month", "Dimensions@odata.bind": ["Dimensions('Month')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Month')"]}
{"Name": "}LocalizedElementAttributes_MonthMap", "Dimensions@odata.bind": ["Dimensions('MonthMap')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_MonthMap')"]}
{"Name": "}LocalizedElementAttributes_Month Reporting", "Dimensions@odata.bind": ["Dimensions('Month Reporting')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Month Reporting')"]}
{"Name": "}LocalizedElementAttributes_Numbered List", "Dimensions@odata.bind": ["Dimensions('Numbered List')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Numbered List')"]}
{"Name": "}LocalizedElementAttributes_OpExSubset_Picklist", "Dimensions@odata.bind": ["Dimensions('OpExSubset_Picklist')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_OpExSubset_Picklist')"]}
{"Name": "}LocalizedElementAttributes_organization", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_organization')"]}
{"Name": "}LocalizedElementAttributes_Organization Reporting", "Dimensions@odata.bind": ["Dimensions('Organization Reporting')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Organization Reporting')"]}
{"Name": "}LocalizedElementAttributes_PhasedCosts", "Dimensions@odata.bind": ["Dimensions('PhasedCosts')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_PhasedCosts')"]}
{"Name": "}LocalizedElementAttributes_Plant", "Dimensions@odata.bind": ["Dimensions('Plant')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Plant')"]}
{"Name": "}LocalizedElementAttributes_product", "Dimensions@odata.bind": ["Dimensions('product')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_product')"]}
{"Name": "}LocalizedElementAttributes_ProductSubset_PickList", "Dimensions@odata.bind": ["Dimensions('ProductSubset_PickList')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_ProductSubset_PickList')"]}
{"Name": "}LocalizedElementAttributes_Rate Measure", "Dimensions@odata.bind": ["Dimensions('Rate Measure')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Rate Measure')"]}
{"Name": "}LocalizedElementAttributes_Relative Time", "Dimensions@odata.bind": ["Dimensions('Relative Time')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Relative Time')"]}
{"Name": "}LocalizedElementAttributes_Revenue", "Dimensions@odata.bind": ["Dimensions('Revenue')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Revenue')"]}
{"Name": "}LocalizedElementAttributes_RevenueAsmpt", "Dimensions@odata.bind": ["Dimensions('RevenueAsmpt')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_RevenueAsmpt')"]}
{"Name": "}LocalizedElementAttributes_SM Reviews", "Dimensions@odata.bind": ["Dimensions('SM Reviews')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_SM Reviews')"]}
{"Name": "}LocalizedElementAttributes_Spread Methods", "Dimensions@odata.bind": ["Dimensions('Spread Methods')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Spread Methods')"]}
{"Name": "}LocalizedElementAttributes_String", "Dimensions@odata.bind": ["Dimensions('String')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_String')"]}
{"Name": "}LocalizedElementAttributes_Supply Chain Measures", "Dimensions@odata.bind": ["Dimensions('Supply Chain Measures')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Supply Chain Measures')"]}
{"Name": "}LocalizedElementAttributes_Task", "Dimensions@odata.bind": ["Dimensions('Task')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Task')"]}
{"Name": "}LocalizedElementAttributes_Task Workflow Measure", "Dimensions@odata.bind": ["Dimensions('Task Workflow Measure')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Task Workflow Measure')"]}
{"Name": "}LocalizedElementAttributes_TrxID", "Dimensions@odata.bind": ["Dimensions('TrxID')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_TrxID')"]}
{"Name": "}LocalizedElementAttributes_TrxMeasures", "Dimensions@odata.bind": ["Dimensions('TrxMeasures')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_TrxMeasures')"]}
{"Name": "}LocalizedElementAttributes_Version", "Dimensions@odata.bind": ["Dimensions('Version')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Version')"]}
{"Name": "}LocalizedElementAttributes_Version Copy Measures", "Dimensions@odata.bind": ["Dimensions('Version Copy Measures')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Version Copy Measures')"]}
{"Name": "}LocalizedElementAttributes_Version Reporting", "Dimensions@odata.bind": ["Dimensions('Version Reporting')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Version Reporting')"]}
{"Name": "}LocalizedElementAttributes_Version Subset Measures", "Dimensions@odata.bind": ["Dimensions('Version Subset Measures')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Version Subset Measures')"]}
{"Name": "}LocalizedElementAttributes_Version Subsets", "Dimensions@odata.bind": ["Dimensions('Version Subsets')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Version Subsets')"]}
{"Name": "}LocalizedElementAttributes_Workflow Info", "Dimensions@odata.bind": ["Dimensions('Workflow Info')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Workflow Info')"]}
{"Name": "}LocalizedElementAttributes_Year", "Dimensions@odata.bind": ["Dimensions('Year')", "Dimensions('}Cultures')", "Dimensions('}ElementAttributes_Year')"]}
{"Name": "}LocalizedProcessAttributes", "Dimensions@odata.bind": ["Dimensions('}Processes')", "Dimensions('}Cultures')", "Dimensions('}ProcessAttributes')"]}
{"Name": "}LocalizedSubsetAttributes_Account", "Dimensions@odata.bind": ["Dimensions('}Subsets_Account')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Account')"]}
{"Name": "}LocalizedSubsetAttributes_Account Reporting", "Dimensions@odata.bind": ["Dimensions('}Subsets_Account Reporting')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Account Reporting')"]}
{"Name": "}LocalizedSubsetAttributes_Allocation Calculation", "Dimensions@odata.bind": ["Dimensions('}Subsets_Allocation Calculation')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Allocation Calculation')"]}
{"Name": "}LocalizedSubsetAttributes_Allocation List", "Dimensions@odata.bind": ["Dimensions('}Subsets_Allocation List')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Allocation List')"]}
{"Name": "}LocalizedSubsetAttributes_Allocation Source Definition", "Dimensions@odata.bind": ["Dimensions('}Subsets_Allocation Source Definition')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Allocation Source Definition')"]}
{"Name": "}LocalizedSubsetAttributes_Asset Life", "Dimensions@odata.bind": ["Dimensions('}Subsets_Asset Life')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Asset Life')"]}
{"Name": "}LocalizedSubsetAttributes_Asset Types", "Dimensions@odata.bind": ["Dimensions('}Subsets_Asset Types')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Asset Types')"]}
{"Name": "}LocalizedSubsetAttributes_Benefit", "Dimensions@odata.bind": ["Dimensions('}Subsets_Benefit')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Benefit')"]}
{"Name": "}LocalizedSubsetAttributes_Calendar", "Dimensions@odata.bind": ["Dimensions('}Subsets_Calendar')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Calendar')"]}
{"Name": "}LocalizedSubsetAttributes_Capital", "Dimensions@odata.bind": ["Dimensions('}Subsets_Capital')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Capital')"]}
{"Name": "}LocalizedSubsetAttributes_CapitalList", "Dimensions@odata.bind": ["Dimensions('}Subsets_CapitalList')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_CapitalList')"]}
{"Name": "}LocalizedSubsetAttributes_Channel", "Dimensions@odata.bind": ["Dimensions('}Subsets_Channel')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Channel')"]}
{"Name": "}LocalizedSubsetAttributes_Compensation", "Dimensions@odata.bind": ["Dimensions('}Subsets_Compensation')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Compensation')"]}
{"Name": "}LocalizedSubsetAttributes_Currency", "Dimensions@odata.bind": ["Dimensions('}Subsets_Currency')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Currency')"]}
{"Name": "}LocalizedSubsetAttributes_Currency Calc", "Dimensions@odata.bind": ["Dimensions('}Subsets_Currency Calc')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Currency Calc')"]}
{"Name": "}LocalizedSubsetAttributes_Depreciation", "Dimensions@odata.bind": ["Dimensions('}Subsets_Depreciation')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Depreciation')"]}
{"Name": "}LocalizedSubsetAttributes_Employee", "Dimensions@odata.bind": ["Dimensions('}Subsets_Employee')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Employee')"]}
{"Name": "}LocalizedSubsetAttributes_EmployeeList", "Dimensions@odata.bind": ["Dimensions('}Subsets_EmployeeList')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_EmployeeList')"]}
{"Name": "}LocalizedSubsetAttributes_Employee Name", "Dimensions@odata.bind": ["Dimensions('}Subsets_Employee Name')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Employee Name')"]}
{"Name": "}LocalizedSubsetAttributes_Exchange Rate", "Dimensions@odata.bind": ["Dimensions('}Subsets_Exchange Rate')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Exchange Rate')"]}
{"Name": "}LocalizedSubsetAttributes_Exchange Rate Type", "Dimensions@odata.bind": ["Dimensions('}Subsets_Exchange Rate Type')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Exchange Rate Type')"]}
{"Name": "}LocalizedSubsetAttributes_ExternalFactors", "Dimensions@odata.bind": ["Dimensions('}Subsets_ExternalFactors')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_ExternalFactors')"]}
{"Name": "}LocalizedSubsetAttributes_jobcode", "Dimensions@odata.bind": ["Dimensions('}Subsets_jobcode')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_jobcode')"]}
{"Name": "}LocalizedSubsetAttributes_JobCodeAsmpt", "Dimensions@odata.bind": ["Dimensions('}Subsets_JobCodeAsmpt')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_JobCodeAsmpt')"]}
{"Name": "}LocalizedSubsetAttributes_JobType", "Dimensions@odata.bind": ["Dimensions('}Subsets_JobType')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_JobType')"]}
{"Name": "}LocalizedSubsetAttributes_JobTypeAssumption", "Dimensions@odata.bind": ["Dimensions('}Subsets_JobTypeAssumption')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_JobTypeAssumption')"]}
{"Name": "}LocalizedSubsetAttributes_LineItem_PickList", "Dimensions@odata.bind": ["Dimensions('}Subsets_LineItem_PickList')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_LineItem_PickList')"]}
{"Name": "}LocalizedSubsetAttributes_LineItemDetail", "Dimensions@odata.bind": ["Dimensions('}Subsets_LineItemDetail')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_LineItemDetail')"]}
{"Name": "}LocalizedSubsetAttributes_LineItemList", "Dimensions@odata.bind": ["Dimensions('}Subsets_LineItemList')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_LineItemList')"]}
{"Name": "}LocalizedSubsetAttributes_Metrics", "Dimensions@odata.bind": ["Dimensions('}Subsets_Metrics')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Metrics')"]}
{"Name": "}LocalizedSubsetAttributes_Metrics Indicators", "Dimensions@odata.bind": ["Dimensions('}Subsets_Metrics Indicators')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Metrics Indicators')"]}
{"Name": "}LocalizedSubsetAttributes_Month", "Dimensions@odata.bind": ["Dimensions('}Subsets_Month')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Month')"]}
{"Name": "}LocalizedSubsetAttributes_MonthMap", "Dimensions@odata.bind": ["Dimensions('}Subsets_MonthMap')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_MonthMap')"]}
{"Name": "}LocalizedSubsetAttributes_Month Reporting", "Dimensions@odata.bind": ["Dimensions('}Subsets_Month Reporting')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Month Reporting')"]}
{"Name": "}LocalizedSubsetAttributes_Numbered List", "Dimensions@odata.bind": ["Dimensions('}Subsets_Numbered List')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Numbered List')"]}
{"Name": "}LocalizedSubsetAttributes_OpExSubset_Picklist", "Dimensions@odata.bind": ["Dimensions('}Subsets_OpExSubset_Picklist')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_OpExSubset_Picklist')"]}
{"Name": "}LocalizedSubsetAttributes_organization", "Dimensions@odata.bind": ["Dimensions('}Subsets_organization')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_organization')"]}
{"Name": "}LocalizedSubsetAttributes_Organization Reporting", "Dimensions@odata.bind": ["Dimensions('}Subsets_Organization Reporting')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Organization Reporting')"]}
{"Name": "}LocalizedSubsetAttributes_PhasedCosts", "Dimensions@odata.bind": ["Dimensions('}Subsets_PhasedCosts')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_PhasedCosts')"]}
{"Name": "}LocalizedSubsetAttributes_Plant", "Dimensions@odata.bind": ["Dimensions('}Subsets_Plant')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Plant')"]}
{"Name": "}LocalizedSubsetAttributes_product", "Dimensions@odata.bind": ["Dimensions('}Subsets_product')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_product')"]}
{"Name": "}LocalizedSubsetAttributes_ProductSubset_PickList", "Dimensions@odata.bind": ["Dimensions('}Subsets_ProductSubset_PickList')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_ProductSubset_PickList')"]}
{"Name": "}LocalizedSubsetAttributes_Rate Measure", "Dimensions@odata.bind": ["Dimensions('}Subsets_Rate Measure')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Rate Measure')"]}
{"Name": "}LocalizedSubsetAttributes_Relative Time", "Dimensions@odata.bind": ["Dimensions('}Subsets_Relative Time')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Relative Time')"]}
{"Name": "}LocalizedSubsetAttributes_Revenue", "Dimensions@odata.bind": ["Dimensions('}Subsets_Revenue')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Revenue')"]}
{"Name": "}LocalizedSubsetAttributes_RevenueAsmpt", "Dimensions@odata.bind": ["Dimensions('}Subsets_RevenueAsmpt')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_RevenueAsmpt')"]}
{"Name": "}LocalizedSubsetAttributes_Spread Methods", "Dimensions@odata.bind": ["Dimensions('}Subsets_Spread Methods')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Spread Methods')"]}
{"Name": "}LocalizedSubsetAttributes_String", "Dimensions@odata.bind": ["Dimensions('}Subsets_String')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_String')"]}
{"Name": "}LocalizedSubsetAttributes_Supply Chain Measures", "Dimensions@odata.bind": ["Dimensions('}Subsets_Supply Chain Measures')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Supply Chain Measures')"]}
{"Name": "}LocalizedSubsetAttributes_Task", "Dimensions@odata.bind": ["Dimensions('}Subsets_Task')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Task')"]}
{"Name": "}LocalizedSubsetAttributes_Task Workflow Measure", "Dimensions@odata.bind": ["Dimensions('}Subsets_Task Workflow Measure')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Task Workflow Measure')"]}
{"Name": "}LocalizedSubsetAttributes_TrxMeasures", "Dimensions@odata.bind": ["Dimensions('}Subsets_TrxMeasures')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_TrxMeasures')"]}
{"Name": "}LocalizedSubsetAttributes_Version", "Dimensions@odata.bind": ["Dimensions('}Subsets_Version')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Version')"]}
{"Name": "}LocalizedSubsetAttributes_Version Subset Measures", "Dimensions@odata.bind": ["Dimensions('}Subsets_Version Subset Measures')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Version Subset Measures')"]}
{"Name": "}LocalizedSubsetAttributes_Version Subsets", "Dimensions@odata.bind": ["Dimensions('}Subsets_Version Subsets')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Version Subsets')"]}
{"Name": "}LocalizedSubsetAttributes_Year", "Dimensions@odata.bind": ["Dimensions('}Subsets_Year')", "Dimensions('}Cultures')", "Dimensions('}SubsetAttributes_Year')"]}
{"Name": "}LocalizedViewAttributes_Allocation Calculation", "Dimensions@odata.bind": ["Dimensions('}Views_Allocation Calculation')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Allocation Calculation')"]}
{"Name": "}LocalizedViewAttributes_Allocation Source Definition", "Dimensions@odata.bind": ["Dimensions('}Views_Allocation Source Definition')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Allocation Source Definition')"]}
{"Name": "}LocalizedViewAttributes_Asset Life", "Dimensions@odata.bind": ["Dimensions('}Views_Asset Life')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Asset Life')"]}
{"Name": "}LocalizedViewAttributes_Benefit Assumptions", "Dimensions@odata.bind": ["Dimensions('}Views_Benefit Assumptions')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Benefit Assumptions')"]}
{"Name": "}LocalizedViewAttributes_Calendar", "Dimensions@odata.bind": ["Dimensions('}Views_Calendar')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Calendar')"]}
{"Name": "}LocalizedViewAttributes_Capital", "Dimensions@odata.bind": ["Dimensions('}Views_Capital')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Capital')"]}
{"Name": "}LocalizedViewAttributes_Compensation", "Dimensions@odata.bind": ["Dimensions('}Views_Compensation')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Compensation')"]}
{"Name": "}LocalizedViewAttributes_Compensation Reporting", "Dimensions@odata.bind": ["Dimensions('}Views_Compensation Reporting')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Compensation Reporting')"]}
{"Name": "}LocalizedViewAttributes_Depreciation", "Dimensions@odata.bind": ["Dimensions('}Views_Depreciation')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Depreciation')"]}
{"Name": "}LocalizedViewAttributes_Employee", "Dimensions@odata.bind": ["Dimensions('}Views_Employee')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Employee')"]}
{"Name": "}LocalizedViewAttributes_Exchange Rates", "Dimensions@odata.bind": ["Dimensions('}Views_Exchange Rates')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Exchange Rates')"]}
{"Name": "}LocalizedViewAttributes_ExternalFactors", "Dimensions@odata.bind": ["Dimensions('}Views_ExternalFactors')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_ExternalFactors')"]}
{"Name": "}LocalizedViewAttributes_FcstMethod", "Dimensions@odata.bind": ["Dimensions('}Views_FcstMethod')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_FcstMethod')"]}
{"Name": "}LocalizedViewAttributes_GLTransactions", "Dimensions@odata.bind": ["Dimensions('}Views_GLTransactions')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_GLTransactions')"]}
{"Name": "}LocalizedViewAttributes_Income Statement", "Dimensions@odata.bind": ["Dimensions('}Views_Income Statement')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Income Statement')"]}
{"Name": "}LocalizedViewAttributes_Income Statement Reporting", "Dimensions@odata.bind": ["Dimensions('}Views_Income Statement Reporting')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Income Statement Reporting')"]}
{"Name": "}LocalizedViewAttributes_Job Code Assumptions", "Dimensions@odata.bind": ["Dimensions('}Views_Job Code Assumptions')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Job Code Assumptions')"]}
{"Name": "}LocalizedViewAttributes_Job Type Assumption", "Dimensions@odata.bind": ["Dimensions('}Views_Job Type Assumption')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Job Type Assumption')"]}
{"Name": "}LocalizedViewAttributes_Line Item Detail", "Dimensions@odata.bind": ["Dimensions('}Views_Line Item Detail')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Line Item Detail')"]}
{"Name": "}LocalizedViewAttributes_Metrics", "Dimensions@odata.bind": ["Dimensions('}Views_Metrics')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Metrics')"]}
{"Name": "}LocalizedViewAttributes_Phased Costs", "Dimensions@odata.bind": ["Dimensions('}Views_Phased Costs')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Phased Costs')"]}
{"Name": "}LocalizedViewAttributes_Rate BOM", "Dimensions@odata.bind": ["Dimensions('}Views_Rate BOM')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Rate BOM')"]}
{"Name": "}LocalizedViewAttributes_Relative Time", "Dimensions@odata.bind": ["Dimensions('}Views_Relative Time')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Relative Time')"]}
{"Name": "}LocalizedViewAttributes_Revenue", "Dimensions@odata.bind": ["Dimensions('}Views_Revenue')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Revenue')"]}
{"Name": "}LocalizedViewAttributes_Revenue Assumptions", "Dimensions@odata.bind": ["Dimensions('}Views_Revenue Assumptions')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Revenue Assumptions')"]}
{"Name": "}LocalizedViewAttributes_Revenue Reporting", "Dimensions@odata.bind": ["Dimensions('}Views_Revenue Reporting')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Revenue Reporting')"]}
{"Name": "}LocalizedViewAttributes_Social Media", "Dimensions@odata.bind": ["Dimensions('}Views_Social Media')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Social Media')"]}
{"Name": "}LocalizedViewAttributes_Spread Methods", "Dimensions@odata.bind": ["Dimensions('}Views_Spread Methods')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Spread Methods')"]}
{"Name": "}LocalizedViewAttributes_Supply Chain", "Dimensions@odata.bind": ["Dimensions('}Views_Supply Chain')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Supply Chain')"]}
{"Name": "}LocalizedViewAttributes_Task Workflow", "Dimensions@odata.bind": ["Dimensions('}Views_Task Workflow')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Task Workflow')"]}
{"Name": "}LocalizedViewAttributes_Version Copy Control", "Dimensions@odata.bind": ["Dimensions('}Views_Version Copy Control')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Version Copy Control')"]}
{"Name": "}LocalizedViewAttributes_Version Subset Control", "Dimensions@odata.bind": ["Dimensions('}Views_Version Subset Control')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Version Subset Control')"]}
{"Name": "}LocalizedViewAttributes_Workflow Reporting", "Dimensions@odata.bind": ["Dimensions('}Views_Workflow Reporting')", "Dimensions('}Cultures')", "Dimensions('}ViewAttributes_Workflow Reporting')"]}
{"Name": "}MI_Metrics", "Dimensions@odata.bind": ["Dimensions('Metrics')", "Dimensions('}MI_Metrics_I')", "Dimensions('}MI_Metrics_D')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion"}
{"Name": "}MS_Metrics}_Smartco 2015 Plan", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('Year')", "Dimensions('Month')", "Dimensions('}MS_Metrics}_Smartco 2015 Plan')", "Dimensions('Metrics Indicators')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\nUNDEFVALS;\n#EndRegion\n#Region Dimension:Metrics Indicators\n#Autogenerated METRICSTRATEGY CONSOLIDATED 4D65747269637320496E64696361746F7273\n#@AutoGenerated\n['Metrics Indicators':{'status_1_count','status_0_count','status_incomplete_count','status_-1_count'}]=IF(DIMIX('Metrics',!}MS_Metrics}_Smartco 2015 Plan) = 0,IF(ISLEAF=1,0,ConsolidateChildren('}MS_Metrics}_Smartco 2015 Plan')),CONTINUE);\n#EndRegion\n#Region Cube:}MS_Metrics}_Smartco 2015 Plan\n#Autogenerated METRICSTRATEGY NONE 7D4D535F4D6574726963737D5F536D617274636F203230313520506C616E\n#@AutoGenerated\n[] = IF(DIMIX('Metrics',!}MS_Metrics}_Smartco 2015 Plan) <> 0,DB('Metrics',!}MS_Metrics}_Smartco 2015 Plan,!organization,!Year,!Month,!Metrics Indicators),CONTINUE);\n#EndRegion\n#Region Dimension:Metrics Indicators, Member:Status\n#Autogenerated METRICSTRATEGY NONE 5B4D65747269637320496E64696361746F72735D2E5B5374617475735D\n#@AutoGenerated\n['Metrics Indicators':'status']=IF(DIMIX('Metrics',!}MS_Metrics}_Smartco 2015 Plan) = 0,\nIF(ATTRN('}MS_Metrics}_Smartco 2015 Plan',!}MS_Metrics}_Smartco 2015 Plan,'Status Calculation')=0,UNDEFINEDCELLVALUE,\nIF(ATTRN('}MS_Metrics}_Smartco 2015 Plan',!}MS_Metrics}_Smartco 2015 Plan,'Status Calculation')=2,IF(['Metrics Indicators':'status_1_count']>0,1,IF(['Metrics Indicators':'status_incomplete_count']>0,UNDEFINEDCELLVALUE,\nIF(['Metrics Indicators':'status_0_count']>0,0,IF(['Metrics Indicators':'status_-1_count']>0,-1,UNDEFINEDCELLVALUE))))\n,\nIF(ATTRN('}MS_Metrics}_Smartco 2015 Plan',!}MS_Metrics}_Smartco 2015 Plan,'Status Calculation')=3,IF(['Metrics Indicators':'status_-1_count']>0,-1,IF(['Metrics Indicators':'status_incomplete_count']>0,UNDEFINEDCELLVALUE,\nIF(['Metrics Indicators':'status_0_count']>0,0,IF(['Metrics Indicators':'status_1_count']>0,1,UNDEFINEDCELLVALUE))))\n,IF(['Metrics Indicators':'status_1_count']>0%['Metrics Indicators':'status_0_count']>0%['Metrics Indicators':'status_-1_count']>0,\nIF(['Metrics Indicators':'status_1_count']>=['Metrics Indicators':'status_0_count']&['Metrics Indicators':'status_1_count']>=['Metrics Indicators':'status_-1_count']&['Metrics Indicators':'status_1_count']>=['Metrics Indicators':'status_incomplete_count'],1,\nIF(['Metrics Indicators':'status_0_count']>=['Metrics Indicators':'status_-1_count']&['Metrics Indicators':'status_0_count']>=['Metrics Indicators':'status_incomplete_count'],0,\nIF(['Metrics Indicators':'status_incomplete_count']>0&['Metrics Indicators':'status_incomplete_count']>['Metrics Indicators':'status_-1_count'],UNDEFINEDCELLVALUE,-1))),UNDEFINEDCELLVALUE)\n))),CONTINUE);\n#EndRegion\n\nFEEDERS;"}
{"Name": "}PickList_Employee", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('EmployeeList')", "Dimensions('Year')", "Dimensions('Version')", "Dimensions('Employee')", "Dimensions('}PickList')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n['Job Code']=S:IF(DB('Employee',!organization,!EmployeeList,!Year,!Version,'Job Type') @='','Subset:JobCode:EmptyJobType','Subset:JobCode:'|DB('Employee',!organization,!EmployeeList,!Year,!Version,'Job Type'));"}
{"Name": "}PickList_}ElementAttributes_Account", "Dimensions@odata.bind": ["Dimensions('Account')", "Dimensions('}ElementAttributes_Account')", "Dimensions('}PickList')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion\n['Forecast Method']=S:'Static::Budget:Remaining Budget:Average Prior 3 Months:Last Year Actual';"}
{"Name": "}PlanningControl", "Dimensions@odata.bind": ["Dimensions('}ApplicationNames')", "Dimensions('}ApplicationParameters')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}ProcessAttributes", "Dimensions@odata.bind": ["Dimensions('}Processes')", "Dimensions('}ProcessAttributes')"]}
{"Name": "}ProcessSecurity", "Dimensions@odata.bind": ["Dimensions('}Processes')", "Dimensions('}Groups')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}SecurityOverlayGlobal_Income Statement", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('}SecurityOverlay')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}SecurityOverlayGlobal_Metrics", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('}SecurityOverlay')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}SecurityOverlayGlobal_Revenue", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('}SecurityOverlay')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}SecurityOverlayGlobal_Supply Chain", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('}SecurityOverlay')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}StatsByChore", "Dimensions@odata.bind": ["Dimensions('}TimeIntervals')", "Dimensions('}Chores')", "Dimensions('}StatsByProcess')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}StatsByClient", "Dimensions@odata.bind": ["Dimensions('}StatsStatsByClient')", "Dimensions('}PerfClients')", "Dimensions('}TimeIntervals')"], "Rules": "skipcheck;\n['Bytes/Message']=['Message Bytes']/['Message Count'];\nfeeders;\n['Message Bytes']=>['Bytes/Message'];"}
{"Name": "}StatsByCube", "Dimensions@odata.bind": ["Dimensions('}StatsStatsByCube')", "Dimensions('}PerfCubes')", "Dimensions('}TimeIntervals')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}StatsByCubeByClient", "Dimensions@odata.bind": ["Dimensions('}PerfClients')", "Dimensions('}PerfCubes')", "Dimensions('}Cube Functions')", "Dimensions('}StatsStatsByCubeByClient')", "Dimensions('}TimeIntervals')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}StatsByProcess", "Dimensions@odata.bind": ["Dimensions('}TimeIntervals')", "Dimensions('}Processes')", "Dimensions('}StatsByProcess')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}StatsByRule", "Dimensions@odata.bind": ["Dimensions('}Cubes')", "Dimensions('}LineNumber')", "Dimensions('}RuleStats')"]}
{"Name": "}StatsForServer", "Dimensions@odata.bind": ["Dimensions('}StatsStatsForServer')", "Dimensions('}TimeIntervals')"], "Rules": "#Region System\nFEEDSTRINGS;\nSKIPCHECK;\n#EndRegion"}
{"Name": "}SubsetAttributes_Account", "Dimensions@odata.bind": ["Dimensions('}Subsets_Account')", "Dimensions('}SubsetAttributes_Account')"]}
{"Name": "}SubsetAttributes_Account Reporting", "Dimensions@odata.bind": ["Dimensions('}Subsets_Account Reporting')", "Dimensions('}SubsetAttributes_Account Reporting')"]}
{"Name": "}SubsetAttributes_Allocation Calculation", "Dimensions@odata.bind": ["Dimensions('}Subsets_Allocation Calculation')", "Dimensions('}SubsetAttributes_Allocation Calculation')"]}
{"Name": "}SubsetAttributes_Allocation List", "Dimensions@odata.bind": ["Dimensions('}Subsets_Allocation List')", "Dimensions('}SubsetAttributes_Allocation List')"]}
{"Name": "}SubsetAttributes_Allocation Source Definition", "Dimensions@odata.bind": ["Dimensions('}Subsets_Allocation Source Definition')", "Dimensions('}SubsetAttributes_Allocation Source Definition')"]}
{"Name": "}SubsetAttributes_Asset Life", "Dimensions@odata.bind": ["Dimensions('}Subsets_Asset Life')", "Dimensions('}SubsetAttributes_Asset Life')"]}
{"Name": "}SubsetAttributes_Asset Types", "Dimensions@odata.bind": ["Dimensions('}Subsets_Asset Types')", "Dimensions('}SubsetAttributes_Asset Types')"]}
{"Name": "}SubsetAttributes_Benefit", "Dimensions@odata.bind": ["Dimensions('}Subsets_Benefit')", "Dimensions('}SubsetAttributes_Benefit')"]}
{"Name": "}SubsetAttributes_Calendar", "Dimensions@odata.bind": ["Dimensions('}Subsets_Calendar')", "Dimensions('}SubsetAttributes_Calendar')"]}
{"Name": "}SubsetAttributes_Capital", "Dimensions@odata.bind": ["Dimensions('}Subsets_Capital')", "Dimensions('}SubsetAttributes_Capital')"]}
{"Name": "}SubsetAttributes_CapitalList", "Dimensions@odata.bind": ["Dimensions('}Subsets_CapitalList')", "Dimensions('}SubsetAttributes_CapitalList')"]}
{"Name": "}SubsetAttributes_Channel", "Dimensions@odata.bind": ["Dimensions('}Subsets_Channel')", "Dimensions('}SubsetAttributes_Channel')"]}
{"Name": "}SubsetAttributes_Compensation", "Dimensions@odata.bind": ["Dimensions('}Subsets_Compensation')", "Dimensions('}SubsetAttributes_Compensation')"]}
{"Name": "}SubsetAttributes_Currency", "Dimensions@odata.bind": ["Dimensions('}Subsets_Currency')", "Dimensions('}SubsetAttributes_Currency')"]}
{"Name": "}SubsetAttributes_Currency Calc", "Dimensions@odata.bind": ["Dimensions('}Subsets_Currency Calc')", "Dimensions('}SubsetAttributes_Currency Calc')"]}
{"Name": "}SubsetAttributes_Depreciation", "Dimensions@odata.bind": ["Dimensions('}Subsets_Depreciation')", "Dimensions('}SubsetAttributes_Depreciation')"]}
{"Name": "}SubsetAttributes_Employee", "Dimensions@odata.bind": ["Dimensions('}Subsets_Employee')", "Dimensions('}SubsetAttributes_Employee')"]}
{"Name": "}SubsetAttributes_EmployeeList", "Dimensions@odata.bind": ["Dimensions('}Subsets_EmployeeList')", "Dimensions('}SubsetAttributes_EmployeeList')"]}
{"Name": "}SubsetAttributes_Employee Name", "Dimensions@odata.bind": ["Dimensions('}Subsets_Employee Name')", "Dimensions('}SubsetAttributes_Employee Name')"]}
{"Name": "}SubsetAttributes_Exchange Rate", "Dimensions@odata.bind": ["Dimensions('}Subsets_Exchange Rate')", "Dimensions('}SubsetAttributes_Exchange Rate')"]}
{"Name": "}SubsetAttributes_Exchange Rate Type", "Dimensions@odata.bind": ["Dimensions('}Subsets_Exchange Rate Type')", "Dimensions('}SubsetAttributes_Exchange Rate Type')"]}
{"Name": "}SubsetAttributes_ExternalFactors", "Dimensions@odata.bind": ["Dimensions('}Subsets_ExternalFactors')", "Dimensions('}SubsetAttributes_ExternalFactors')"]}
{"Name": "}SubsetAttributes_jobcode", "Dimensions@odata.bind": ["Dimensions('}Subsets_jobcode')", "Dimensions('}SubsetAttributes_jobcode')"]}
{"Name": "}SubsetAttributes_JobCodeAsmpt", "Dimensions@odata.bind": ["Dimensions('}Subsets_JobCodeAsmpt')", "Dimensions('}SubsetAttributes_JobCodeAsmpt')"]}
{"Name": "}SubsetAttributes_JobType", "Dimensions@odata.bind": ["Dimensions('}Subsets_JobType')", "Dimensions('}SubsetAttributes_JobType')"]}
{"Name": "}SubsetAttributes_JobTypeAssumption", "Dimensions@odata.bind": ["Dimensions('}Subsets_JobTypeAssumption')", "Dimensions('}SubsetAttributes_JobTypeAssumption')"]}
{"Name": "}SubsetAttributes_LineItem_PickList", "Dimensions@odata.bind": ["Dimensions('}Subsets_LineItem_PickList')", "Dimensions('}SubsetAttributes_LineItem_PickList')"]}
{"Name": "}SubsetAttributes_LineItemDetail", "Dimensions@odata.bind": ["Dimensions('}Subsets_LineItemDetail')", "Dimensions('}SubsetAttributes_LineItemDetail')"]}
{"Name": "}SubsetAttributes_LineItemList", "Dimensions@odata.bind": ["Dimensions('}Subsets_LineItemList')", "Dimensions('}SubsetAttributes_LineItemList')"]}
{"Name": "}SubsetAttributes_Metrics", "Dimensions@odata.bind": ["Dimensions('}Subsets_Metrics')", "Dimensions('}SubsetAttributes_Metrics')"]}
{"Name": "}SubsetAttributes_Metrics Indicators", "Dimensions@odata.bind": ["Dimensions('}Subsets_Metrics Indicators')", "Dimensions('}SubsetAttributes_Metrics Indicators')"]}
{"Name": "}SubsetAttributes_Month", "Dimensions@odata.bind": ["Dimensions('}Subsets_Month')", "Dimensions('}SubsetAttributes_Month')"]}
{"Name": "}SubsetAttributes_MonthMap", "Dimensions@odata.bind": ["Dimensions('}Subsets_MonthMap')", "Dimensions('}SubsetAttributes_MonthMap')"]}
{"Name": "}SubsetAttributes_Month Reporting", "Dimensions@odata.bind": ["Dimensions('}Subsets_Month Reporting')", "Dimensions('}SubsetAttributes_Month Reporting')"]}
{"Name": "}SubsetAttributes_Numbered List", "Dimensions@odata.bind": ["Dimensions('}Subsets_Numbered List')", "Dimensions('}SubsetAttributes_Numbered List')"]}
{"Name": "}SubsetAttributes_OpExSubset_Picklist", "Dimensions@odata.bind": ["Dimensions('}Subsets_OpExSubset_Picklist')", "Dimensions('}SubsetAttributes_OpExSubset_Picklist')"]}
{"Name": "}SubsetAttributes_organization", "Dimensions@odata.bind": ["Dimensions('}Subsets_organization')", "Dimensions('}SubsetAttributes_organization')"]}
{"Name": "}SubsetAttributes_Organization Reporting", "Dimensions@odata.bind": ["Dimensions('}Subsets_Organization Reporting')", "Dimensions('}SubsetAttributes_Organization Reporting')"]}
{"Name": "}SubsetAttributes_PhasedCosts", "Dimensions@odata.bind": ["Dimensions('}Subsets_PhasedCosts')", "Dimensions('}SubsetAttributes_PhasedCosts')"]}
{"Name": "}SubsetAttributes_Plant", "Dimensions@odata.bind": ["Dimensions('}Subsets_Plant')", "Dimensions('}SubsetAttributes_Plant')"]}
{"Name": "}SubsetAttributes_product", "Dimensions@odata.bind": ["Dimensions('}Subsets_product')", "Dimensions('}SubsetAttributes_product')"]}
{"Name": "}SubsetAttributes_ProductSubset_PickList", "Dimensions@odata.bind": ["Dimensions('}Subsets_ProductSubset_PickList')", "Dimensions('}SubsetAttributes_ProductSubset_PickList')"]}
{"Name": "}SubsetAttributes_Rate Measure", "Dimensions@odata.bind": ["Dimensions('}Subsets_Rate Measure')", "Dimensions('}SubsetAttributes_Rate Measure')"]}
{"Name": "}SubsetAttributes_Relative Time", "Dimensions@odata.bind": ["Dimensions('}Subsets_Relative Time')", "Dimensions('}SubsetAttributes_Relative Time')"]}
{"Name": "}SubsetAttributes_Revenue", "Dimensions@odata.bind": ["Dimensions('}Subsets_Revenue')", "Dimensions('}SubsetAttributes_Revenue')"]}
{"Name": "}SubsetAttributes_RevenueAsmpt", "Dimensions@odata.bind": ["Dimensions('}Subsets_RevenueAsmpt')", "Dimensions('}SubsetAttributes_RevenueAsmpt')"]}
{"Name": "}SubsetAttributes_Spread Methods", "Dimensions@odata.bind": ["Dimensions('}Subsets_Spread Methods')", "Dimensions('}SubsetAttributes_Spread Methods')"]}
{"Name": "}SubsetAttributes_String", "Dimensions@odata.bind": ["Dimensions('}Subsets_String')", "Dimensions('}SubsetAttributes_String')"]}
{"Name": "}SubsetAttributes_Supply Chain Measures", "Dimensions@odata.bind": ["Dimensions('}Subsets_Supply Chain Measures')", "Dimensions('}SubsetAttributes_Supply Chain Measures')"]}
{"Name": "}SubsetAttributes_Task", "Dimensions@odata.bind": ["Dimensions('}Subsets_Task')", "Dimensions('}SubsetAttributes_Task')"]}
{"Name": "}SubsetAttributes_Task Workflow Measure", "Dimensions@odata.bind": ["Dimensions('}Subsets_Task Workflow Measure')", "Dimensions('}SubsetAttributes_Task Workflow Measure')"]}
{"Name": "}SubsetAttributes_TrxID", "Dimensions@odata.bind": ["Dimensions('}Subsets_TrxID')", "Dimensions('}SubsetAttributes_TrxID')"]}
{"Name": "}SubsetAttributes_TrxMeasures", "Dimensions@odata.bind": ["Dimensions('}Subsets_TrxMeasures')", "Dimensions('}SubsetAttributes_TrxMeasures')"]}
{"Name": "}SubsetAttributes_Version", "Dimensions@odata.bind": ["Dimensions('}Subsets_Version')", "Dimensions('}SubsetAttributes_Version')"]}
{"Name": "}SubsetAttributes_Version Subset Measures", "Dimensions@odata.bind": ["Dimensions('}Subsets_Version Subset Measures')", "Dimensions('}SubsetAttributes_Version Subset Measures')"]}
{"Name": "}SubsetAttributes_Version Subsets", "Dimensions@odata.bind": ["Dimensions('}Subsets_Version Subsets')", "Dimensions('}SubsetAttributes_Version Subsets')"]}
{"Name": "}SubsetAttributes_Year", "Dimensions@odata.bind": ["Dimensions('}Subsets_Year')", "Dimensions('}SubsetAttributes_Year')"]}
{"Name": "}tp_app_user_preferences", "Dimensions@odata.bind": ["Dimensions('}Clients')", "Dimensions('}tp_applications')", "Dimensions('}tp_app_user_preference')"]}
{"Name": "}tp_application_cubes", "Dimensions@odata.bind": ["Dimensions('}tp_applications')", "Dimensions('}Cubes')"]}
{"Name": "}tp_application_jobs", "Dimensions@odata.bind": ["Dimensions('}tp_jobs')", "Dimensions('}tp_job_info')"]}
{"Name": "}tp_application_permission}0f309cd0-4215-4482-8471-80ef000fcbb3", "Dimensions@odata.bind": ["Dimensions('}tp_tasks}0f309cd0-4215-4482-8471-80ef000fcbb3')", "Dimensions('}tp_permissions')"], "Rules": "[]=S:'Y';"}
{"Name": "}tp_application_root_permissions", "Dimensions@odata.bind": ["Dimensions('}tp_applications')", "Dimensions('}tp_root_permissions')"], "Rules": "[]=S:'Y';"}
{"Name": "}tp_application_state}0f309cd0-4215-4482-8471-80ef000fcbb3", "Dimensions@odata.bind": ["Dimensions('}tp_tasks}0f309cd0-4215-4482-8471-80ef000fcbb3')", "Dimensions('}tp_node_info')"]}
{"Name": "}tp_central_application_state", "Dimensions@odata.bind": ["Dimensions('}tp_applications')", "Dimensions('}tp_node_info')"]}
{"Name": "}tp_intermediate_ElementSecurity}organization", "Dimensions@odata.bind": ["Dimensions('organization')", "Dimensions('}Groups')", "Dimensions('}tp_intermediate_security_applications')", "Dimensions('}tp_intermediate_security_measures')"], "Rules": "#Region rule_reference_shadow_element_security_0f309cd0-4215-4482-8471-80ef000fcbb3\n['0f309cd0-4215-4482-8471-80ef000fcbb3','Rights']=S:IF(DB('}ElementSecurity_}tp_tasks}0f309cd0-4215-4482-8471-80ef000fcbb3',!organization, !}Groups)@<>'',DB('}ElementSecurity_}tp_tasks}0f309cd0-4215-4482-8471-80ef000fcbb3',!organization, !}Groups),CONTINUE);\n\n#EndRegion\n['WriteCount'] =IF(!}tp_intermediate_security_applications@<>'all_applications', IF(DB('}tp_intermediate_ElementSecurity}organization',!organization,!}Groups,!}tp_intermediate_security_applications,'Rights')@= 'WRITE',1, 0 ),Continue);\n['ReadCount'] =IF(!}tp_intermediate_security_applications@<>'all_applications', IF(DB('}tp_intermediate_ElementSecurity}organization',!organization,!}Groups,!}tp_intermediate_security_applications,'Rights')@= 'READ',1, 0 ),Continue);\n['all_applications','WriteCount']=ConsolidateChildren('}tp_intermediate_security_applications');\n['all_applications','ReadCount']=ConsolidateChildren('}tp_intermediate_security_applications');\n['all_applications','Rights']=S:IF(DB('}tp_intermediate_ElementSecurity}organization',!organization,!}Groups,!}tp_intermediate_security_applications,'WriteCount')>0, 'WRITE', CONTINUE);\n['all_applications','Rights']=S:IF(DB('}tp_intermediate_ElementSecurity}organization',!organization,!}Groups,!}tp_intermediate_security_applications,'ReadCount')>0, 'READ', '');"}
{"Name": "}tp_process_errors", "Dimensions@odata.bind": ["Dimensions('}tp_process_guids')", "Dimensions('}tp_process_error_measures')"]}
{"Name": "}tp_task_navigations}0f309cd0-4215-4482-8471-80ef000fcbb3", "Dimensions@odata.bind": ["Dimensions('}tp_tasks}0f309cd0-4215-4482-8471-80ef000fcbb3')", "Dimensions('}tp_task_navigation_dims}0f309cd0-4215-4482-8471-80ef000fcbb3')", "Dimensions('}tp_task_navigations')"]}
{"Name": "}tp_workflow_action_TI", "Dimensions@odata.bind": ["Dimensions('}tp_applications')", "Dimensions('}tp_workflow_actions')", "Dimensions('}tp_workflow_action_TI_measures')"]}
{"Name": "}ViewAttributes_Allocation Calculation", "Dimensions@odata.bind": ["Dimensions('}Views_Allocation Calculation')", "Dimensions('}ViewAttributes_Allocation Calculation')"]}
{"Name": "}ViewAttributes_Allocation Source Definition", "Dimensions@odata.bind": ["Dimensions('}Views_Allocation Source Definition')", "Dimensions('}ViewAttributes_Allocation Source Definition')"]}
{"Name": "}ViewAttributes_Asset Life", "Dimensions@odata.bind": ["Dimensions('}Views_Asset Life')", "Dimensions('}ViewAttributes_Asset Life')"]}
{"Name": "}ViewAttributes_Benefit Assumptions", "Dimensions@odata.bind": ["Dimensions('}Views_Benefit Assumptions')", "Dimensions('}ViewAttributes_Benefit Assumptions')"]}
{"Name": "}ViewAttributes_Calendar", "Dimensions@odata.bind": ["Dimensions('}Views_Calendar')", "Dimensions('}ViewAttributes_Calendar')"]}
{"Name": "}ViewAttributes_Capital", "Dimensions@odata.bind": ["Dimensions('}Views_Capital')", "Dimensions('}ViewAttributes_Capital')"]}
{"Name": "}ViewAttributes_Compensation", "Dimensions@odata.bind": ["Dimensions('}Views_Compensation')", "Dimensions('}ViewAttributes_Compensation')"]}
{"Name": "}ViewAttributes_Compensation Reporting", "Dimensions@odata.bind": ["Dimensions('}Views_Compensation Reporting')", "Dimensions('}ViewAttributes_Compensation Reporting')"]}
{"Name": "}ViewAttributes_Depreciation", "Dimensions@odata.bind": ["Dimensions('}Views_Depreciation')", "Dimensions('}ViewAttributes_Depreciation')"]}
{"Name": "}ViewAttributes_Employee", "Dimensions@odata.bind": ["Dimensions('}Views_Employee')", "Dimensions('}ViewAttributes_Employee')"]}
{"Name": "}ViewAttributes_Exchange Rates", "Dimensions@odata.bind": ["Dimensions('}Views_Exchange Rates')", "Dimensions('}ViewAttributes_Exchange Rates')"]}
{"Name": "}ViewAttributes_ExternalFactors", "Dimensions@odata.bind": ["Dimensions('}Views_ExternalFactors')", "Dimensions('}ViewAttributes_ExternalFactors')"]}
{"Name": "}ViewAttributes_FcstMethod", "Dimensions@odata.bind": ["Dimensions('}Views_FcstMethod')", "Dimensions('}ViewAttributes_FcstMethod')"]}
{"Name": "}ViewAttributes_GLTransactions", "Dimensions@odata.bind": ["Dimensions('}Views_GLTransactions')", "Dimensions('}ViewAttributes_GLTransactions')"]}
{"Name": "}ViewAttributes_Income Statement", "Dimensions@odata.bind": ["Dimensions('}Views_Income Statement')", "Dimensions('}ViewAttributes_Income Statement')"]}
{"Name": "}ViewAttributes_Income Statement Reporting", "Dimensions@odata.bind": ["Dimensions('}Views_Income Statement Reporting')", "Dimensions('}ViewAttributes_Income Statement Reporting')"]}
{"Name": "}ViewAttributes_Job Code Assumptions", "Dimensions@odata.bind": ["Dimensions('}Views_Job Code Assumptions')", "Dimensions('}ViewAttributes_Job Code Assumptions')"]}
{"Name": "}ViewAttributes_Job Type Assumption", "Dimensions@odata.bind": ["Dimensions('}Views_Job Type Assumption')", "Dimensions('}ViewAttributes_Job Type Assumption')"]}
{"Name": "}ViewAttributes_Line Item Detail", "Dimensions@odata.bind": ["Dimensions('}Views_Line Item Detail')", "Dimensions('}ViewAttributes_Line Item Detail')"]}
{"Name": "}ViewAttributes_Metrics", "Dimensions@odata.bind": ["Dimensions('}Views_Metrics')", "Dimensions('}ViewAttributes_Metrics')"]}
{"Name": "}ViewAttributes_Phased Costs", "Dimensions@odata.bind": ["Dimensions('}Views_Phased Costs')", "Dimensions('}ViewAttributes_Phased Costs')"]}
{"Name": "}ViewAttributes_Rate BOM", "Dimensions@odata.bind": ["Dimensions('}Views_Rate BOM')", "Dimensions('}ViewAttributes_Rate BOM')"]}
{"Name": "}ViewAttributes_Relative Time", "Dimensions@odata.bind": ["Dimensions('}Views_Relative Time')", "Dimensions('}ViewAttributes_Relative Time')"]}
{"Name": "}ViewAttributes_Revenue", "Dimensions@odata.bind": ["Dimensions('}Views_Revenue')", "Dimensions('}ViewAttributes_Revenue')"]}
{"Name": "}ViewAttributes_Revenue Assumptions", "Dimensions@odata.bind": ["Dimensions('}Views_Revenue Assumptions')", "Dimensions('}ViewAttributes_Revenue Assumptions')"]}
{"Name": "}ViewAttributes_Revenue Reporting", "Dimensions@odata.bind": ["Dimensions('}Views_Revenue Reporting')", "Dimensions('}ViewAttributes_Revenue Reporting')"]}
{"Name": "}ViewAttributes_Social Media", "Dimensions@odata.bind": ["Dimensions('}Views_Social Media')", "Dimensions('}ViewAttributes_Social Media')"]}
{"Name": "}ViewAttributes_Spread Methods", "Dimensions@odata.bind": ["Dimensions('}Views_Spread Methods')", "Dimensions('}ViewAttributes_Spread Methods')"]}
{"Name": "}ViewAttributes_Supply Chain", "Dimensions@odata.bind": ["Dimensions('}Views_Supply Chain')", "Dimensions('}ViewAttributes_Supply Chain')"]}
{"Name": "}ViewAttributes_Task Workflow", "Dimensions@odata.bind": ["Dimensions('}Views_Task Workflow')", "Dimensions('}ViewAttributes_Task Workflow')"]}
{"Name": "}ViewAttributes_Version Copy Control", "Dimensions@odata.bind": ["Dimensions('}Views_Version Copy Control')", "Dimensions('}ViewAttributes_Version Copy Control')"]}
{"Name": "}ViewAttributes_Version Subset Control", "Dimensions@odata.bind": ["Dimensions('}Views_Version Subset Control')", "Dimensions('}ViewAttributes_Version Subset Control')"]}
{"Name": "}ViewAttributes_Workflow Reporting", "Dimensions@odata.bind": ["Dimensions('}Views_Workflow Reporting')", "Dimensions('}ViewAttributes_Workflow Reporting')"]}